{
  "openapi": "3.0.0",
  "info": {
    "title": "Eventbrite API v3",
    "description": "## About our API\n\n| New to APIs? Check out [Intro to APIs](https://www.eventbrite.com/platform/docs/introduction) first to get up to speed. |\n| :---------------- | :---------------------------------- | :------------------------------------------------------------------------------------------------ |\n\nThe Eventbrite API:\n\n* Is [REST](https://developer.mozilla.org/en-US/docs/Glossary/REST)-based (though we use POST instead of PUT).\n\n* Uses OAuth2 for authorization.\n\n* Always returns responses in [JSON](https://json.org/).\n\nAll URLs referenced in the API documentation have the following base: https://www.eventbriteapi.com/v3.\n\nFor the examples in this guide, we'll be using the [python-requests](https://github.com/kennethreitz/requests) library.\n\n## Authentication\n\n1. [Get a Private Token](#get-a-private-token)\n\n2. [(For App Partners) Authorize your Users](#authorize-your-users)\n\n3. [Authenticate API Requests](#authenticate-api-requests)\n\n<a name=\"get-a-private-token\"></a>\n\n### 1. Get a Private Token\n\na. Log in to your Eventbrite account and visit [your API Keys page](https://www.eventbrite.com/platform/api-keys).\n\nb. Copy your private token.\n\n<a name=\"authorize-your-users\"></a>\n\n### 2. (For App Partners) Authorize your Users\n\nNote: These steps enable you to perform API requests on behalf of other users. To perform API requests on your own behalf, skip to [Authenticate API Requests](#authenticate-api-requests).\n\n#### Authorize Users\n\nWhat You'll Need:\n\n* API Key\n\n* Client Secret\n\n* Redirect URI\n\nNote: To find this information, visit [your API Key Management page](https://www.eventbrite.com/account-settings/apps).\n\nThe Eventbrite API uses [OAuth 2.0](https://oauth.net/2/) for authorization.\n\nThere are two ways to authorize users: Server-side and client-side. We strongly recommend handling authorization on the server side for security reasons.\n\n* Server-Side Authorization (Recommended)\n\n    a. Redirect users to our authorization URL, while including your API key and redirect URI as query parameters:\n    `https://www.eventbrite.com/oauth/authorize?response_type=code&client_id=YOUR_API_KEY&redirect_uri=YOUR_REDIRECT_URI`\n\n    When the user authorizes your app, your redirect URI will receive a request from our authorization server with your access code included as a query parameter.\n\n    Here's an example of the URI you will be redirected to (with the access code included as a query parameter):\n    `http://localhost:8080/oauth/redirect?code=YOUR_ACCESS_CODE`\n\n    b. Send a POST request to `https://www.eventbrite.com/oauth/token` that specifies the grant type and includes your access code, client secret, and API key. This data should be sent as part of your request header.\n\n    Here's an example of a POST request using cURL:\n\n    ```\n    curl --request POST \\\n    --url 'https://www.eventbrite.com/oauth/token' \\\n    --header 'content-type: application/x-www-form-urlencoded' \\\n    --data grant_type=authorization_code \\\n    --data 'client_id=API_KEY \\\n    --data client_secret=CLIENT_SECRET \\\n    --data code=ACCESS_CODE \\\n    --data 'redirect_uri=REDIRECT_URI'\n    ```\n\n    The server will verify the access code and call your redirect URI. The user's private token will be available in the JSON response. Use this private token to make API requests on behalf of this user.\n\n* Client-Side Authorization\n\n    a. Redirect users to our authorization URL, while including your API key and redirect URI as query parameters:\n    `https://www.eventbrite.com/oauth/authorize?response_type=token&client_id=YOUR_API_KEY&redirect_uri=YOUR_REDIRECT_URI`\n\n    When the user authorizes your app, your redirect URI will receive a request with the private token included as a query parameter.\n\nNext up: Follow the steps in [Authenticate API Requests](#authenticate-api-requests).\n\n<a name=\"authenticate-api-requests\"></a>\n\n### 3. Authenticate API Requests\n\nTo authenticate API requests, you'll need to include either your private token or your user's private token.\n\nThere are two ways of including your token in an API request:\n\n* Authorization Header\n\n    Include the following in your Authorization header (replacing MYTOKEN with your token):\n\n    { Authorization: Bearer MYTOKEN }\n\n* Query Parameter Authentication\n\n    Include the following at the end of the URL (replacing MYTOKEN with your token):\n\n    /v3/users/me/?token=MYTOKEN\n\nFor every user you would like to perform API requests on behalf of, repeat [(For App Partners) Authorize your Users](#authorize-your-users) and [Authenticate API Requests](#authenticate-api-requests).\n<a name=\"best-practices\"></a>\n\n### Best practices\n\nThese best practices ensure that your authentication and access to the Eventbrite API is successful and secure.\n\n#### Do not use your private token directly in client-side code.\n\nBefore you make your application publicly available, ensure that your client-side code does not contain private tokens or any other private information.\n\n#### Delete unneeded API keys\n\nTo minimize your exposure to attack, delete any private tokens that you no longer need.\n\n## Errors\n\nWhen an error occurs during an API request, you will receive:\n\n* An HTTP error status (in the 400-500 range)\n\n* A JSON response containing more information about the error\n\nA typical error response looks like this:\n\n<pre><code>\n{\n    \"error\": \"VENUE_AND_ONLINE\",\n    \"error_description\": \"You cannot both specify a venue and set online_event\",\n    \"status_code\": 400\n}\n</code></pre>\n\nSee below for descriptions of what each line means:\n\n| Example                                                                      | Description                                                                                                                                                                                                                                       |\n| :--------------------------------------------------------------------------- | :------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |\n| {                                                                            |                                                                                                                                                                                                                                                   |\n| \"error\": \"VENUE_AND_ONLINE\",                                                 | â€œVENUE_AND_ONLINEâ€ is an example of a constant string value for the error. This constant value is what you should base your error handling logic on, because this string wonâ€™t change depending on the locale or as the API changes over time.    |\n| \"error_description\": \"You cannot both specify a venue and set online_event\", | \"You cannot both specify a venue and set online_event\" is an example of an error description value. This string usually contains a description of the error, and should only be displayed to developers, not your users.                          |\n| \"status_code\": 400                                                           | 400 is an example of a status code value. This value mirrors the HTTP status code you will receive. Itâ€™s included for convenience, in case your HTTP client makes it difficult to get status codes, or has one error handler for all error codes. |\n|  }                                                                           |                                                                                                                                                                                                                                                   |\n\n### Common Errors\n\nYou can find a listing of the individual errors for each endpoint on their endpoint entries, but there are also some common errors that all endpoints might return:\n\n| Status Code | Text                    | Description                                                                                                                                                          |\n| :---------- | :---------------------- | :------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| 301         | PERMANENTLY_MOVED       | Resource must be retrieved from a different URL.                                                                                                                     |\n| 400         | ACTION_NOT_PROCESSED    | Requested operation not processed.                                                                                                                                   |\n| 400         | ARGUMENTS_ERROR         | There are errors with your arguments.                                                                                                                                |\n| 400         | BAD_CONTINUATION_TOKEN  | Invalid continuation token passed.                                                                                                                                   |\n| 400         | BAD_PAGE                | Page number does not exist or is an invalid format (e.g. negative).                                                                                                  |\n| 400         | BAD_REQUEST             | The resource youâ€™re creating already exists.                                                                                                                         |\n| 400         | INVALID_ARGUMENT        | Invalid argument value passed.                                                                                                                                       |\n| 400         | INVALID_AUTH            | Authentication/OAuth token is invalid.                                                                                                                               |\n| 400         | INVALID_AUTH_HEADER     | Authentication header is invalid.                                                                                                                                    |\n| 400         | INVALID_BATCH           | Batched request is missing or invalid.                                                                                                                               |\n| 400         | INVALID_BODY            | A request body that was not in JSON format was passed.                                                                                                               |\n| 400         | UNSUPPORTED_OPERATION   | Requested operation not supported.                                                                                                                                   |\n| 401         | ACCESS_DENIED           | Authentication unsuccessful.                                                                                                                                         |\n| 401         | NO_AUTH                 | Authentication not provided.                                                                                                                                         |\n| 403         | NOT_AUTHORIZED          | User has not been authorized to perform that action.                                                                                                                 |\n| 404         | NOT_FOUND               | Invalid URL.                                                                                                                                                         |\n| 405         | METHOD_NOT_ALLOWED      | Method is not allowed for this endpoint.                                                                                                                             |\n| 409         | REQUEST_CONFLICT        | Requested operation resulted in conflict.                                                                                                                            |\n| 429         | HIT_RATE_LIMIT          | Hourly rate limit has been reached for this token. Default rate limits are 2,000 calls per hour.                                                                     |\n| 500         | EXPANSION_FAILED        | Unhandled error occurred during expansion; the request is likely to succeed if you donâ€™t ask for expansions, but <a href=\"https://www.eventbrite.com/platform/docs/contact\" target=\"_blank\">contact Eventbrite support</a> if this problem persists. |\n| 500         | INTERNAL_ERROR          | Unhandled error occurred in Eventbrite. <a href=\"https://www.eventbrite.com/platform/docs/contact\" target=\"_blank\">contact Eventbrite support</a> if this problem persists.                                                                          |\n\n## Paginated Responses\n\n### What's in a paginated response?\n\nAn Eventbrite paginated response is made up of two main sections: A pagination header and a list of objects.\n\nHere's an example of a paginated response:\n\n```\n{\n  \"pagination\": {\n    \"object_count\": 4,\n    \"continuation\": \"AEtFRyiWxkr0ZXyCJcnZ5U1-uSWXJ6vO0sxN06GbrDngaX5U5i8XYmEuZfmZZYB9Uq6bSizOLYoV\",\n    \"page_count\": 2,\n    \"page_size\": 2,\n    \"has_more_items\": true,\n    \"page_number\": 1\n  },\n  \"categories\": [\n    {\n      \"slug\": \"email\",\n      \"name_localized\": \"Email\",\n      \"name\": \"Email\",\n      \"id\": \"7\"\n    },\n    {\n      \"slug\": \"website\",\n      \"name_localized\": \"Website\",\n      \"name\": \"Website\",\n      \"id\": \"5\"\n    },\n  ]\n}\n```\n\nHere are descriptions of what each attribute within a pagination header means:\n\n| Attribute         | Example                             | Description                                                                                       |\n| :---------------- | :---------------------------------- | :------------------------------------------------------------------------------------------------ |\n| `object_count`    | `4`                                 | The total number of objects found in your response, across all pages.                             |\n| `continuation`    | `AEtFRyiWxkr0Z`<br>`XyCJcnZ5U1-uS`<br>`WXJ6vO0sxN06G`<br>`brDngaX5U5i8X`<br>`YmEuZfmZZYB`<br>`9Uq6bSizOLYoV`        | The continuation token you'll use to get to the next set of results by making the same request again but including this token. Your results will always include a new continuation token that you can use to jump to the next page. When all records have been retrieved, the continuation token will return an empty list of objects. |\n| `page_count`      | `2`                                 | The total number of pages found in your response.                                                 |\n| `page_size`       | `2`                                 | The maximum number of objects that can be returned per page for this API endpoint.                |\n| `has_more_items`  | `true`                              | Boolean indicating whether or not there are more items in your response. In this example, the object is â€œtrueâ€, so there are more items. When all records have been retrieved, this attribute will be â€œfalseâ€.                                                                         |\n| `page_number`     | `1`                                 | The page number you are currently viewing (always starts at 1).                                   |\n\n### Using a continuation token\n\nHere's how to use a continuation token to jump to the next page of results:\n\n1. Make a call to any listing endpoint that retrieves a paginated response. <br> <br> \nYour format will vary, but it might look something like this: GET https://www.eventbriteapi.com/v3/categories/.\n\n2. Verify that the â€œhas_more_itemsâ€ attribute is â€œtrueâ€ before continuing. If it is â€œfalseâ€, there are no additional pages to retrieve, so you can stop here.\n\n3. Copy the continuation token from your response.\n\n4. Call the endpoint again, after adding a continuation token as a query string parameter to the URI. <br> <br> Your call format will vary, but it might look something like this: https://www.eventbriteapi.com/v3/categories/?**continuation=AEtFRyiWxkr0ZXyCJcnZ5U1-uSWXJ6vO0sxN06GbrDngaX5U5i8XYmEuZfmZZYB9Uq6bSizOLYoV**\n\n5. Repeat until all desired records have been retrieved.\n\n## Expansions\n\nEventbrite has many models that refer to each other, and often youâ€™ll want to fetch related data along with the primary\nmodel youâ€™re queryingâ€”for example, you may want to fetch an organizer along with each event you get back. The way of \ndoing this in the Eventbrite API is called \"expansions\": you can specify a set of relationships to additionally fetch \nwith every call, which reduces the number of API requests you must make to obtain your data.\n\nWhen using expansions, note that each expansion you specify will slow down your API request slightly, so try to use as\nfew expansions as possible to ensure faster response times.\n\nThe available expansions are based on the type of object that the API is returning; each of the return formats lists\navailable expansions, as you can see in the event and attendee documentation, for example.\n\n### Requesting Expansions\n\nThe Eventbrite API is currently undergoing an upgrade to its expansions system, so the ways you request an expansion \nvaries based on the API endpoint. The two sections below describe the two different request formats, but important is\ndetermining which request format an API endpoint supports.\n\nIf an endpoint's top-level response object contains an attribute named `_type`, that endpoint has been upgraded to\nExpansions v2 and also supports Expansions v1 for backwards compatibility. If the top-level response object does not\ncontain an attribute named `_type`, it has not yet been upgraded and supports <em>only</em> Expansions v1 at this time.\n\nAt some point in the future, after all endpoints have been upgraded to Expansions v2, Expansions v1 will be deprecated\nand then later removed. Eventbrite will communicate this deprecation period and removal date when the upgrade is\ncomplete and that decision has been made.\n\n#### Expansions v1\n\nIf you are already an API user, this is the expansions system with which you are likely already familiar. To request\nan expansion, pass a comma-separated list of expansion names as the `expand=` querystring argument in your URL.\n\n<em>For example, to fetch all my own events with organizers and venues expanded:</em>\n\n`/v3/users/me/owned_events/?expand=organizer,venue`\n\nSometimes you might want to expand the attributes of an object that has itself been returned by an expansion.\n\n<em>For example, you may have a list of orders and want to retrieve the event for each of those orders and the venue\nfor each of those events:</em>\n\n`/v3/users/me/orders/?expand=event.venue`\n\nExpansions can be nested in this way <b>up to four levels deep</b>.\n\n#### Expansions v2 (Recommended if Available)\n\nThis new version of expansions is similar, but keys off the `_type` attributes in the response. A response contains\neither a top-level object or a list of top-level objects. In that object or those objects, attribute values might be\nother objects or lists of objects. All objects that support expansions will contain a `_type` attribute, and within a\nlist of objects, the value of `_type` will be the same for all objects. When requesting an expansion, you pass a series\nof `expand.[value of _type]=` querystring arguments in the URL, with the value of each argument being the list of\nrequested expansions for that object type.\n\nGiven a normal, non-expanded response like this:\n\n<pre><code>{\n    \"_type\": \"event\",\n    \"name\": \"My Cool Event\",\n    \"organizer_id\": \"1234\",\n    \"venue_id\": \"5678\",\n    ...\n}\n</code></pre>\n\nYou could expand the organizer and venue with the following argument:\n\n`?expand.event=organizer,venue`\n\nWhich would result in the following change to the response:\n\n<pre><code>{\n    \"_type\": \"event\",\n    \"name\": \"My Cool Event\",\n    \"organizer_id\": \"1234\",\n    \"organizer\": {\n        \"id\": \"1234\",\n        ...\n    },\n    \"venue_id\": \"5678\",\n    \"venue\": {\n        \"id\": \"5678\",\n        ...\n    },\n    ...\n}\n</code></pre>\n\nExpansions v2 normally makes no distinction between top-level and nested expansions. Expansions belong to object types,\nnot response levels, so you can achieve \"nested\" expansions by specifying expansions for all the object types you\nexpect to receive and want to expand at any level. For example, given a normal, non-expanded response like this:\n\n<pre><code>{\n    \"_type\": \"order\",\n    \"event_id\": \"9012\",\n    ...\n}\n</code></pre>\n\nYou can expand not only the order's event, but also the event's organizer and venue, with these arguments:\n\n`?expand.order=event&expand.event=organizer,venue`\n\nAnd receive a new response like this:\n\n<pre><code>{\n    \"_type\": \"order\",\n    \"event_id\": \"9012\",\n    \"event\": {\n        \"_type\": \"event\",\n        \"name\": \"My Cool Event\",\n        \"organizer_id\": \"1234\",\n        \"organizer\": {\n            \"id\": \"1234\",\n            ...\n        },\n        \"venue_id\": \"5678\",\n        \"venue\": {\n            \"id\": \"5678\",\n            ...\n        },\n        ...\n    },\n    ...\n}\n</code></pre>\n\nHowever, this will expand all order events and all event organizers and venues, at any level, which may not be what you\nwish to achieve. If you know you want an item expanded only at a certain level, you can instead use nested expansions.\nThese arguments are equivalent to the previous example:\n\n`?expand.order=event,event.organizer,event.venue`\n\nAll of these examples are just thatâ€”examples. The exact format of a response, and its available expansions, will depend\nentirely on which API endpoint you are calling.\n\n## API Switches\n\n### What do switches do?\n\nSwitches allow for the dynamic modification of Eventbrite API endpoint behaviors. They can be used to enable new or experimental features, change response formats, and other behaviors. In general, switches are used to ease the process of phasing in new API features that would otherwise break clients. Clients may activate or deactivate switchable features by setting switch headers on API requests.\n\n### Switch lifecycle\n\nA feature and its switch go through three phases:\n\n- Opt-in, in which a new switch will be available to turn on the new feature.\n\n- Opt-out, in which the feature will be on by default and the switch will be available to turn it off.\n\n- Fully integrated, at which time the switch will be deprecated.\n\n> Eventbrite will notify all API consumers before any switchable feature is introduced or enters a new phase.\n\n### Public and protected switches\n\nSwitches may be exposed only to certain clients, at Eventbriteâ€™s discretion. Such switches will be restricted to a set of whitelisted API keys, and any client attempting to set a protected switch using a non-whitelisted API key will get a permission error.\n\nSwitches that are not protected are available to be used by any client.\n\n### Using switches\n\n#### Making a request using switch headers\n\nClients use request headers to set switches on API requests. A switch header may contain any number of switch names, separated by commas. Switch names consist of letters, numbers and underscores, and are case-insensitive.\n\nTo use the example of a switch called â€œEVENT_FORMAT_OCT_2016â€ that activates a new Event serialization format:\n\n<pre><code>GET /v3/events/12345/ Eb-Api-Switches-Enabled: EVENT_FORMAT_OCT_2016\nThis call will return the event with ID 12345 using the new format.</code></pre>\n\nIf the same switch were opt-out, and the client needed to make a request using the old Event format, it would deactivate the switch like so:\n\n<pre><code>GET /v3/events/12345/ Eb-Api-Switches-Disabled: EVENT_FORMAT_OCT_2016\nThis call would return the event using the old format.</code></pre>\n\n### Errors\n\nA request containing switch headers may return the following error codes:\n\n**409 REQUEST_CONFLICT:** Conflicting switches were passed. This happens if the client passes the same switch in both the Enabled and Disabled headers.\n**403 NOT_AUTHORIZED:** The client sent a header for a switch that it is not allowed to set.\n**400 BAD_REQUEST:** The client sent a header for a switch that does not exist or has been deprecated.\n\n## Basic Types\n\n### Integer\n\n`10`\n\nA standard JSON integer.\n\n### Boolean\n\n`true`\n\nA standard JSON boolean.\n\n### String\n\n`\"Ihre Aal ist r\\u00fcckw\\u00e4rts\"`\n\nA standard JSON string.\n\n(When POSTing data as `application/x-www-form-urlencoded`, use a UTF-8\nencoded string instead rather than unicode escapes)\n\n### Float\n\n`72.19381730`\n\nA standard JSON floating-point decimal.\n\n### Decimal\n\n`\"72.19381730\"`\n\nAn arbitrary-precision decimal number encoded as a standard JSON string. Decimals are used in cases where\nfloating-point arithmetic inaccuracies could arise with standard JSON floating-point decimals.\n\n### Date Types\n\nThere are four types of date formats:\n\n* Date\n\n* Datetime\n\n* Local Datetime\n\n* Datetime with Timezone\n\n#### Date\n\n`\"2010-01-31\"`\n\nDate represents a date as a string in ISO8601 date format. If you wish to represent a time as well, you'll need to use Datetime, Local Datetime, or Datetime with Timezone.\n\n#### Datetime\n\n`\"2010-01-31T13:00:00Z\"`\n\nDatetime represents a date and time as a string in ISO8601 combined date and time format in UTC (Coordinated Universal Time).\n\n#### Local Datetime\n\n`\"2010-01-31T13:00:00\"`\n\nLocal Datetime represents a date and time as a string in Naive Local ISO8601 date and time format in the timezone of the event.\n\n#### Datetime with Timezone\n\nThis value is only used for fields where the timezone itself is important information (for example, event start times).\n\n<pre><code>{\n    \"timezone\": \"America/Los_Angeles\",\n    \"utc\": \"2018-05-12T02:00:00Z\",\n    \"local\": \"2018-05-11T19:00:00\"\n}\n</code></pre>\n\n| Value                                  | Type       | Description                                   |\n| :------------------------------------- | :--------  | :-------------------------------------------- |\n| `\"timezone\": \"America/Los_Angeles\"`    | `string`   | A timezone value from the Olson specification |\n| `\"utc\": \"2018-05-12T02:00:00Z\"`        | `datetime` | A datetime value in the UTC timezone          |\n| `\"local\": \"2018-05-11T19:00:00`        | `datetime` | A datetime value in the named timezone        |\n\nWhen being sent as a request:\n\n* `utc` and `timezone` are required\n\n* `local` is ignored\n\n### List\n\n<pre><code>[1, 2, 3, 4]\n\"1,2,3,4\"\n</code></pre>\n\nA list of literal values. With a content-type of `application/json`, it\nshould be a JSON array of literals, otherwise, for\n`application/x-www-form-urlencoded` it should be a string than is a comma\nseparated list of values.\n\n### Object List\n\n<pre><code>[{\"name1\": \"val1\", \"name2\": \"val2\"}, {...}]\n\"[{\\\"name1\\\": \\\"val1\\\", \\\"name2\\\": \\\"val2\\\"}, {...}]\"\n</code></pre>\n\nA JSON list of object values. With a content-type of `application/json`, it\nshould be a JSON array, otherwise, for `application/x-www-form-urlencoded`\nit should be a string encoding of a JSON array.\n\n### Dictionary\n\n<pre><code>{\"key1\": \"value1\", \"key2\": {\"objectkey\": \"value\"}, \"key3\": [list_values], {...}}\n\"{\\\"key2\\\": {\\\"key3\\\": \\\"value\\\"}, \\\"key1\\\": \\\"value\\\", \\\"key4\\\": [\\\"value\\\", \\\"value\\\"]}\"\n</code></pre>\n\nA JSON object representation of a dictionary. With a content-type of\n`application/json`, it should be a JSON object, otherwise, for\n`application/x-www-form-urlencoded` it should be a string encoding\nof a JSON object.\n\n### Multipart Text\n\n<pre><code>{\n    \"text\": \"Event Name\",\n    \"html\": \"<b>Event</b> Name\",\n}\n</code></pre>\n\nReturned for fields which represent HTML, like event names\nand descriptions.\n\nThe `html` key represents the original HTML (which _should_\nbe sanitized and free from injected script tags etc., but as always, be careful\nwhat you put in your DOM), while the `text` key is a stripped version useful\nfor places where you can't or don't need to display the full HTML version.\n\n### Country Code\n\n`\"AR\"`\n\nThe ISO 3166 alpha-2 code of a country.\n\n### Currency Code\n\n`\"USD\"`\n\nAn ISO 4217 3-character code of a currency\n\n### Currency\n\n<pre><code>{\n    \"currency\": \"USD\",\n    \"value\": 432,\n    \"major_value\": \"4.32\",\n    \"display\": \"4.32 USD\"\n}\n</code></pre>\n\nWhen submitting as form-encoded POST data, you can instead provide a string\nindicating the currency and the value separated by a comma, e.g. `USD,432` -\nhowever, when you submit a JSON POST body, you must submit this as a JSON\nobject with the `currency` and `value` fields.\n\nReturned for monetary values, such as ticket prices, fees charged and\ntax amounts.\n\nCurrencies are represented as their currency code and an integer value,\nwhere the code is the currency code as defined by\n`ISO 4217 <http://en.wikipedia.org/wiki/ISO_4217>`\\_ and the integer value\nis the number of units of the minor unit of the currency (e.g. cents for\nUS dollars).\n\nYou can get a value in the currency's major unit - for example, dollars\nor pound sterling - by taking the integer value provided and shifting the\ndecimal point left by the exponent value for that currency as defined in\n`ISO 4217 <http://en.wikipedia.org/wiki/ISO_4217>`\\_.\n\nFor example, the exponent for USD (the US dollar) is 2, so a value of\n`2311` becomes `$23.11`. For JPY (the Japanese yen) it's 0, so\na value of `2311` becomes `Â¥2311`.\n\nEventbrite does not currently sell tickets in non-decimal currencies,\nsuch as the Malagasy ariary (MGA), but any value for them would also be\nreturned in minor units (for example, `(\"MGA\", 7)` would mean 1.2 MGA,\nor 1 ariary and 2 francs).\n\nThe `display` value is provided for your convenience; its formatting\nmay change depending on the locale you query the API with (for example,\ncommas for decimal separators in European locales).\n\n### Address\n\n<pre><code>{\n    \"address_1\": \"333 O'Farrell St\",\n    \"address_2\": \"Suite 400\",\n    \"city\": \"San Francisco\",\n    \"region\": \"CA\",\n    \"postal_code\": \"94102\",\n    \"country\": \"US\",\n    \"latitude\": \"37.7576792\",\n    \"longitude\": \"-122.5078119\",\n    \"localized_address_display\": \"333 O'Farrell St Suite 400, San Francisco, CA 94102\",\n    \"localized_area_display\": \"San Francisco, CA\",\n    \"localized_multi_line_address_display\": [\"333 O'Farrell St\", \"Suite 400\", \"San Francisco, CA 94102\"]\n}\n</code></pre>\n\nThough address formatting varies considerably between different countries and\nregions, Eventbrite still has a common address return format to keep things\nconsistent.\n\nIn general, you should treat `address_1`, `address_2`, `city`, and\n`region` as opaque lines of the address printed in that order. The\n`postal_code` field contains the local postal or zip code equivalent, if\navailable, and the `country` field contains the `ISO 3166 <http://en.wikipedia.org/wiki/ISO_3166-1>`\\_\ncountry code for the country (with the name of the country broken out\nfor your convenience).\n\nAll fields apart from `address_1` and `country` are optional.\n\n#### Address Fields\n\n| Field                                  | Type      | Description                                                                                                                 |\n| :------------------------------------- | :-------- | --------------------------------------------------------------------------------------------------------------------------- |\n| `address_1`                            | `string`  | The street/location address (part 1)                                                                                        |\n| `address_2`                            | `string`  | The street/location address (part 2)                                                                                        |\n| `city`                                 | `string`  | The city                                                                                                                    |\n| `region`                               | `string`  | The ISO 3166-2 2- or 3-character region code for the state, province, region, or district                                   |\n| `postal_code`                          | `string`  | The postal code                                                                                                             |\n| `country`                              | `string`  | The ISO 3166-1 2-character international code for the country                                                               |\n| `latitude`                             | `decimal` | The latitude portion of the address coordinates                                                                             |\n| `longitude`                            | `decimal` | The longitude portion of the address coordinates                                                                            |\n| `localized_address_display`            | `string`  | The format of the address display localized to the address country                                                          |\n| `localized_area_display`               | `string`  | The format of the address's area display localized to the address country                                                   |\n| `localized_multi_line_address_display` | `list`    | The multi-line format order of the address display localized to the address country, where each line is an item in the list |\n\n### Object\n\n<pre><code>{\n    \"resource_uri\": \"https://www.eventbriteapi.com/v3/events/3564383166/\",\n    \"id\": \"3564383166\",\n}\n</code></pre>\n\nThe standard base representation for first-class objects in Eventbrite, such\nas :format:`event`, :format:`venue` and :format:`order`.\n\nThe `resource_uri` is an absolute URL to the API endpoint that will return\nyou the canonical representation of the event, and the `id` is a\n:format:`string` that represents a unique identifer for the event (note\nthat it is not necessarily numeric).\n\nOther fields on objects are defined on their individual pages, but note that\nfields may not be present if their value is `null`; we have noted fields\nthat may not contain a value with `(optional)`.\n\n## Eventual Consistency\n\nThe Eventbrite Platform is large and, as such, contains a great amount of data. In order to provide the fastest\nexperience practicable to its users, the Platform employs a model known as\n[eventual consistency](https://en.wikipedia.org/wiki/Eventual_consistency). In short, new or updated data may not be\navailable instantly after you submit changes.\n\n### Implications of Eventual Consistency\n\nThere are many implications associated with the use of eventual consistencyâ€”some of them positive, some of them\nunfortunate. The key positive to eventual consistency is that it makes the Platform faster and generally provides a\nbetter, more reliable, and more available experience for users and partners alike. The notable downside is that when\nyou or someone else creates a new event, modifies an existing event, updates the profile for a venue, or otherwise\nmodifies data on the Platform, those changes may not be immediately visible.\n\nWhen you submit a `POST` or `DELETE` request to alter data, the response you receive, if successful, will always contain\nthe most-up-to-date data, reflecting your changes immediately. However, if you then instantly submit a `GET` request to\nobtain that same data, you may get a `404 Not Found` response (if it's new data you created), or the response may\ncontain stale data (if it's existing data you updated). The time between when you submit your changes and when those\nchanges are visible across the Platform can vary from as little as 1 second to as much as 5 minutes, depending on the\ndata and the current amount of traffic the Platform is handling. In almost all circumstances, that time is less than\n15 seconds.\n\n### Use Waypoints for Immediate Consistency\n\nThere are times where eventual consistency makes it difficult to use the API for rapidly making changes. For example,\ncreating an event, adding ticket classes to that event, and updating images for that event, all with a set of API calls\nthat occur over the series of several seconds. Eventbrite Waypoints allow Platform developers to request immediate\nconsistency during such activities.\n\nA Waypoint is a sort of bookmark to tell the Platform when in the data timeline you expect your data to be found. When\nyou submit a `POST` or `DELETE` request to alter data, the response you receive, if successful, will contain an\nHTTP header named `Eventbrite-API-Waypoint-Token`. The value of this header is the Waypoint for the data you just\ncreated or altered. It is encrypted, but its contents are not important. On the very next response, include a request\nheader named `Eventbrite-API-Waypoint-Token` with the exact, unaltered value copied from the previous response header.\nYou should do this even if your next request is a `GET` or another `POST` or `DELETE`. In this way, its use is very\nsimilar to a browser cookie.\n\nContinue to do this for subsequent responses and requests. Each time you receive a response containing the header\n`Eventbrite-API-Waypoint-Token`, submit your next request with the header value from that most-recent response. This\nwill avoid errors commonly associated with eventual consistency, such as `404 Not Found`. There is a downside, however:\nsubmitting these tokens in your requests will slow down the requests by as much as 5 extra seconds on top of the\nnormal request time for a given endpoint (though usually less than 1 second).\n\nYou do not have to hold on to Waypoint tokens indefinitely, and you do not even have to use Waypoint tokens. Once about\n5 minutes has passed since your last request, you can discard any Waypoint token you received in that response, and\nsubmit your next request with no Waypoint token header. Also, if eventual consistency does not pose any concerns to\nyour workflow, you can safely ignore Waypoint tokens entirely.",
    "contact": {},
    "version": "1.0"
  },
  "servers": [
    {
      "url": "https://www.eventbriteapi.com/v3/",
      "variables": {}
    }
  ],
  "paths": {
    "/events/{event_id}/attendees/{attendee_id}/": {
      "get": {
        "tags": [
          "Attendee"
        ],
        "summary": "Retrieve an Attendee",
        "description": "Retrieve an Attendee by Attendee ID.",
        "operationId": "RetrieveanAttendee",
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "description": "Event ID.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "12345"
            }
          },
          {
            "name": "attendee_id",
            "in": "path",
            "description": "Attendee ID.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "12345"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Attendee"
                },
                "example": {
                  "id": "12345",
                  "created": "2018-05-12T02:00:00Z",
                  "changed": "2018-05-12T02:00:00Z",
                  "ticket_class_id": "12345",
                  "ticket_class_name": "General Admission",
                  "profile": {
                    "name": "John Smith",
                    "email": "jhon.smith@example.com",
                    "first_name": "John",
                    "last_name": "Smith",
                    "prefix": "Mr.",
                    "suffix": "Sr",
                    "age": 33,
                    "job_title": "Software Enginner",
                    "company": "Eventbrite",
                    "website": "https://mysite.com",
                    "blog": "https://mysite.com",
                    "gender": "male",
                    "birth_date": "1984-12-06",
                    "cell_phone": "555 555-1234",
                    "work_phone": "555 555-1234",
                    "addresses": {
                      "home": {
                        "address_1": null,
                        "address_2": null,
                        "city": null,
                        "region": null,
                        "postal_code": null,
                        "country": null,
                        "latitude": null,
                        "longitude": null,
                        "localized_address_display": "",
                        "localized_area_display": "",
                        "localized_multi_line_address_display": []
                      },
                      "ship": {
                        "address_1": null,
                        "address_2": null,
                        "city": null,
                        "region": null,
                        "postal_code": null,
                        "country": null,
                        "latitude": null,
                        "longitude": null,
                        "localized_address_display": "",
                        "localized_area_display": "",
                        "localized_multi_line_address_display": []
                      },
                      "work": {
                        "address_1": null,
                        "address_2": null,
                        "city": null,
                        "region": null,
                        "postal_code": null,
                        "country": null,
                        "latitude": null,
                        "longitude": null,
                        "localized_address_display": "",
                        "localized_area_display": "",
                        "localized_multi_line_address_display": []
                      },
                      "bill": {
                        "address_1": null,
                        "address_2": null,
                        "city": null,
                        "region": null,
                        "postal_code": null,
                        "country": null,
                        "latitude": null,
                        "longitude": null,
                        "localized_address_display": "",
                        "localized_area_display": "",
                        "localized_multi_line_address_display": []
                      }
                    }
                  },
                  "questions": [
                    {
                      "id": "20090892",
                      "label": "What's your question?",
                      "type": "text",
                      "required": false
                    }
                  ],
                  "answers": [
                    {
                      "question_id": "20090892",
                      "attendee_id": "1009831492",
                      "question": "What's your question?",
                      "type": "text",
                      "answer": "This is my answer"
                    }
                  ],
                  "barcodes": [
                    {
                      "barcode": "1234093511009831492001",
                      "status": "unused",
                      "created": "2018-08-18T22:24:03Z",
                      "changed": "2018-08-18T22:24:03Z",
                      "checkin_type": 0,
                      "is_printed": false
                    }
                  ],
                  "team": {
                    "id": "12345",
                    "name": "Great Team!",
                    "date_joined": "2018-05-12T02:00:00Z",
                    "event_id": "12345"
                  },
                  "affiliate": "affiliate_code",
                  "checked_in": false,
                  "cancelled": false,
                  "refunded": false,
                  "costs": {
                    "base_price": {
                      "currency": "USD",
                      "value": 432,
                      "major_value": "4.32",
                      "display": "4.32 USD"
                    },
                    "gross": {
                      "currency": "USD",
                      "value": 432,
                      "major_value": "4.32",
                      "display": "4.32 USD"
                    },
                    "eventbrite_fee": {
                      "currency": "USD",
                      "value": 432,
                      "major_value": "4.32",
                      "display": "4.32 USD"
                    },
                    "payment_fee": {
                      "currency": "USD",
                      "value": 432,
                      "major_value": "4.32",
                      "display": "4.32 USD"
                    },
                    "tax": {
                      "currency": "USD",
                      "value": 432,
                      "major_value": "4.32",
                      "display": "4.32 USD"
                    }
                  },
                  "status": "",
                  "event_id": "12345",
                  "event": {
                    "id": "12345",
                    "name": {
                      "text": "Some text",
                      "html": "<p>Some text</p>"
                    },
                    "description": {
                      "text": "Some text",
                      "html": "<p>Some text</p>"
                    },
                    "start": {
                      "timezone": "America/Los_Angeles",
                      "utc": "2018-05-12T02:00:00Z",
                      "local": "2018-05-11T19:00:00"
                    },
                    "end": {
                      "timezone": "America/Los_Angeles",
                      "utc": "2018-05-12T02:00:00Z",
                      "local": "2018-05-11T19:00:00"
                    },
                    "url": "https://www.eventbrite.com/e/45263283700",
                    "vanity_url": "https://testevent.eventbrite.com",
                    "created": "2017-02-19T20:28:14Z",
                    "changed": "2017-02-19T20:28:14Z",
                    "published": "2017-02-19T20:28:14Z",
                    "status": "live",
                    "currency": "USD",
                    "online_event": false,
                    "organization_id": "",
                    "organizer_id": "",
                    "organizer": {
                      "name": "",
                      "description": {
                        "text": "Some text",
                        "html": "<p>Some text</p>"
                      },
                      "long_description": {
                        "text": "Some text",
                        "html": "<p>Some text</p>"
                      },
                      "logo_id": null,
                      "logo": {
                        "id": "12345",
                        "url": "https://image.com",
                        "crop_mask": {
                          "top_left": {
                            "y": 15,
                            "x": 15
                          },
                          "width": 15,
                          "height": 15
                        },
                        "original": {
                          "url": "https://image.com",
                          "width": 800,
                          "height": 400
                        },
                        "aspect_ratio": "2",
                        "edge_color": "#6a7c8b",
                        "edge_color_set": true
                      },
                      "resource_uri": "https://www.eventbriteapi.com/v3/organizers/12345/",
                      "id": "12345",
                      "url": "https://www.eventbrite.com/o/12345/",
                      "num_past_events": 5,
                      "num_future_events": 1,
                      "twitter": "@abc",
                      "facebook": "abc"
                    },
                    "logo_id": null,
                    "logo": {
                      "id": "12345",
                      "url": "https://image.com",
                      "crop_mask": {
                        "top_left": {
                          "y": 15,
                          "x": 15
                        },
                        "width": 15,
                        "height": 15
                      },
                      "original": {
                        "url": "https://image.com",
                        "width": 800,
                        "height": 400
                      },
                      "aspect_ratio": "2",
                      "edge_color": "#6a7c8b",
                      "edge_color_set": true
                    },
                    "venue": {
                      "name": "Great Venue",
                      "age_restriction": null,
                      "capacity": 100,
                      "address": {
                        "address_1": null,
                        "address_2": null,
                        "city": null,
                        "region": null,
                        "postal_code": null,
                        "country": null,
                        "latitude": null,
                        "longitude": null
                      },
                      "resource_uri": "https://www.eventbriteapi.com/v3/venues/3003/",
                      "id": "3003",
                      "latitude": "49.28497549999999",
                      "longitude": "123.11082529999999"
                    },
                    "format_id": null,
                    "format": {
                      "id": "2",
                      "name": "Seminar or Talk",
                      "name_localized": "Seminar or Talk",
                      "short_name": "Seminar",
                      "short_name_localized": "Seminar",
                      "resource_uri": "https://www.eventbriteapi.com/v3/formats/2/"
                    },
                    "category": {
                      "id": "103",
                      "resource_uri": "https://www.eventbriteapi.com/v3/categories/103/",
                      "name": "Music",
                      "name_localized": "Music",
                      "short_name": "Music",
                      "short_name_localized": "Music",
                      "subcategories": [
                        {
                          "id": "3003",
                          "resource_uri": "https://www.eventbriteapi.com/v3/subcategories/3003/",
                          "name": "Classical",
                          "parent_category": {}
                        }
                      ]
                    },
                    "subcategory": {
                      "id": "3003",
                      "resource_uri": "https://www.eventbriteapi.com/v3/subcategories/3003/",
                      "name": "Classical",
                      "parent_category": {
                        "id": "103",
                        "resource_uri": "https://www.eventbriteapi.com/v3/categories/103/",
                        "name": "Music",
                        "name_localized": "Music",
                        "short_name": "Music",
                        "short_name_localized": "Music",
                        "subcategories": [
                          {}
                        ]
                      }
                    },
                    "music_properties": {
                      "age_restriction": null,
                      "presented_by": null,
                      "door_time": "2019-05-12T-19:00:00Z"
                    },
                    "bookmark_info": {
                      "bookmarked": false
                    },
                    "ticket_availability": {
                      "has_available_tickets": false,
                      "minimum_ticket_price": {
                        "currency": "USD",
                        "value": 432,
                        "major_value": "4.32",
                        "display": "4.32 USD"
                      },
                      "maximum_ticket_price": {
                        "currency": "USD",
                        "value": 432,
                        "major_value": "4.32",
                        "display": "4.32 USD"
                      },
                      "is_sold_out": true,
                      "start_sales_date": {
                        "timezone": "America/Los_Angeles",
                        "utc": "2018-05-12T02:00:00Z",
                        "local": "2018-05-11T19:00:00"
                      },
                      "waitlist_available": false
                    },
                    "listed": false,
                    "shareable": false,
                    "invite_only": false,
                    "show_remaining": true,
                    "password": "12345",
                    "capacity": 100,
                    "capacity_is_custom": true,
                    "tx_time_limit": "12345",
                    "hide_start_date": true,
                    "hide_end_date": true,
                    "locale": "en_US",
                    "is_locked": true,
                    "privacy_setting": "unlocked",
                    "is_externally_ticketed": false,
                    "external_ticketing": {
                      "external_url": "",
                      "ticketing_provider_name": "",
                      "is_free": false,
                      "minimum_ticket_price": {
                        "currency": "USD",
                        "value": 432,
                        "major_value": "4.32",
                        "display": "4.32 USD"
                      },
                      "maximum_ticket_price": {
                        "currency": "USD",
                        "value": 432,
                        "major_value": "4.32",
                        "display": "4.32 USD"
                      },
                      "sales_start": "",
                      "sales_end": ""
                    },
                    "is_series": true,
                    "is_series_parent": true,
                    "series_id": "56321",
                    "is_reserved_seating": true,
                    "show_pick_a_seat": true,
                    "show_seatmap_thumbnail": true,
                    "show_colors_in_seatmap_thumbnail": true,
                    "is_free": true,
                    "source": "api",
                    "version": "null",
                    "resource_uri": "https://www.eventbriteapi.com/v3/events/1234/",
                    "event_sales_status": {
                      "sales_status": "text",
                      "start_sales_date": {
                        "timezone": "America/Los_Angeles",
                        "utc": "2018-05-12T02:00:00Z",
                        "local": "2018-05-11T19:00:00"
                      }
                    },
                    "checkout_settings": {
                      "created": "2018-01-31T13:00:00Z",
                      "changed": "2018-01-31T13:00:00Z",
                      "country_code": "",
                      "currency_code": "",
                      "checkout_method": "paypal",
                      "offline_settings": [
                        {
                          "payment_method": "CASH",
                          "instructions": ""
                        }
                      ],
                      "user_instrument_vault_id": ""
                    }
                  },
                  "order_id": "12345",
                  "order": {
                    "id": "442719216",
                    "created": "2018-05-12T02:00:00Z",
                    "changed": "2018-05-12T02:00:00Z",
                    "name": "John Smith",
                    "first_name": "John",
                    "last_name": "Smith",
                    "email": "john.smith@example.com",
                    "costs": {
                      "base_price": {
                        "currency": "USD",
                        "value": 432,
                        "major_value": "4.32",
                        "display": "4.32 USD"
                      },
                      "display_price": {
                        "currency": "USD",
                        "value": 432,
                        "major_value": "4.32",
                        "display": "4.32 USD"
                      },
                      "display_fee": {
                        "currency": "USD",
                        "value": 432,
                        "major_value": "4.32",
                        "display": "4.32 USD"
                      },
                      "gross": {
                        "currency": "USD",
                        "value": 432,
                        "major_value": "4.32",
                        "display": "4.32 USD"
                      },
                      "eventbrite_fee": {
                        "currency": "USD",
                        "value": 432,
                        "major_value": "4.32",
                        "display": "4.32 USD"
                      },
                      "payment_fee": {
                        "currency": "USD",
                        "value": 432,
                        "major_value": "4.32",
                        "display": "4.32 USD"
                      },
                      "tax": {
                        "currency": "USD",
                        "value": 432,
                        "major_value": "4.32",
                        "display": "4.32 USD"
                      },
                      "display_tax": {
                        "currency": "USD",
                        "value": 432,
                        "major_value": "4.32",
                        "display": "4.32 USD"
                      },
                      "price_before_discount": {
                        "currency": "USD",
                        "value": 432,
                        "major_value": "4.32",
                        "display": "4.32 USD"
                      },
                      "discount_amount": {
                        "currency": "USD",
                        "value": 432,
                        "major_value": "4.32",
                        "display": "4.32 USD"
                      },
                      "discount_type": "coded",
                      "fee_components": [
                        {
                          "intermediate": false,
                          "name": "royalty",
                          "internal_name": "service fee",
                          "group_name": "service fee",
                          "value": 200,
                          "discount": {
                            "amount": {
                              "currency": "USD",
                              "value": 432,
                              "major_value": "4.32",
                              "display": "4.32 USD"
                            },
                            "reason": "TOGGLED_OFF_FEE"
                          },
                          "rule": {
                            "id": "95"
                          },
                          "base": "item.display-includable",
                          "bucket": "fee",
                          "recipient": "event.6018",
                          "payer": "attendee"
                        }
                      ],
                      "tax_components": [
                        {
                          "intermediate": false,
                          "name": "royalty",
                          "internal_name": "service fee",
                          "group_name": "service fee",
                          "value": 200,
                          "discount": {
                            "amount": {
                              "currency": "USD",
                              "value": 432,
                              "major_value": "4.32",
                              "display": "4.32 USD"
                            },
                            "reason": "TOGGLED_OFF_FEE"
                          },
                          "rule": {
                            "id": "95"
                          },
                          "base": "item.display-includable",
                          "bucket": "fee",
                          "recipient": "event.6018",
                          "payer": "attendee"
                        }
                      ],
                      "shipping_components": [
                        {
                          "intermediate": false,
                          "name": "royalty",
                          "internal_name": "service fee",
                          "group_name": "service fee",
                          "value": 200,
                          "discount": {
                            "amount": {
                              "currency": "USD",
                              "value": 432,
                              "major_value": "4.32",
                              "display": "4.32 USD"
                            },
                            "reason": "TOGGLED_OFF_FEE"
                          },
                          "rule": {
                            "id": "95"
                          },
                          "base": "item.display-includable",
                          "bucket": "fee",
                          "recipient": "event.6018",
                          "payer": "attendee"
                        }
                      ],
                      "has_gts_tax": false,
                      "tax_name": "VAT"
                    },
                    "event_id": "17937020110",
                    "event": {
                      "id": "12345",
                      "name": {
                        "text": "Some text",
                        "html": "<p>Some text</p>"
                      },
                      "description": {
                        "text": "Some text",
                        "html": "<p>Some text</p>"
                      },
                      "start": {
                        "timezone": "America/Los_Angeles",
                        "utc": "2018-05-12T02:00:00Z",
                        "local": "2018-05-11T19:00:00"
                      },
                      "end": {
                        "timezone": "America/Los_Angeles",
                        "utc": "2018-05-12T02:00:00Z",
                        "local": "2018-05-11T19:00:00"
                      },
                      "url": "https://www.eventbrite.com/e/45263283700",
                      "vanity_url": "https://testevent.eventbrite.com",
                      "created": "2017-02-19T20:28:14Z",
                      "changed": "2017-02-19T20:28:14Z",
                      "published": "2017-02-19T20:28:14Z",
                      "status": "live",
                      "currency": "USD",
                      "online_event": false,
                      "organization_id": "",
                      "organizer_id": "",
                      "organizer": {
                        "name": "",
                        "description": {
                          "text": "Some text",
                          "html": "<p>Some text</p>"
                        },
                        "long_description": {
                          "text": "Some text",
                          "html": "<p>Some text</p>"
                        },
                        "logo_id": null,
                        "logo": {
                          "id": "12345",
                          "url": "https://image.com",
                          "crop_mask": {
                            "top_left": {
                              "y": 15,
                              "x": 15
                            },
                            "width": 15,
                            "height": 15
                          },
                          "original": {
                            "url": "https://image.com",
                            "width": 800,
                            "height": 400
                          },
                          "aspect_ratio": "2",
                          "edge_color": "#6a7c8b",
                          "edge_color_set": true
                        },
                        "resource_uri": "https://www.eventbriteapi.com/v3/organizers/12345/",
                        "id": "12345",
                        "url": "https://www.eventbrite.com/o/12345/",
                        "num_past_events": 5,
                        "num_future_events": 1,
                        "twitter": "@abc",
                        "facebook": "abc"
                      },
                      "logo_id": null,
                      "logo": {
                        "id": "12345",
                        "url": "https://image.com",
                        "crop_mask": {
                          "top_left": {
                            "y": 15,
                            "x": 15
                          },
                          "width": 15,
                          "height": 15
                        },
                        "original": {
                          "url": "https://image.com",
                          "width": 800,
                          "height": 400
                        },
                        "aspect_ratio": "2",
                        "edge_color": "#6a7c8b",
                        "edge_color_set": true
                      },
                      "venue": {
                        "name": "Great Venue",
                        "age_restriction": null,
                        "capacity": 100,
                        "address": {
                          "address_1": null,
                          "address_2": null,
                          "city": null,
                          "region": null,
                          "postal_code": null,
                          "country": null,
                          "latitude": null,
                          "longitude": null
                        },
                        "resource_uri": "https://www.eventbriteapi.com/v3/venues/3003/",
                        "id": "3003",
                        "latitude": "49.28497549999999",
                        "longitude": "123.11082529999999"
                      },
                      "format_id": null,
                      "format": {
                        "id": "2",
                        "name": "Seminar or Talk",
                        "name_localized": "Seminar or Talk",
                        "short_name": "Seminar",
                        "short_name_localized": "Seminar",
                        "resource_uri": "https://www.eventbriteapi.com/v3/formats/2/"
                      },
                      "category": {
                        "id": "103",
                        "resource_uri": "https://www.eventbriteapi.com/v3/categories/103/",
                        "name": "Music",
                        "name_localized": "Music",
                        "short_name": "Music",
                        "short_name_localized": "Music",
                        "subcategories": [
                          {
                            "id": "3003",
                            "resource_uri": "https://www.eventbriteapi.com/v3/subcategories/3003/",
                            "name": "Classical",
                            "parent_category": {}
                          }
                        ]
                      },
                      "subcategory": {
                        "id": "3003",
                        "resource_uri": "https://www.eventbriteapi.com/v3/subcategories/3003/",
                        "name": "Classical",
                        "parent_category": {
                          "id": "103",
                          "resource_uri": "https://www.eventbriteapi.com/v3/categories/103/",
                          "name": "Music",
                          "name_localized": "Music",
                          "short_name": "Music",
                          "short_name_localized": "Music",
                          "subcategories": [
                            {}
                          ]
                        }
                      },
                      "music_properties": {
                        "age_restriction": null,
                        "presented_by": null,
                        "door_time": "2019-05-12T-19:00:00Z"
                      },
                      "bookmark_info": {
                        "bookmarked": false
                      },
                      "ticket_availability": {
                        "has_available_tickets": false,
                        "minimum_ticket_price": {
                          "currency": "USD",
                          "value": 432,
                          "major_value": "4.32",
                          "display": "4.32 USD"
                        },
                        "maximum_ticket_price": {
                          "currency": "USD",
                          "value": 432,
                          "major_value": "4.32",
                          "display": "4.32 USD"
                        },
                        "is_sold_out": true,
                        "start_sales_date": {
                          "timezone": "America/Los_Angeles",
                          "utc": "2018-05-12T02:00:00Z",
                          "local": "2018-05-11T19:00:00"
                        },
                        "waitlist_available": false
                      },
                      "listed": false,
                      "shareable": false,
                      "invite_only": false,
                      "show_remaining": true,
                      "password": "12345",
                      "capacity": 100,
                      "capacity_is_custom": true,
                      "tx_time_limit": "12345",
                      "hide_start_date": true,
                      "hide_end_date": true,
                      "locale": "en_US",
                      "is_locked": true,
                      "privacy_setting": "unlocked",
                      "is_externally_ticketed": false,
                      "external_ticketing": {
                        "external_url": "",
                        "ticketing_provider_name": "",
                        "is_free": false,
                        "minimum_ticket_price": {
                          "currency": "USD",
                          "value": 432,
                          "major_value": "4.32",
                          "display": "4.32 USD"
                        },
                        "maximum_ticket_price": {
                          "currency": "USD",
                          "value": 432,
                          "major_value": "4.32",
                          "display": "4.32 USD"
                        },
                        "sales_start": "",
                        "sales_end": ""
                      },
                      "is_series": true,
                      "is_series_parent": true,
                      "series_id": "56321",
                      "is_reserved_seating": true,
                      "show_pick_a_seat": true,
                      "show_seatmap_thumbnail": true,
                      "show_colors_in_seatmap_thumbnail": true,
                      "is_free": true,
                      "source": "api",
                      "version": "null",
                      "resource_uri": "https://www.eventbriteapi.com/v3/events/1234/",
                      "event_sales_status": {
                        "sales_status": "text",
                        "start_sales_date": {
                          "timezone": "America/Los_Angeles",
                          "utc": "2018-05-12T02:00:00Z",
                          "local": "2018-05-11T19:00:00"
                        }
                      },
                      "checkout_settings": {
                        "created": "2018-01-31T13:00:00Z",
                        "changed": "2018-01-31T13:00:00Z",
                        "country_code": "",
                        "currency_code": "",
                        "checkout_method": "paypal",
                        "offline_settings": [
                          {
                            "payment_method": "CASH",
                            "instructions": ""
                          }
                        ],
                        "user_instrument_vault_id": ""
                      }
                    },
                    "attendees": [
                      {}
                    ],
                    "time_remaining": 100,
                    "resource_uri": "https://www.eventbriteapi.com/v3/orders/1234/",
                    "status": "placed",
                    "ticket_buyer_settings": {
                      "confirmation_message": {
                        "text": "Some text",
                        "html": "<p>Some text</p>"
                      },
                      "instructions": {
                        "text": "Some text",
                        "html": "<p>Some text</p>"
                      },
                      "event_id": "3003",
                      "refund_request_enabled": false,
                      "ticket_class_confirmation_settings": [
                        {
                          "ticket_class_id": "1023",
                          "event_id": "3003",
                          "confirmation_message": {
                            "text": "Some text",
                            "html": "<p>Some text</p>"
                          }
                        }
                      ]
                    },
                    "contact_list_preferences": {
                      "has_contact_list": true,
                      "has_opted_in": true,
                      "_type": "order_contact_list_preferences"
                    }
                  },
                  "guestlist_id": null,
                  "invited_by": null,
                  "assigned_unit": {
                    "unit_id": "18-1:2",
                    "description": "Some description",
                    "location_image": {
                      "url": "",
                      "x": 0,
                      "y": 0
                    },
                    "labels": [
                      "100",
                      "A",
                      "23"
                    ],
                    "titles": [
                      "Area",
                      "Row",
                      "Seat"
                    ]
                  },
                  "delivery_method": "electronic",
                  "variant_id": null,
                  "contact_list_preferences": {
                    "has_contact_list": true,
                    "has_opted_in": true,
                    "_type": "attendee_contact_list_preferences"
                  },
                  "resource_uri": ""
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/events/{event_id}/attendees/": {
      "get": {
        "tags": [
          "Attendee"
        ],
        "summary": "List Attendees by Event",
        "description": "List Attendees by Event ID. Returns a paginated response.",
        "operationId": "ListAttendeesbyEvent",
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "description": "Event ID.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "12345"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Filter Attendees by status of either `attending`, `not attending` or `unpaid`.",
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/status10"
            }
          },
          {
            "name": "changed_since",
            "in": "query",
            "description": "Filter Attendees changed on or after the specified time.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "last_item_seen",
            "in": "query",
            "description": "When passed in conjunction with `changed_since`, filter Attendees changed on or after the specified time and with an ID later than the value of the`last_item_seen` field.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "attendee_ids",
            "in": "query",
            "description": "Filter Attendees with the specified IDs.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListAttendeesbyEventresponse"
                },
                "example": {
                  "pagination": {
                    "object_count": 1,
                    "page_number": 1,
                    "page_size": 1,
                    "page_count": 1,
                    "continuation": "dGhpcyBpcyBhIGNvbnRpbnVhdGlvbiB0b2tlbg",
                    "has_more_items": false
                  },
                  "attendees": [
                    {
                      "id": "12345",
                      "created": "2018-05-12T02:00:00Z",
                      "changed": "2018-05-12T02:00:00Z",
                      "ticket_class_id": "12345",
                      "ticket_class_name": "General Admission",
                      "profile": {
                        "name": "John Smith",
                        "email": "jhon.smith@example.com",
                        "first_name": "John",
                        "last_name": "Smith",
                        "prefix": "Mr.",
                        "suffix": "Sr",
                        "age": 33,
                        "job_title": "Software Enginner",
                        "company": "Eventbrite",
                        "website": "https://mysite.com",
                        "blog": "https://mysite.com",
                        "gender": "male",
                        "birth_date": "1984-12-06",
                        "cell_phone": "555 555-1234",
                        "work_phone": "555 555-1234",
                        "addresses": {
                          "home": {
                            "address_1": null,
                            "address_2": null,
                            "city": null,
                            "region": null,
                            "postal_code": null,
                            "country": null,
                            "latitude": null,
                            "longitude": null,
                            "localized_address_display": "",
                            "localized_area_display": "",
                            "localized_multi_line_address_display": []
                          },
                          "ship": {
                            "address_1": null,
                            "address_2": null,
                            "city": null,
                            "region": null,
                            "postal_code": null,
                            "country": null,
                            "latitude": null,
                            "longitude": null,
                            "localized_address_display": "",
                            "localized_area_display": "",
                            "localized_multi_line_address_display": []
                          },
                          "work": {
                            "address_1": null,
                            "address_2": null,
                            "city": null,
                            "region": null,
                            "postal_code": null,
                            "country": null,
                            "latitude": null,
                            "longitude": null,
                            "localized_address_display": "",
                            "localized_area_display": "",
                            "localized_multi_line_address_display": []
                          },
                          "bill": {
                            "address_1": null,
                            "address_2": null,
                            "city": null,
                            "region": null,
                            "postal_code": null,
                            "country": null,
                            "latitude": null,
                            "longitude": null,
                            "localized_address_display": "",
                            "localized_area_display": "",
                            "localized_multi_line_address_display": []
                          }
                        }
                      },
                      "questions": [
                        {
                          "id": "20090892",
                          "label": "What's your question?",
                          "type": "text",
                          "required": false
                        }
                      ],
                      "answers": [
                        {
                          "question_id": "20090892",
                          "attendee_id": "1009831492",
                          "question": "What's your question?",
                          "type": "text",
                          "answer": "This is my answer"
                        }
                      ],
                      "barcodes": [
                        {
                          "barcode": "1234093511009831492001",
                          "status": "unused",
                          "created": "2018-08-18T22:24:03Z",
                          "changed": "2018-08-18T22:24:03Z",
                          "checkin_type": 0,
                          "is_printed": false
                        }
                      ],
                      "team": {
                        "id": "12345",
                        "name": "Great Team!",
                        "date_joined": "2018-05-12T02:00:00Z",
                        "event_id": "12345"
                      },
                      "affiliate": "affiliate_code",
                      "checked_in": false,
                      "cancelled": false,
                      "refunded": false,
                      "costs": {
                        "base_price": {
                          "currency": "USD",
                          "value": 432,
                          "major_value": "4.32",
                          "display": "4.32 USD"
                        },
                        "gross": {
                          "currency": "USD",
                          "value": 432,
                          "major_value": "4.32",
                          "display": "4.32 USD"
                        },
                        "eventbrite_fee": {
                          "currency": "USD",
                          "value": 432,
                          "major_value": "4.32",
                          "display": "4.32 USD"
                        },
                        "payment_fee": {
                          "currency": "USD",
                          "value": 432,
                          "major_value": "4.32",
                          "display": "4.32 USD"
                        },
                        "tax": {
                          "currency": "USD",
                          "value": 432,
                          "major_value": "4.32",
                          "display": "4.32 USD"
                        }
                      },
                      "status": "",
                      "event_id": "12345",
                      "event": {
                        "id": "12345",
                        "name": {
                          "text": "Some text",
                          "html": "<p>Some text</p>"
                        },
                        "description": {
                          "text": "Some text",
                          "html": "<p>Some text</p>"
                        },
                        "start": {
                          "timezone": "America/Los_Angeles",
                          "utc": "2018-05-12T02:00:00Z",
                          "local": "2018-05-11T19:00:00"
                        },
                        "end": {
                          "timezone": "America/Los_Angeles",
                          "utc": "2018-05-12T02:00:00Z",
                          "local": "2018-05-11T19:00:00"
                        },
                        "url": "https://www.eventbrite.com/e/45263283700",
                        "vanity_url": "https://testevent.eventbrite.com",
                        "created": "2017-02-19T20:28:14Z",
                        "changed": "2017-02-19T20:28:14Z",
                        "published": "2017-02-19T20:28:14Z",
                        "status": "live",
                        "currency": "USD",
                        "online_event": false,
                        "organization_id": "",
                        "organizer_id": "",
                        "organizer": {
                          "name": "",
                          "description": {
                            "text": "Some text",
                            "html": "<p>Some text</p>"
                          },
                          "long_description": {
                            "text": "Some text",
                            "html": "<p>Some text</p>"
                          },
                          "logo_id": null,
                          "logo": {
                            "id": "12345",
                            "url": "https://image.com",
                            "crop_mask": {
                              "top_left": {
                                "y": 15,
                                "x": 15
                              },
                              "width": 15,
                              "height": 15
                            },
                            "original": {
                              "url": "https://image.com",
                              "width": 800,
                              "height": 400
                            },
                            "aspect_ratio": "2",
                            "edge_color": "#6a7c8b",
                            "edge_color_set": true
                          },
                          "resource_uri": "https://www.eventbriteapi.com/v3/organizers/12345/",
                          "id": "12345",
                          "url": "https://www.eventbrite.com/o/12345/",
                          "num_past_events": 5,
                          "num_future_events": 1,
                          "twitter": "@abc",
                          "facebook": "abc"
                        },
                        "logo_id": null,
                        "logo": {
                          "id": "12345",
                          "url": "https://image.com",
                          "crop_mask": {
                            "top_left": {
                              "y": 15,
                              "x": 15
                            },
                            "width": 15,
                            "height": 15
                          },
                          "original": {
                            "url": "https://image.com",
                            "width": 800,
                            "height": 400
                          },
                          "aspect_ratio": "2",
                          "edge_color": "#6a7c8b",
                          "edge_color_set": true
                        },
                        "venue": {
                          "name": "Great Venue",
                          "age_restriction": null,
                          "capacity": 100,
                          "address": {
                            "address_1": null,
                            "address_2": null,
                            "city": null,
                            "region": null,
                            "postal_code": null,
                            "country": null,
                            "latitude": null,
                            "longitude": null
                          },
                          "resource_uri": "https://www.eventbriteapi.com/v3/venues/3003/",
                          "id": "3003",
                          "latitude": "49.28497549999999",
                          "longitude": "123.11082529999999"
                        },
                        "format_id": null,
                        "format": {
                          "id": "2",
                          "name": "Seminar or Talk",
                          "name_localized": "Seminar or Talk",
                          "short_name": "Seminar",
                          "short_name_localized": "Seminar",
                          "resource_uri": "https://www.eventbriteapi.com/v3/formats/2/"
                        },
                        "category": {
                          "id": "103",
                          "resource_uri": "https://www.eventbriteapi.com/v3/categories/103/",
                          "name": "Music",
                          "name_localized": "Music",
                          "short_name": "Music",
                          "short_name_localized": "Music",
                          "subcategories": [
                            {
                              "id": "3003",
                              "resource_uri": "https://www.eventbriteapi.com/v3/subcategories/3003/",
                              "name": "Classical",
                              "parent_category": {}
                            }
                          ]
                        },
                        "subcategory": {
                          "id": "3003",
                          "resource_uri": "https://www.eventbriteapi.com/v3/subcategories/3003/",
                          "name": "Classical",
                          "parent_category": {
                            "id": "103",
                            "resource_uri": "https://www.eventbriteapi.com/v3/categories/103/",
                            "name": "Music",
                            "name_localized": "Music",
                            "short_name": "Music",
                            "short_name_localized": "Music",
                            "subcategories": [
                              {}
                            ]
                          }
                        },
                        "music_properties": {
                          "age_restriction": null,
                          "presented_by": null,
                          "door_time": "2019-05-12T-19:00:00Z"
                        },
                        "bookmark_info": {
                          "bookmarked": false
                        },
                        "ticket_availability": {
                          "has_available_tickets": false,
                          "minimum_ticket_price": {
                            "currency": "USD",
                            "value": 432,
                            "major_value": "4.32",
                            "display": "4.32 USD"
                          },
                          "maximum_ticket_price": {
                            "currency": "USD",
                            "value": 432,
                            "major_value": "4.32",
                            "display": "4.32 USD"
                          },
                          "is_sold_out": true,
                          "start_sales_date": {
                            "timezone": "America/Los_Angeles",
                            "utc": "2018-05-12T02:00:00Z",
                            "local": "2018-05-11T19:00:00"
                          },
                          "waitlist_available": false
                        },
                        "listed": false,
                        "shareable": false,
                        "invite_only": false,
                        "show_remaining": true,
                        "password": "12345",
                        "capacity": 100,
                        "capacity_is_custom": true,
                        "tx_time_limit": "12345",
                        "hide_start_date": true,
                        "hide_end_date": true,
                        "locale": "en_US",
                        "is_locked": true,
                        "privacy_setting": "unlocked",
                        "is_externally_ticketed": false,
                        "external_ticketing": {
                          "external_url": "",
                          "ticketing_provider_name": "",
                          "is_free": false,
                          "minimum_ticket_price": {
                            "currency": "USD",
                            "value": 432,
                            "major_value": "4.32",
                            "display": "4.32 USD"
                          },
                          "maximum_ticket_price": {
                            "currency": "USD",
                            "value": 432,
                            "major_value": "4.32",
                            "display": "4.32 USD"
                          },
                          "sales_start": "",
                          "sales_end": ""
                        },
                        "is_series": true,
                        "is_series_parent": true,
                        "series_id": "56321",
                        "is_reserved_seating": true,
                        "show_pick_a_seat": true,
                        "show_seatmap_thumbnail": true,
                        "show_colors_in_seatmap_thumbnail": true,
                        "is_free": true,
                        "source": "api",
                        "version": "null",
                        "resource_uri": "https://www.eventbriteapi.com/v3/events/1234/",
                        "event_sales_status": {
                          "sales_status": "text",
                          "start_sales_date": {
                            "timezone": "America/Los_Angeles",
                            "utc": "2018-05-12T02:00:00Z",
                            "local": "2018-05-11T19:00:00"
                          }
                        },
                        "checkout_settings": {
                          "created": "2018-01-31T13:00:00Z",
                          "changed": "2018-01-31T13:00:00Z",
                          "country_code": "",
                          "currency_code": "",
                          "checkout_method": "paypal",
                          "offline_settings": [
                            {
                              "payment_method": "CASH",
                              "instructions": ""
                            }
                          ],
                          "user_instrument_vault_id": ""
                        }
                      },
                      "order_id": "12345",
                      "order": {
                        "id": "442719216",
                        "created": "2018-05-12T02:00:00Z",
                        "changed": "2018-05-12T02:00:00Z",
                        "name": "John Smith",
                        "first_name": "John",
                        "last_name": "Smith",
                        "email": "john.smith@example.com",
                        "costs": {
                          "base_price": {
                            "currency": "USD",
                            "value": 432,
                            "major_value": "4.32",
                            "display": "4.32 USD"
                          },
                          "display_price": {
                            "currency": "USD",
                            "value": 432,
                            "major_value": "4.32",
                            "display": "4.32 USD"
                          },
                          "display_fee": {
                            "currency": "USD",
                            "value": 432,
                            "major_value": "4.32",
                            "display": "4.32 USD"
                          },
                          "gross": {
                            "currency": "USD",
                            "value": 432,
                            "major_value": "4.32",
                            "display": "4.32 USD"
                          },
                          "eventbrite_fee": {
                            "currency": "USD",
                            "value": 432,
                            "major_value": "4.32",
                            "display": "4.32 USD"
                          },
                          "payment_fee": {
                            "currency": "USD",
                            "value": 432,
                            "major_value": "4.32",
                            "display": "4.32 USD"
                          },
                          "tax": {
                            "currency": "USD",
                            "value": 432,
                            "major_value": "4.32",
                            "display": "4.32 USD"
                          },
                          "display_tax": {
                            "currency": "USD",
                            "value": 432,
                            "major_value": "4.32",
                            "display": "4.32 USD"
                          },
                          "price_before_discount": {
                            "currency": "USD",
                            "value": 432,
                            "major_value": "4.32",
                            "display": "4.32 USD"
                          },
                          "discount_amount": {
                            "currency": "USD",
                            "value": 432,
                            "major_value": "4.32",
                            "display": "4.32 USD"
                          },
                          "discount_type": "coded",
                          "fee_components": [
                            {
                              "intermediate": false,
                              "name": "royalty",
                              "internal_name": "service fee",
                              "group_name": "service fee",
                              "value": 200,
                              "discount": {
                                "amount": {
                                  "currency": "USD",
                                  "value": 432,
                                  "major_value": "4.32",
                                  "display": "4.32 USD"
                                },
                                "reason": "TOGGLED_OFF_FEE"
                              },
                              "rule": {
                                "id": "95"
                              },
                              "base": "item.display-includable",
                              "bucket": "fee",
                              "recipient": "event.6018",
                              "payer": "attendee"
                            }
                          ],
                          "tax_components": [
                            {
                              "intermediate": false,
                              "name": "royalty",
                              "internal_name": "service fee",
                              "group_name": "service fee",
                              "value": 200,
                              "discount": {
                                "amount": {
                                  "currency": "USD",
                                  "value": 432,
                                  "major_value": "4.32",
                                  "display": "4.32 USD"
                                },
                                "reason": "TOGGLED_OFF_FEE"
                              },
                              "rule": {
                                "id": "95"
                              },
                              "base": "item.display-includable",
                              "bucket": "fee",
                              "recipient": "event.6018",
                              "payer": "attendee"
                            }
                          ],
                          "shipping_components": [
                            {
                              "intermediate": false,
                              "name": "royalty",
                              "internal_name": "service fee",
                              "group_name": "service fee",
                              "value": 200,
                              "discount": {
                                "amount": {
                                  "currency": "USD",
                                  "value": 432,
                                  "major_value": "4.32",
                                  "display": "4.32 USD"
                                },
                                "reason": "TOGGLED_OFF_FEE"
                              },
                              "rule": {
                                "id": "95"
                              },
                              "base": "item.display-includable",
                              "bucket": "fee",
                              "recipient": "event.6018",
                              "payer": "attendee"
                            }
                          ],
                          "has_gts_tax": false,
                          "tax_name": "VAT"
                        },
                        "event_id": "17937020110",
                        "event": {
                          "id": "12345",
                          "name": {
                            "text": "Some text",
                            "html": "<p>Some text</p>"
                          },
                          "description": {
                            "text": "Some text",
                            "html": "<p>Some text</p>"
                          },
                          "start": {
                            "timezone": "America/Los_Angeles",
                            "utc": "2018-05-12T02:00:00Z",
                            "local": "2018-05-11T19:00:00"
                          },
                          "end": {
                            "timezone": "America/Los_Angeles",
                            "utc": "2018-05-12T02:00:00Z",
                            "local": "2018-05-11T19:00:00"
                          },
                          "url": "https://www.eventbrite.com/e/45263283700",
                          "vanity_url": "https://testevent.eventbrite.com",
                          "created": "2017-02-19T20:28:14Z",
                          "changed": "2017-02-19T20:28:14Z",
                          "published": "2017-02-19T20:28:14Z",
                          "status": "live",
                          "currency": "USD",
                          "online_event": false,
                          "organization_id": "",
                          "organizer_id": "",
                          "organizer": {
                            "name": "",
                            "description": {
                              "text": "Some text",
                              "html": "<p>Some text</p>"
                            },
                            "long_description": {
                              "text": "Some text",
                              "html": "<p>Some text</p>"
                            },
                            "logo_id": null,
                            "logo": {
                              "id": "12345",
                              "url": "https://image.com",
                              "crop_mask": {
                                "top_left": {
                                  "y": 15,
                                  "x": 15
                                },
                                "width": 15,
                                "height": 15
                              },
                              "original": {
                                "url": "https://image.com",
                                "width": 800,
                                "height": 400
                              },
                              "aspect_ratio": "2",
                              "edge_color": "#6a7c8b",
                              "edge_color_set": true
                            },
                            "resource_uri": "https://www.eventbriteapi.com/v3/organizers/12345/",
                            "id": "12345",
                            "url": "https://www.eventbrite.com/o/12345/",
                            "num_past_events": 5,
                            "num_future_events": 1,
                            "twitter": "@abc",
                            "facebook": "abc"
                          },
                          "logo_id": null,
                          "logo": {
                            "id": "12345",
                            "url": "https://image.com",
                            "crop_mask": {
                              "top_left": {
                                "y": 15,
                                "x": 15
                              },
                              "width": 15,
                              "height": 15
                            },
                            "original": {
                              "url": "https://image.com",
                              "width": 800,
                              "height": 400
                            },
                            "aspect_ratio": "2",
                            "edge_color": "#6a7c8b",
                            "edge_color_set": true
                          },
                          "venue": {
                            "name": "Great Venue",
                            "age_restriction": null,
                            "capacity": 100,
                            "address": {
                              "address_1": null,
                              "address_2": null,
                              "city": null,
                              "region": null,
                              "postal_code": null,
                              "country": null,
                              "latitude": null,
                              "longitude": null
                            },
                            "resource_uri": "https://www.eventbriteapi.com/v3/venues/3003/",
                            "id": "3003",
                            "latitude": "49.28497549999999",
                            "longitude": "123.11082529999999"
                          },
                          "format_id": null,
                          "format": {
                            "id": "2",
                            "name": "Seminar or Talk",
                            "name_localized": "Seminar or Talk",
                            "short_name": "Seminar",
                            "short_name_localized": "Seminar",
                            "resource_uri": "https://www.eventbriteapi.com/v3/formats/2/"
                          },
                          "category": {
                            "id": "103",
                            "resource_uri": "https://www.eventbriteapi.com/v3/categories/103/",
                            "name": "Music",
                            "name_localized": "Music",
                            "short_name": "Music",
                            "short_name_localized": "Music",
                            "subcategories": [
                              {
                                "id": "3003",
                                "resource_uri": "https://www.eventbriteapi.com/v3/subcategories/3003/",
                                "name": "Classical",
                                "parent_category": {}
                              }
                            ]
                          },
                          "subcategory": {
                            "id": "3003",
                            "resource_uri": "https://www.eventbriteapi.com/v3/subcategories/3003/",
                            "name": "Classical",
                            "parent_category": {
                              "id": "103",
                              "resource_uri": "https://www.eventbriteapi.com/v3/categories/103/",
                              "name": "Music",
                              "name_localized": "Music",
                              "short_name": "Music",
                              "short_name_localized": "Music",
                              "subcategories": [
                                {}
                              ]
                            }
                          },
                          "music_properties": {
                            "age_restriction": null,
                            "presented_by": null,
                            "door_time": "2019-05-12T-19:00:00Z"
                          },
                          "bookmark_info": {
                            "bookmarked": false
                          },
                          "ticket_availability": {
                            "has_available_tickets": false,
                            "minimum_ticket_price": {
                              "currency": "USD",
                              "value": 432,
                              "major_value": "4.32",
                              "display": "4.32 USD"
                            },
                            "maximum_ticket_price": {
                              "currency": "USD",
                              "value": 432,
                              "major_value": "4.32",
                              "display": "4.32 USD"
                            },
                            "is_sold_out": true,
                            "start_sales_date": {
                              "timezone": "America/Los_Angeles",
                              "utc": "2018-05-12T02:00:00Z",
                              "local": "2018-05-11T19:00:00"
                            },
                            "waitlist_available": false
                          },
                          "listed": false,
                          "shareable": false,
                          "invite_only": false,
                          "show_remaining": true,
                          "password": "12345",
                          "capacity": 100,
                          "capacity_is_custom": true,
                          "tx_time_limit": "12345",
                          "hide_start_date": true,
                          "hide_end_date": true,
                          "locale": "en_US",
                          "is_locked": true,
                          "privacy_setting": "unlocked",
                          "is_externally_ticketed": false,
                          "external_ticketing": {
                            "external_url": "",
                            "ticketing_provider_name": "",
                            "is_free": false,
                            "minimum_ticket_price": {
                              "currency": "USD",
                              "value": 432,
                              "major_value": "4.32",
                              "display": "4.32 USD"
                            },
                            "maximum_ticket_price": {
                              "currency": "USD",
                              "value": 432,
                              "major_value": "4.32",
                              "display": "4.32 USD"
                            },
                            "sales_start": "",
                            "sales_end": ""
                          },
                          "is_series": true,
                          "is_series_parent": true,
                          "series_id": "56321",
                          "is_reserved_seating": true,
                          "show_pick_a_seat": true,
                          "show_seatmap_thumbnail": true,
                          "show_colors_in_seatmap_thumbnail": true,
                          "is_free": true,
                          "source": "api",
                          "version": "null",
                          "resource_uri": "https://www.eventbriteapi.com/v3/events/1234/",
                          "event_sales_status": {
                            "sales_status": "text",
                            "start_sales_date": {
                              "timezone": "America/Los_Angeles",
                              "utc": "2018-05-12T02:00:00Z",
                              "local": "2018-05-11T19:00:00"
                            }
                          },
                          "checkout_settings": {
                            "created": "2018-01-31T13:00:00Z",
                            "changed": "2018-01-31T13:00:00Z",
                            "country_code": "",
                            "currency_code": "",
                            "checkout_method": "paypal",
                            "offline_settings": [
                              {
                                "payment_method": "CASH",
                                "instructions": ""
                              }
                            ],
                            "user_instrument_vault_id": ""
                          }
                        },
                        "attendees": [
                          {}
                        ],
                        "time_remaining": 100,
                        "resource_uri": "https://www.eventbriteapi.com/v3/orders/1234/",
                        "status": "placed",
                        "ticket_buyer_settings": {
                          "confirmation_message": {
                            "text": "Some text",
                            "html": "<p>Some text</p>"
                          },
                          "instructions": {
                            "text": "Some text",
                            "html": "<p>Some text</p>"
                          },
                          "event_id": "3003",
                          "refund_request_enabled": false,
                          "ticket_class_confirmation_settings": [
                            {
                              "ticket_class_id": "1023",
                              "event_id": "3003",
                              "confirmation_message": {
                                "text": "Some text",
                                "html": "<p>Some text</p>"
                              }
                            }
                          ]
                        },
                        "contact_list_preferences": {
                          "has_contact_list": true,
                          "has_opted_in": true,
                          "_type": "order_contact_list_preferences"
                        }
                      },
                      "guestlist_id": null,
                      "invited_by": null,
                      "assigned_unit": {
                        "unit_id": "18-1:2",
                        "description": "Some description",
                        "location_image": {
                          "url": "",
                          "x": 0,
                          "y": 0
                        },
                        "labels": [
                          "100",
                          "A",
                          "23"
                        ],
                        "titles": [
                          "Area",
                          "Row",
                          "Seat"
                        ]
                      },
                      "delivery_method": "electronic",
                      "variant_id": null,
                      "contact_list_preferences": {
                        "has_contact_list": true,
                        "has_opted_in": true,
                        "_type": "attendee_contact_list_preferences"
                      },
                      "resource_uri": ""
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/organizations/{organization_id}/attendees/": {
      "get": {
        "tags": [
          "Attendee"
        ],
        "summary": "List Attendees by Organization",
        "description": "List Attendees of an Organization's Events by Organization ID. Returns a paginated response.",
        "operationId": "ListAttendeesbyOrganization",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "Organization ID.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "12345"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Filter Attendees by status of either `attending` or `not_attending`.",
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/status11"
            }
          },
          {
            "name": "changed_since",
            "in": "query",
            "description": "Filter Attendees by resource changed on or after the time given.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListAttendeesbyOrganizationresponse"
                },
                "example": {
                  "pagination": {
                    "object_count": 1,
                    "page_number": 1,
                    "page_size": 1,
                    "page_count": 1,
                    "continuation": "dGhpcyBpcyBhIGNvbnRpbnVhdGlvbiB0b2tlbg",
                    "has_more_items": false
                  },
                  "attendees": [
                    {
                      "id": "12345",
                      "created": "2018-05-12T02:00:00Z",
                      "changed": "2018-05-12T02:00:00Z",
                      "ticket_class_id": "12345",
                      "ticket_class_name": "General Admission",
                      "profile": {
                        "name": "John Smith",
                        "email": "jhon.smith@example.com",
                        "first_name": "John",
                        "last_name": "Smith",
                        "prefix": "Mr.",
                        "suffix": "Sr",
                        "age": 33,
                        "job_title": "Software Enginner",
                        "company": "Eventbrite",
                        "website": "https://mysite.com",
                        "blog": "https://mysite.com",
                        "gender": "male",
                        "birth_date": "1984-12-06",
                        "cell_phone": "555 555-1234",
                        "work_phone": "555 555-1234",
                        "addresses": {
                          "home": {
                            "address_1": null,
                            "address_2": null,
                            "city": null,
                            "region": null,
                            "postal_code": null,
                            "country": null,
                            "latitude": null,
                            "longitude": null,
                            "localized_address_display": "",
                            "localized_area_display": "",
                            "localized_multi_line_address_display": []
                          },
                          "ship": {
                            "address_1": null,
                            "address_2": null,
                            "city": null,
                            "region": null,
                            "postal_code": null,
                            "country": null,
                            "latitude": null,
                            "longitude": null,
                            "localized_address_display": "",
                            "localized_area_display": "",
                            "localized_multi_line_address_display": []
                          },
                          "work": {
                            "address_1": null,
                            "address_2": null,
                            "city": null,
                            "region": null,
                            "postal_code": null,
                            "country": null,
                            "latitude": null,
                            "longitude": null,
                            "localized_address_display": "",
                            "localized_area_display": "",
                            "localized_multi_line_address_display": []
                          },
                          "bill": {
                            "address_1": null,
                            "address_2": null,
                            "city": null,
                            "region": null,
                            "postal_code": null,
                            "country": null,
                            "latitude": null,
                            "longitude": null,
                            "localized_address_display": "",
                            "localized_area_display": "",
                            "localized_multi_line_address_display": []
                          }
                        }
                      },
                      "questions": [
                        {
                          "id": "20090892",
                          "label": "What's your question?",
                          "type": "text",
                          "required": false
                        }
                      ],
                      "answers": [
                        {
                          "question_id": "20090892",
                          "attendee_id": "1009831492",
                          "question": "What's your question?",
                          "type": "text",
                          "answer": "This is my answer"
                        }
                      ],
                      "barcodes": [
                        {
                          "barcode": "1234093511009831492001",
                          "status": "unused",
                          "created": "2018-08-18T22:24:03Z",
                          "changed": "2018-08-18T22:24:03Z",
                          "checkin_type": 0,
                          "is_printed": false
                        }
                      ],
                      "team": {
                        "id": "12345",
                        "name": "Great Team!",
                        "date_joined": "2018-05-12T02:00:00Z",
                        "event_id": "12345"
                      },
                      "affiliate": "affiliate_code",
                      "checked_in": false,
                      "cancelled": false,
                      "refunded": false,
                      "costs": {
                        "base_price": {
                          "currency": "USD",
                          "value": 432,
                          "major_value": "4.32",
                          "display": "4.32 USD"
                        },
                        "gross": {
                          "currency": "USD",
                          "value": 432,
                          "major_value": "4.32",
                          "display": "4.32 USD"
                        },
                        "eventbrite_fee": {
                          "currency": "USD",
                          "value": 432,
                          "major_value": "4.32",
                          "display": "4.32 USD"
                        },
                        "payment_fee": {
                          "currency": "USD",
                          "value": 432,
                          "major_value": "4.32",
                          "display": "4.32 USD"
                        },
                        "tax": {
                          "currency": "USD",
                          "value": 432,
                          "major_value": "4.32",
                          "display": "4.32 USD"
                        }
                      },
                      "status": "",
                      "event_id": "12345",
                      "event": {
                        "id": "12345",
                        "name": {
                          "text": "Some text",
                          "html": "<p>Some text</p>"
                        },
                        "description": {
                          "text": "Some text",
                          "html": "<p>Some text</p>"
                        },
                        "start": {
                          "timezone": "America/Los_Angeles",
                          "utc": "2018-05-12T02:00:00Z",
                          "local": "2018-05-11T19:00:00"
                        },
                        "end": {
                          "timezone": "America/Los_Angeles",
                          "utc": "2018-05-12T02:00:00Z",
                          "local": "2018-05-11T19:00:00"
                        },
                        "url": "https://www.eventbrite.com/e/45263283700",
                        "vanity_url": "https://testevent.eventbrite.com",
                        "created": "2017-02-19T20:28:14Z",
                        "changed": "2017-02-19T20:28:14Z",
                        "published": "2017-02-19T20:28:14Z",
                        "status": "live",
                        "currency": "USD",
                        "online_event": false,
                        "organization_id": "",
                        "organizer_id": "",
                        "organizer": {
                          "name": "",
                          "description": {
                            "text": "Some text",
                            "html": "<p>Some text</p>"
                          },
                          "long_description": {
                            "text": "Some text",
                            "html": "<p>Some text</p>"
                          },
                          "logo_id": null,
                          "logo": {
                            "id": "12345",
                            "url": "https://image.com",
                            "crop_mask": {
                              "top_left": {
                                "y": 15,
                                "x": 15
                              },
                              "width": 15,
                              "height": 15
                            },
                            "original": {
                              "url": "https://image.com",
                              "width": 800,
                              "height": 400
                            },
                            "aspect_ratio": "2",
                            "edge_color": "#6a7c8b",
                            "edge_color_set": true
                          },
                          "resource_uri": "https://www.eventbriteapi.com/v3/organizers/12345/",
                          "id": "12345",
                          "url": "https://www.eventbrite.com/o/12345/",
                          "num_past_events": 5,
                          "num_future_events": 1,
                          "twitter": "@abc",
                          "facebook": "abc"
                        },
                        "logo_id": null,
                        "logo": {
                          "id": "12345",
                          "url": "https://image.com",
                          "crop_mask": {
                            "top_left": {
                              "y": 15,
                              "x": 15
                            },
                            "width": 15,
                            "height": 15
                          },
                          "original": {
                            "url": "https://image.com",
                            "width": 800,
                            "height": 400
                          },
                          "aspect_ratio": "2",
                          "edge_color": "#6a7c8b",
                          "edge_color_set": true
                        },
                        "venue": {
                          "name": "Great Venue",
                          "age_restriction": null,
                          "capacity": 100,
                          "address": {
                            "address_1": null,
                            "address_2": null,
                            "city": null,
                            "region": null,
                            "postal_code": null,
                            "country": null,
                            "latitude": null,
                            "longitude": null
                          },
                          "resource_uri": "https://www.eventbriteapi.com/v3/venues/3003/",
                          "id": "3003",
                          "latitude": "49.28497549999999",
                          "longitude": "123.11082529999999"
                        },
                        "format_id": null,
                        "format": {
                          "id": "2",
                          "name": "Seminar or Talk",
                          "name_localized": "Seminar or Talk",
                          "short_name": "Seminar",
                          "short_name_localized": "Seminar",
                          "resource_uri": "https://www.eventbriteapi.com/v3/formats/2/"
                        },
                        "category": {
                          "id": "103",
                          "resource_uri": "https://www.eventbriteapi.com/v3/categories/103/",
                          "name": "Music",
                          "name_localized": "Music",
                          "short_name": "Music",
                          "short_name_localized": "Music",
                          "subcategories": [
                            {
                              "id": "3003",
                              "resource_uri": "https://www.eventbriteapi.com/v3/subcategories/3003/",
                              "name": "Classical",
                              "parent_category": {}
                            }
                          ]
                        },
                        "subcategory": {
                          "id": "3003",
                          "resource_uri": "https://www.eventbriteapi.com/v3/subcategories/3003/",
                          "name": "Classical",
                          "parent_category": {
                            "id": "103",
                            "resource_uri": "https://www.eventbriteapi.com/v3/categories/103/",
                            "name": "Music",
                            "name_localized": "Music",
                            "short_name": "Music",
                            "short_name_localized": "Music",
                            "subcategories": [
                              {}
                            ]
                          }
                        },
                        "music_properties": {
                          "age_restriction": null,
                          "presented_by": null,
                          "door_time": "2019-05-12T-19:00:00Z"
                        },
                        "bookmark_info": {
                          "bookmarked": false
                        },
                        "ticket_availability": {
                          "has_available_tickets": false,
                          "minimum_ticket_price": {
                            "currency": "USD",
                            "value": 432,
                            "major_value": "4.32",
                            "display": "4.32 USD"
                          },
                          "maximum_ticket_price": {
                            "currency": "USD",
                            "value": 432,
                            "major_value": "4.32",
                            "display": "4.32 USD"
                          },
                          "is_sold_out": true,
                          "start_sales_date": {
                            "timezone": "America/Los_Angeles",
                            "utc": "2018-05-12T02:00:00Z",
                            "local": "2018-05-11T19:00:00"
                          },
                          "waitlist_available": false
                        },
                        "listed": false,
                        "shareable": false,
                        "invite_only": false,
                        "show_remaining": true,
                        "password": "12345",
                        "capacity": 100,
                        "capacity_is_custom": true,
                        "tx_time_limit": "12345",
                        "hide_start_date": true,
                        "hide_end_date": true,
                        "locale": "en_US",
                        "is_locked": true,
                        "privacy_setting": "unlocked",
                        "is_externally_ticketed": false,
                        "external_ticketing": {
                          "external_url": "",
                          "ticketing_provider_name": "",
                          "is_free": false,
                          "minimum_ticket_price": {
                            "currency": "USD",
                            "value": 432,
                            "major_value": "4.32",
                            "display": "4.32 USD"
                          },
                          "maximum_ticket_price": {
                            "currency": "USD",
                            "value": 432,
                            "major_value": "4.32",
                            "display": "4.32 USD"
                          },
                          "sales_start": "",
                          "sales_end": ""
                        },
                        "is_series": true,
                        "is_series_parent": true,
                        "series_id": "56321",
                        "is_reserved_seating": true,
                        "show_pick_a_seat": true,
                        "show_seatmap_thumbnail": true,
                        "show_colors_in_seatmap_thumbnail": true,
                        "is_free": true,
                        "source": "api",
                        "version": "null",
                        "resource_uri": "https://www.eventbriteapi.com/v3/events/1234/",
                        "event_sales_status": {
                          "sales_status": "text",
                          "start_sales_date": {
                            "timezone": "America/Los_Angeles",
                            "utc": "2018-05-12T02:00:00Z",
                            "local": "2018-05-11T19:00:00"
                          }
                        },
                        "checkout_settings": {
                          "created": "2018-01-31T13:00:00Z",
                          "changed": "2018-01-31T13:00:00Z",
                          "country_code": "",
                          "currency_code": "",
                          "checkout_method": "paypal",
                          "offline_settings": [
                            {
                              "payment_method": "CASH",
                              "instructions": ""
                            }
                          ],
                          "user_instrument_vault_id": ""
                        }
                      },
                      "order_id": "12345",
                      "order": {
                        "id": "442719216",
                        "created": "2018-05-12T02:00:00Z",
                        "changed": "2018-05-12T02:00:00Z",
                        "name": "John Smith",
                        "first_name": "John",
                        "last_name": "Smith",
                        "email": "john.smith@example.com",
                        "costs": {
                          "base_price": {
                            "currency": "USD",
                            "value": 432,
                            "major_value": "4.32",
                            "display": "4.32 USD"
                          },
                          "display_price": {
                            "currency": "USD",
                            "value": 432,
                            "major_value": "4.32",
                            "display": "4.32 USD"
                          },
                          "display_fee": {
                            "currency": "USD",
                            "value": 432,
                            "major_value": "4.32",
                            "display": "4.32 USD"
                          },
                          "gross": {
                            "currency": "USD",
                            "value": 432,
                            "major_value": "4.32",
                            "display": "4.32 USD"
                          },
                          "eventbrite_fee": {
                            "currency": "USD",
                            "value": 432,
                            "major_value": "4.32",
                            "display": "4.32 USD"
                          },
                          "payment_fee": {
                            "currency": "USD",
                            "value": 432,
                            "major_value": "4.32",
                            "display": "4.32 USD"
                          },
                          "tax": {
                            "currency": "USD",
                            "value": 432,
                            "major_value": "4.32",
                            "display": "4.32 USD"
                          },
                          "display_tax": {
                            "currency": "USD",
                            "value": 432,
                            "major_value": "4.32",
                            "display": "4.32 USD"
                          },
                          "price_before_discount": {
                            "currency": "USD",
                            "value": 432,
                            "major_value": "4.32",
                            "display": "4.32 USD"
                          },
                          "discount_amount": {
                            "currency": "USD",
                            "value": 432,
                            "major_value": "4.32",
                            "display": "4.32 USD"
                          },
                          "discount_type": "coded",
                          "fee_components": [
                            {
                              "intermediate": false,
                              "name": "royalty",
                              "internal_name": "service fee",
                              "group_name": "service fee",
                              "value": 200,
                              "discount": {
                                "amount": {
                                  "currency": "USD",
                                  "value": 432,
                                  "major_value": "4.32",
                                  "display": "4.32 USD"
                                },
                                "reason": "TOGGLED_OFF_FEE"
                              },
                              "rule": {
                                "id": "95"
                              },
                              "base": "item.display-includable",
                              "bucket": "fee",
                              "recipient": "event.6018",
                              "payer": "attendee"
                            }
                          ],
                          "tax_components": [
                            {
                              "intermediate": false,
                              "name": "royalty",
                              "internal_name": "service fee",
                              "group_name": "service fee",
                              "value": 200,
                              "discount": {
                                "amount": {
                                  "currency": "USD",
                                  "value": 432,
                                  "major_value": "4.32",
                                  "display": "4.32 USD"
                                },
                                "reason": "TOGGLED_OFF_FEE"
                              },
                              "rule": {
                                "id": "95"
                              },
                              "base": "item.display-includable",
                              "bucket": "fee",
                              "recipient": "event.6018",
                              "payer": "attendee"
                            }
                          ],
                          "shipping_components": [
                            {
                              "intermediate": false,
                              "name": "royalty",
                              "internal_name": "service fee",
                              "group_name": "service fee",
                              "value": 200,
                              "discount": {
                                "amount": {
                                  "currency": "USD",
                                  "value": 432,
                                  "major_value": "4.32",
                                  "display": "4.32 USD"
                                },
                                "reason": "TOGGLED_OFF_FEE"
                              },
                              "rule": {
                                "id": "95"
                              },
                              "base": "item.display-includable",
                              "bucket": "fee",
                              "recipient": "event.6018",
                              "payer": "attendee"
                            }
                          ],
                          "has_gts_tax": false,
                          "tax_name": "VAT"
                        },
                        "event_id": "17937020110",
                        "event": {
                          "id": "12345",
                          "name": {
                            "text": "Some text",
                            "html": "<p>Some text</p>"
                          },
                          "description": {
                            "text": "Some text",
                            "html": "<p>Some text</p>"
                          },
                          "start": {
                            "timezone": "America/Los_Angeles",
                            "utc": "2018-05-12T02:00:00Z",
                            "local": "2018-05-11T19:00:00"
                          },
                          "end": {
                            "timezone": "America/Los_Angeles",
                            "utc": "2018-05-12T02:00:00Z",
                            "local": "2018-05-11T19:00:00"
                          },
                          "url": "https://www.eventbrite.com/e/45263283700",
                          "vanity_url": "https://testevent.eventbrite.com",
                          "created": "2017-02-19T20:28:14Z",
                          "changed": "2017-02-19T20:28:14Z",
                          "published": "2017-02-19T20:28:14Z",
                          "status": "live",
                          "currency": "USD",
                          "online_event": false,
                          "organization_id": "",
                          "organizer_id": "",
                          "organizer": {
                            "name": "",
                            "description": {
                              "text": "Some text",
                              "html": "<p>Some text</p>"
                            },
                            "long_description": {
                              "text": "Some text",
                              "html": "<p>Some text</p>"
                            },
                            "logo_id": null,
                            "logo": {
                              "id": "12345",
                              "url": "https://image.com",
                              "crop_mask": {
                                "top_left": {
                                  "y": 15,
                                  "x": 15
                                },
                                "width": 15,
                                "height": 15
                              },
                              "original": {
                                "url": "https://image.com",
                                "width": 800,
                                "height": 400
                              },
                              "aspect_ratio": "2",
                              "edge_color": "#6a7c8b",
                              "edge_color_set": true
                            },
                            "resource_uri": "https://www.eventbriteapi.com/v3/organizers/12345/",
                            "id": "12345",
                            "url": "https://www.eventbrite.com/o/12345/",
                            "num_past_events": 5,
                            "num_future_events": 1,
                            "twitter": "@abc",
                            "facebook": "abc"
                          },
                          "logo_id": null,
                          "logo": {
                            "id": "12345",
                            "url": "https://image.com",
                            "crop_mask": {
                              "top_left": {
                                "y": 15,
                                "x": 15
                              },
                              "width": 15,
                              "height": 15
                            },
                            "original": {
                              "url": "https://image.com",
                              "width": 800,
                              "height": 400
                            },
                            "aspect_ratio": "2",
                            "edge_color": "#6a7c8b",
                            "edge_color_set": true
                          },
                          "venue": {
                            "name": "Great Venue",
                            "age_restriction": null,
                            "capacity": 100,
                            "address": {
                              "address_1": null,
                              "address_2": null,
                              "city": null,
                              "region": null,
                              "postal_code": null,
                              "country": null,
                              "latitude": null,
                              "longitude": null
                            },
                            "resource_uri": "https://www.eventbriteapi.com/v3/venues/3003/",
                            "id": "3003",
                            "latitude": "49.28497549999999",
                            "longitude": "123.11082529999999"
                          },
                          "format_id": null,
                          "format": {
                            "id": "2",
                            "name": "Seminar or Talk",
                            "name_localized": "Seminar or Talk",
                            "short_name": "Seminar",
                            "short_name_localized": "Seminar",
                            "resource_uri": "https://www.eventbriteapi.com/v3/formats/2/"
                          },
                          "category": {
                            "id": "103",
                            "resource_uri": "https://www.eventbriteapi.com/v3/categories/103/",
                            "name": "Music",
                            "name_localized": "Music",
                            "short_name": "Music",
                            "short_name_localized": "Music",
                            "subcategories": [
                              {
                                "id": "3003",
                                "resource_uri": "https://www.eventbriteapi.com/v3/subcategories/3003/",
                                "name": "Classical",
                                "parent_category": {}
                              }
                            ]
                          },
                          "subcategory": {
                            "id": "3003",
                            "resource_uri": "https://www.eventbriteapi.com/v3/subcategories/3003/",
                            "name": "Classical",
                            "parent_category": {
                              "id": "103",
                              "resource_uri": "https://www.eventbriteapi.com/v3/categories/103/",
                              "name": "Music",
                              "name_localized": "Music",
                              "short_name": "Music",
                              "short_name_localized": "Music",
                              "subcategories": [
                                {}
                              ]
                            }
                          },
                          "music_properties": {
                            "age_restriction": null,
                            "presented_by": null,
                            "door_time": "2019-05-12T-19:00:00Z"
                          },
                          "bookmark_info": {
                            "bookmarked": false
                          },
                          "ticket_availability": {
                            "has_available_tickets": false,
                            "minimum_ticket_price": {
                              "currency": "USD",
                              "value": 432,
                              "major_value": "4.32",
                              "display": "4.32 USD"
                            },
                            "maximum_ticket_price": {
                              "currency": "USD",
                              "value": 432,
                              "major_value": "4.32",
                              "display": "4.32 USD"
                            },
                            "is_sold_out": true,
                            "start_sales_date": {
                              "timezone": "America/Los_Angeles",
                              "utc": "2018-05-12T02:00:00Z",
                              "local": "2018-05-11T19:00:00"
                            },
                            "waitlist_available": false
                          },
                          "listed": false,
                          "shareable": false,
                          "invite_only": false,
                          "show_remaining": true,
                          "password": "12345",
                          "capacity": 100,
                          "capacity_is_custom": true,
                          "tx_time_limit": "12345",
                          "hide_start_date": true,
                          "hide_end_date": true,
                          "locale": "en_US",
                          "is_locked": true,
                          "privacy_setting": "unlocked",
                          "is_externally_ticketed": false,
                          "external_ticketing": {
                            "external_url": "",
                            "ticketing_provider_name": "",
                            "is_free": false,
                            "minimum_ticket_price": {
                              "currency": "USD",
                              "value": 432,
                              "major_value": "4.32",
                              "display": "4.32 USD"
                            },
                            "maximum_ticket_price": {
                              "currency": "USD",
                              "value": 432,
                              "major_value": "4.32",
                              "display": "4.32 USD"
                            },
                            "sales_start": "",
                            "sales_end": ""
                          },
                          "is_series": true,
                          "is_series_parent": true,
                          "series_id": "56321",
                          "is_reserved_seating": true,
                          "show_pick_a_seat": true,
                          "show_seatmap_thumbnail": true,
                          "show_colors_in_seatmap_thumbnail": true,
                          "is_free": true,
                          "source": "api",
                          "version": "null",
                          "resource_uri": "https://www.eventbriteapi.com/v3/events/1234/",
                          "event_sales_status": {
                            "sales_status": "text",
                            "start_sales_date": {
                              "timezone": "America/Los_Angeles",
                              "utc": "2018-05-12T02:00:00Z",
                              "local": "2018-05-11T19:00:00"
                            }
                          },
                          "checkout_settings": {
                            "created": "2018-01-31T13:00:00Z",
                            "changed": "2018-01-31T13:00:00Z",
                            "country_code": "",
                            "currency_code": "",
                            "checkout_method": "paypal",
                            "offline_settings": [
                              {
                                "payment_method": "CASH",
                                "instructions": ""
                              }
                            ],
                            "user_instrument_vault_id": ""
                          }
                        },
                        "attendees": [
                          {}
                        ],
                        "time_remaining": 100,
                        "resource_uri": "https://www.eventbriteapi.com/v3/orders/1234/",
                        "status": "placed",
                        "ticket_buyer_settings": {
                          "confirmation_message": {
                            "text": "Some text",
                            "html": "<p>Some text</p>"
                          },
                          "instructions": {
                            "text": "Some text",
                            "html": "<p>Some text</p>"
                          },
                          "event_id": "3003",
                          "refund_request_enabled": false,
                          "ticket_class_confirmation_settings": [
                            {
                              "ticket_class_id": "1023",
                              "event_id": "3003",
                              "confirmation_message": {
                                "text": "Some text",
                                "html": "<p>Some text</p>"
                              }
                            }
                          ]
                        },
                        "contact_list_preferences": {
                          "has_contact_list": true,
                          "has_opted_in": true,
                          "_type": "order_contact_list_preferences"
                        }
                      },
                      "guestlist_id": null,
                      "invited_by": null,
                      "assigned_unit": {
                        "unit_id": "18-1:2",
                        "description": "Some description",
                        "location_image": {
                          "url": "",
                          "x": 0,
                          "y": 0
                        },
                        "labels": [
                          "100",
                          "A",
                          "23"
                        ],
                        "titles": [
                          "Area",
                          "Row",
                          "Seat"
                        ]
                      },
                      "delivery_method": "electronic",
                      "variant_id": null,
                      "contact_list_preferences": {
                        "has_contact_list": true,
                        "has_opted_in": true,
                        "_type": "attendee_contact_list_preferences"
                      },
                      "resource_uri": ""
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/categories/{id}/": {
      "get": {
        "tags": [
          "Categories"
        ],
        "summary": "Category by ID",
        "description": "Gets a `category` by ID as ``category``.",
        "operationId": "CategorybyID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Category ID",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "1234"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategorybyIDresponse"
                },
                "example": {
                  "category": {
                    "id": "103",
                    "resource_uri": "https://www.eventbriteapi.com/v3/categories/103/",
                    "name": "Music",
                    "name_localized": "Music",
                    "short_name": "Music",
                    "short_name_localized": "Music",
                    "subcategories": [
                      {
                        "id": "3003",
                        "resource_uri": "https://www.eventbriteapi.com/v3/subcategories/3003/",
                        "name": "Classical",
                        "parent_category": {}
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/subcategories/{subcategory_id}/": {
      "get": {
        "tags": [
          "Categories"
        ],
        "summary": "Subcategory by ID",
        "description": "Retrieve a Subcategory by Subcategory ID.",
        "operationId": "SubcategorybyID",
        "parameters": [
          {
            "name": "subcategory_id",
            "in": "path",
            "description": "Subcategory ID",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "12345"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubcategorybyIDresponse"
                },
                "example": {
                  "subcategory": {
                    "id": "3003",
                    "resource_uri": "https://www.eventbriteapi.com/v3/subcategories/3003/",
                    "name": "Classical",
                    "parent_category": {
                      "id": "103",
                      "resource_uri": "https://www.eventbriteapi.com/v3/categories/103/",
                      "name": "Music",
                      "name_localized": "Music",
                      "short_name": "Music",
                      "short_name_localized": "Music",
                      "subcategories": [
                        {}
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/categories/": {
      "get": {
        "tags": [
          "Categories"
        ],
        "summary": "List of Categories",
        "description": "Returns a list of Category as categories, including subcategories nested. Returns a paginated response.",
        "operationId": "ListofCategories",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListofCategoriesresponse"
                },
                "example": {
                  "locale": "en_US",
                  "pagination": {
                    "object_count": 1,
                    "page_number": 1,
                    "page_size": 1,
                    "page_count": 1,
                    "continuation": "dGhpcyBpcyBhIGNvbnRpbnVhdGlvbiB0b2tlbg",
                    "has_more_items": false
                  },
                  "categories": [
                    {
                      "id": "103",
                      "resource_uri": "https://www.eventbriteapi.com/v3/categories/103/",
                      "name": "Music",
                      "name_localized": "Music",
                      "short_name": "Music",
                      "short_name_localized": "Music",
                      "subcategories": [
                        {
                          "id": "3003",
                          "resource_uri": "https://www.eventbriteapi.com/v3/subcategories/3003/",
                          "name": "Classical",
                          "parent_category": {}
                        }
                      ]
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/subcategories/": {
      "get": {
        "tags": [
          "Categories"
        ],
        "summary": "List of Subcategories",
        "description": "List all available Subcategories. Returns a paginated response.",
        "operationId": "ListofSubcategories",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListofSubcategoriesresponse"
                },
                "example": {
                  "locale": "en_US",
                  "pagination": {
                    "object_count": 1,
                    "page_number": 1,
                    "page_size": 1,
                    "page_count": 1,
                    "continuation": "dGhpcyBpcyBhIGNvbnRpbnVhdGlvbiB0b2tlbg",
                    "has_more_items": false
                  },
                  "subcategories": [
                    {
                      "id": "3003",
                      "resource_uri": "https://www.eventbriteapi.com/v3/subcategories/3003/",
                      "name": "Classical",
                      "parent_category": {
                        "id": "103",
                        "resource_uri": "https://www.eventbriteapi.com/v3/categories/103/",
                        "name": "Music",
                        "name_localized": "Music",
                        "short_name": "Music",
                        "short_name_localized": "Music",
                        "subcategories": [
                          {}
                        ]
                      }
                    }
                  ],
                  "subcategory": {
                    "id": "3003",
                    "resource_uri": "https://www.eventbriteapi.com/v3/subcategories/3003/",
                    "name": "Classical",
                    "parent_category": {
                      "id": "103",
                      "resource_uri": "https://www.eventbriteapi.com/v3/categories/103/",
                      "name": "Music",
                      "name_localized": "Music",
                      "short_name": "Music",
                      "short_name_localized": "Music",
                      "subcategories": [
                        {}
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/discounts/{discount_id}/": {
      "get": {
        "tags": [
          "Discount"
        ],
        "summary": "Retrieve a Discount",
        "description": "Retrieve a Discount by Discount ID.",
        "operationId": "RetrieveaDiscount",
        "parameters": [
          {
            "name": "discount_id",
            "in": "path",
            "description": "Discount ID.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "12345"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Discount"
                },
                "example": {
                  "type": "access",
                  "code": "abcde",
                  "amount_off": "10",
                  "percent_off": "20",
                  "event_id": "12345",
                  "ticket_class_ids": [],
                  "quantity_available": 5,
                  "start_date": "",
                  "start_date_relative": 0,
                  "end_date": "",
                  "end_date_relative": 0,
                  "ticket_group_id": "12345",
                  "hold_ids": [
                    "H1234"
                  ],
                  "id": "12345",
                  "quantity_sold": 5
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "Discount"
        ],
        "summary": "Update a Discount",
        "description": "Update a Discount by Discount ID.",
        "operationId": "UpdateaDiscount",
        "parameters": [
          {
            "name": "discount_id",
            "in": "path",
            "description": "Discount ID.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "12345"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateaDiscountrequest"
              },
              "example": {
                "discount": {
                  "type": "access",
                  "code": "abcde",
                  "amount_off": "10",
                  "percent_off": "20",
                  "event_id": "12345",
                  "ticket_class_ids": [],
                  "quantity_available": 5,
                  "start_date": "",
                  "start_date_relative": 0,
                  "end_date": "",
                  "end_date_relative": 0,
                  "ticket_group_id": "12345",
                  "hold_ids": [
                    "H1234"
                  ]
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Discount"
                },
                "example": {
                  "type": "access",
                  "code": "abcde",
                  "amount_off": "10",
                  "percent_off": "20",
                  "event_id": "12345",
                  "ticket_class_ids": [],
                  "quantity_available": 5,
                  "start_date": "",
                  "start_date_relative": 0,
                  "end_date": "",
                  "end_date_relative": 0,
                  "ticket_group_id": "12345",
                  "hold_ids": [
                    "H1234"
                  ],
                  "id": "12345",
                  "quantity_sold": 5
                }
              }
            }
          },
          "400": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiscountCreateError"
                },
                "example": {
                  "error_description": "",
                  "error_detail": {},
                  "status_code": 0,
                  "error": "AMOUNT_AND_PERCENT_OFF_PROVIDED"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "Discount"
        ],
        "summary": "Delete a Discount",
        "description": "Delete a Discount. Only unused Discounts can be deleted.\n\n<b>Warning:</b> A Discount cannot be restored after being deleted.",
        "operationId": "DeleteaDiscount",
        "parameters": [
          {
            "name": "discount_id",
            "in": "path",
            "description": "Discount ID.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "12345"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Discount"
                },
                "example": {
                  "type": "access",
                  "code": "abcde",
                  "amount_off": "10",
                  "percent_off": "20",
                  "event_id": "12345",
                  "ticket_class_ids": [],
                  "quantity_available": 5,
                  "start_date": "",
                  "start_date_relative": 0,
                  "end_date": "",
                  "end_date_relative": 0,
                  "ticket_group_id": "12345",
                  "hold_ids": [
                    "H1234"
                  ],
                  "id": "12345",
                  "quantity_sold": 5
                }
              }
            }
          },
          "400": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteaDiscountresponse"
                },
                "example": {
                  "error_description": "",
                  "error_detail": {},
                  "status_code": 0,
                  "error": "DISCOUNT_CANNOT_BE_DELETED"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/organizations/{organization_id}/discounts/": {
      "post": {
        "tags": [
          "Discount"
        ],
        "summary": "Create a Discount",
        "description": "Create a new Discount.",
        "operationId": "CreateaDiscount",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "Organization ID.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "12345"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateaDiscountrequest"
              },
              "example": {
                "discount": {
                  "type": "access",
                  "code": "abcde",
                  "amount_off": "10",
                  "percent_off": "20",
                  "event_id": "12345",
                  "ticket_class_ids": [],
                  "quantity_available": 5,
                  "start_date": "",
                  "start_date_relative": 0,
                  "end_date": "",
                  "end_date_relative": 0,
                  "ticket_group_id": "12345",
                  "hold_ids": [
                    "H1234"
                  ]
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Discount"
                },
                "example": {
                  "type": "access",
                  "code": "abcde",
                  "amount_off": "10",
                  "percent_off": "20",
                  "event_id": "12345",
                  "ticket_class_ids": [],
                  "quantity_available": 5,
                  "start_date": "",
                  "start_date_relative": 0,
                  "end_date": "",
                  "end_date_relative": 0,
                  "ticket_group_id": "12345",
                  "hold_ids": [
                    "H1234"
                  ],
                  "id": "12345",
                  "quantity_sold": 5
                }
              }
            }
          },
          "400": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiscountCreateError"
                },
                "example": {
                  "error_description": "",
                  "error_detail": {},
                  "status_code": 0,
                  "error": "AMOUNT_AND_PERCENT_OFF_PROVIDED"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "get": {
        "tags": [
          "Discount"
        ],
        "summary": "Search Discounts by Organization",
        "description": "List Discounts by Organization ID. Returns a paginated response.",
        "operationId": "SearchDiscountsbyOrganization",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "Organization ID.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "12345"
            }
          },
          {
            "name": "scope",
            "in": "query",
            "description": "Discount scope.",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/scope"
            }
          },
          {
            "name": "code_filter",
            "in": "query",
            "description": "Filter Discounts by approximate match code or name.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "code",
            "in": "query",
            "description": "Filter Discount by exact match code or name.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "abcde"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of records to display on each returned page.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double",
              "example": 1
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "Discount type.",
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/type7"
            }
          },
          {
            "name": "ticket_group_id",
            "in": "query",
            "description": "Filter Discounts by Ticket Group ID.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "12345"
            }
          },
          {
            "name": "event_id",
            "in": "query",
            "description": "Filter Discounts by Event ID. Required for the `event` scope.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "12345"
            }
          },
          {
            "name": "order_by",
            "in": "query",
            "description": "Response order.",
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/order_by"
            }
          },
          {
            "name": "hold_ids",
            "in": "query",
            "description": "Filter discounts to only those that apply to specified hold IDs. IDs are in composite id format for either hold class (H123) or hold inventory tier (I123)",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchDiscountsbyOrganizationresponse"
                },
                "example": {
                  "discounts": [
                    {
                      "type": "access",
                      "code": "abcde",
                      "amount_off": "10",
                      "percent_off": "20",
                      "event_id": "12345",
                      "ticket_class_ids": [],
                      "quantity_available": 5,
                      "start_date": "",
                      "start_date_relative": 0,
                      "end_date": "",
                      "end_date_relative": 0,
                      "ticket_group_id": "12345",
                      "hold_ids": [
                        "H1234"
                      ],
                      "id": "12345",
                      "quantity_sold": 5
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchDiscountsbyOrganizationresponse1"
                },
                "example": {
                  "error_description": "",
                  "error_detail": {},
                  "status_code": 0,
                  "error": "CODE_AND_CODE_FILTER_PROVIDED"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/events/{event_id}/display_settings/": {
      "get": {
        "tags": [
          "Display Settings"
        ],
        "summary": "Retrieve Display Settings",
        "description": "Retrieve the Display Settings for an Event by Event ID.",
        "operationId": "RetrieveDisplaySettings",
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "description": "Event ID.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "12345"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DisplaySettings"
                },
                "example": {
                  "show_start_date": true,
                  "show_end_date": true,
                  "show_start_end_time": true,
                  "show_timezone": true,
                  "show_map": true,
                  "show_remaining": false,
                  "show_organizer_facebook": false,
                  "show_organizer_twitter": false,
                  "show_facebook_friends_going": false,
                  "terminology": "tickets_vertical"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "Display Settings"
        ],
        "summary": "Update Display Settings",
        "description": "Update Display Settings for an Event by Event ID.",
        "operationId": "UpdateDisplaySettings",
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "description": "Event ID.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "12345"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDisplaySettingsrequest"
              },
              "example": {
                "display_settings": {
                  "show_start_date": true,
                  "show_end_date": true,
                  "show_start_end_time": true,
                  "show_timezone": true,
                  "show_map": true,
                  "show_remaining": false,
                  "show_organizer_facebook": false,
                  "show_organizer_twitter": false,
                  "show_facebook_friends_going": false,
                  "terminology": "tickets_vertical"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DisplaySettings"
                },
                "example": {
                  "show_start_date": true,
                  "show_end_date": true,
                  "show_start_end_time": true,
                  "show_timezone": true,
                  "show_map": true,
                  "show_remaining": false,
                  "show_organizer_facebook": false,
                  "show_organizer_twitter": false,
                  "show_facebook_friends_going": false,
                  "terminology": "tickets_vertical"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/events/{event_id}/capacity_tier/": {
      "get": {
        "tags": [
          "Event Capacity"
        ],
        "summary": "Retrieve a Capacity Tier",
        "description": "Retrieve the capacity tier for an event.",
        "operationId": "RetrieveaCapacityTier",
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "description": "Event ID",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "5678"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CapacityTier"
                },
                "example": {
                  "event_id": "5678",
                  "quantity_pending": 2,
                  "quantity_sold": 10,
                  "quantity_total": 30,
                  "capacity_pending": 10,
                  "capacity_sold": 20,
                  "capacity_total": 100,
                  "capacity_is_custom": true,
                  "holds": [
                    {
                      "id": "I1234",
                      "event_id": "5678",
                      "name": "Marketing",
                      "abbreviation": "MKT",
                      "sort_order": 1,
                      "color": "#fac114",
                      "quantity_sold": 10,
                      "quantity_total": 30,
                      "quantity_pending": 5
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetrieveaCapacityTierresponse"
                },
                "example": {
                  "error_description": "",
                  "error_detail": {},
                  "status_code": 0,
                  "error": "NOT_AUTHORIZED"
                }
              }
            }
          },
          "404": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetrieveaCapacityTierresponse2"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "Event Capacity"
        ],
        "summary": "Update a Capacity Tier",
        "description": "Update the capacity tier for an event. Partial updates are supported. Submit only attributes that are changed.\n\nThese rules must apply when updating capacity tier:\n\n- Sum of `quantity_total` from capacity holds cannot exceed remaining capacity quantity\n\n- If the event is already oversold, new remaining capacity quantity cannot become further negative (oversold)\n\nTo **create GA capacity hold inventory tiers** for an event, include payload with `holds`. `capacity_total` must be supplied if event does not have a capacity set.\n\nFor example:\n\n```json\n{\n    \"capacity_total\": 100,\n    \"holds\": [\n        {\n            \"name\": \"Marketing\",\n            \"quantity_total\": 10,\n            \"sort_order\": 1,\n        },\n    ]\n}\n```\n\nTo **update/delete GA capacity hold inventory tiers** for an event, include payload with `holds` that contain `id` and fields of the hold tier to be updated. Deleting is the same as updating with `is_deleted` set to `true`.\n\nDeleting a hold tier that has tickets sold or associated with attendees will be denied. `quantity_total` for a hold tier cannot be reduced below the quantity used (`quantity_sold` + `quantity_pending`). Payload can contain partial data/partial hold inventory tiers to be updated/deleted.\n\nFor example:\n\n```json\n{\n    \"holds\": [\n        {\"id\": \"I987\", \"name\": \"Marketing\"},  # update existing tier\n        {\"id\": \"I988\", \"is_deleted\": true},  # delete existing tier\n        {\"name\": \"Accounting\", \"quantity_total\": 10},  # create new tier\n    ]\n}\n```",
        "operationId": "UpdateaCapacityTier",
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "description": "Event ID",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "5678"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateaCapacityTierrequest"
              },
              "example": {
                "capacity_tier": {
                  "capacity_total": 100,
                  "holds": [
                    {
                      "id": "H1234",
                      "event_id": "5678",
                      "name": "Marketing",
                      "abbreviation": "MKT",
                      "sort_order": 1,
                      "color": "#fac114",
                      "quantity_total": 30,
                      "is_deleted": false
                    }
                  ]
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CapacityTier"
                },
                "example": {
                  "event_id": "5678",
                  "quantity_pending": 2,
                  "quantity_sold": 10,
                  "quantity_total": 30,
                  "capacity_pending": 10,
                  "capacity_sold": 20,
                  "capacity_total": 100,
                  "capacity_is_custom": true,
                  "holds": [
                    {
                      "id": "I1234",
                      "event_id": "5678",
                      "name": "Marketing",
                      "abbreviation": "MKT",
                      "sort_order": 1,
                      "color": "#fac114",
                      "quantity_sold": 10,
                      "quantity_total": 30,
                      "quantity_pending": 5
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateaCapacityTierresponse"
                },
                "example": {
                  "error_description": "",
                  "error_detail": {},
                  "status_code": 0,
                  "error": "ARGUMENTS_ERROR"
                }
              }
            }
          },
          "403": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateaCapacityTierresponse2"
                },
                "example": {
                  "error_description": "",
                  "error_detail": {},
                  "status_code": 0,
                  "error": "NOT_AUTHORIZED"
                }
              }
            }
          },
          "404": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateaCapacityTierresponse4"
                },
                "example": {
                  "error_description": "",
                  "error_detail": {},
                  "status_code": 0,
                  "error": "NOT_FOUND"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/events/{event_id}/description/": {
      "get": {
        "tags": [
          "Event Description"
        ],
        "summary": "Retrieve Full HTML Description",
        "description": "Returns the fully rendered description for an Event as a string of HTML. This endpoint will work with events created using New or Classic Create.\n\n```json\n{\n \"description: <div>Example summary!<\\/div>\\n<div><P>My <EM>event's<\\/EM> description would go <STRONG>here<\\/STRONG>.<\\/P><\\/div>\"\n}\n```\n\n#### Permissions\n\n`event.details:read`",
        "operationId": "RetrieveFullHTMLDescription",
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "description": "Event ID.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "12345"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetrieveFullHTMLDescriptionresponse"
                },
                "example": {
                  "description": ""
                }
              }
            }
          },
          "400": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetrieveFullHTMLDescriptionresponse1"
                },
                "example": {
                  "error": "NOT_AUTHORIZED"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/events/{event_id}/schedules/": {
      "post": {
        "tags": [
          "Event Schedule"
        ],
        "summary": "Create an event schedule",
        "description": "Creating an event schedule requires that a series parent event has already been created. For instructions on how to create a series parent event, please refer to the [Create Event API](#events-create-api).\n\nCreating an event schedule will add occurrences to a series parent event, according to the pattern specified in the schedule. Each occurrence is backed by an [Event](#event_object), and will be associated with the series parent event specified in the request. If an occurrence specified by the schedule has the same date and time as an existing occurrence, the new occurrence is ignored and not created (the rest of the occurrences specified by the schedule are still created).",
        "operationId": "Createaneventschedule",
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "description": "Event ID. Must be a valid series parent event.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "12345"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Createaneventschedulerequest"
              },
              "example": {
                "schedule": {
                  "occurrence_duration": 3600,
                  "recurrence_rule": "DTSTART:20120201T023000Z\nRRULE:FREQ=MONTHLY;COUNT=5"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Schedule"
                },
                "example": {
                  "occurrence_duration": 3600,
                  "recurrence_rule": "DTSTART:20120201T023000Z\nRRULE:FREQ=MONTHLY;COUNT=5",
                  "id": "31",
                  "created_event_ids": [
                    "123"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Createaneventscheduleresponse"
                },
                "example": {
                  "error_description": "",
                  "error_detail": {},
                  "status_code": 0,
                  "error": "MISSING"
                }
              }
            }
          },
          "403": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Createaneventscheduleresponse2"
                },
                "example": {
                  "error_description": "",
                  "error_detail": {},
                  "status_code": 0,
                  "error": "NOT_AUTHORIZED"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/events/search/": {
      "get": {
        "tags": [
          "Event Search"
        ],
        "summary": "Search Events - deprecated",
        "description": "List public Events from Eventbrite. Returns a paginated response.\n\n>**Notice:** Access to this API was shut down at 11:59 pm PT on Thursday, December 12, 2019.\n\nFor more information regarding the shut down, refer to our [changelog](https://www.eventbrite.com/platform/docs/changelog).",
        "operationId": "SearchEvents-deprecated",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "Return only those Events matching the given keyword(s). Accepts any string as a keyword.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "Sort order of list of Events. Prefix with a hyphen to reverse the sort order.",
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/sort_by"
            }
          },
          {
            "name": "location.address",
            "in": "query",
            "description": "The address of the location you want to search for Events around.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "location.within",
            "in": "query",
            "description": "The distance you want to search around the given location. This should be an integer followed by â€œmiâ€ or â€œkmâ€.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "location.latitude",
            "in": "query",
            "description": "The latitude of the location you want to search for Events around.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "location.longitude",
            "in": "query",
            "description": "The longitude of the location you want to search for Events around.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "location.viewport.northeast.latitude",
            "in": "query",
            "description": "The latitude of the northeast corner of a viewport.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "location.viewport.northeast.longitude",
            "in": "query",
            "description": "The longitude of the northeast corner of a viewport.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "location.viewport.southwest.latitude",
            "in": "query",
            "description": "The latitude of the southwest corner of a viewport.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "location.viewport.southwest.longitude",
            "in": "query",
            "description": "The longitude of the southwest corner of a viewport.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "organizer.id",
            "in": "query",
            "description": "Filter Events organized by the given Organizer ID.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "user.id",
            "in": "query",
            "description": "Filter Events owned by the given User ID.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "categories",
            "in": "query",
            "description": "Filter Events under the given category IDs. This should be a comma delimited string of category IDs",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subcategories",
            "in": "query",
            "description": "Filter Events under the given subcategory IDs. This should be a comma delimited string of subcategory IDs.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "formats",
            "in": "query",
            "description": "Filter Events with the given format IDs. This should be a comma delimited string of format IDs.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "price",
            "in": "query",
            "description": "Filter Events that are â€œfreeâ€ or â€œpaidâ€.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "free"
            }
          },
          {
            "name": "start_date.range_start",
            "in": "query",
            "description": "Filter Events with start dates after the given date.",
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/local-datetime"
            }
          },
          {
            "name": "start_date.range_end",
            "in": "query",
            "description": "Filter Events with start dates before the given date.",
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/local-datetime"
            }
          },
          {
            "name": "start_date.keyword",
            "in": "query",
            "description": "Filter Events with start dates within the given keyword date range.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "today"
            }
          },
          {
            "name": "date_modified.range_start",
            "in": "query",
            "description": "Filter Events with modified dates after the given UTC date.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "date_modified.range_end",
            "in": "query",
            "description": "Filter Events with modified dates before the given UTC date.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "date_modified.keyword",
            "in": "query",
            "description": "Filter Events with modified dates within the given keyword date range.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "today"
            }
          },
          {
            "name": "search_type",
            "in": "query",
            "description": "Use the preconfigured settings for this type of search - Current option is â€œpromotedâ€.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "promoted"
            }
          },
          {
            "name": "include_all_series_instances",
            "in": "query",
            "description": "Boolean for whether or not you want to see all instances of repeating Events in search results.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "include_unavailable_events",
            "in": "query",
            "description": "Boolean for whether or not you want to see Events without tickets on sale.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "include_adult_events",
            "in": "query",
            "description": "Boolean for whether or not you want to see Events with adult content.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "incorporate_user_affinities",
            "in": "query",
            "description": "Incorporate additional information from the userâ€™s historic preferences.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "high_affinity_categories",
            "in": "query",
            "description": "Make search results prefer Events in these categories. This should be a comma delimited string of category IDs.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/json"
              ],
              "type": "string",
              "example": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchEvents-deprecatedresponse"
                },
                "example": {
                  "pagination": {
                    "object_count": 1,
                    "page_number": 1,
                    "page_size": 1,
                    "page_count": 1,
                    "continuation": "dGhpcyBpcyBhIGNvbnRpbnVhdGlvbiB0b2tlbg",
                    "has_more_items": false
                  },
                  "events": [
                    {
                      "id": "12345",
                      "name": {
                        "text": "Some text",
                        "html": "<p>Some text</p>"
                      },
                      "description": {
                        "text": "Some text",
                        "html": "<p>Some text</p>"
                      },
                      "start": {
                        "timezone": "America/Los_Angeles",
                        "utc": "2018-05-12T02:00:00Z",
                        "local": "2018-05-11T19:00:00"
                      },
                      "end": {
                        "timezone": "America/Los_Angeles",
                        "utc": "2018-05-12T02:00:00Z",
                        "local": "2018-05-11T19:00:00"
                      },
                      "url": "https://www.eventbrite.com/e/45263283700",
                      "vanity_url": "https://testevent.eventbrite.com",
                      "created": "2017-02-19T20:28:14Z",
                      "changed": "2017-02-19T20:28:14Z",
                      "published": "2017-02-19T20:28:14Z",
                      "status": "live",
                      "currency": "USD",
                      "online_event": false,
                      "organization_id": "",
                      "organizer_id": "",
                      "organizer": {
                        "name": "",
                        "description": {
                          "text": "Some text",
                          "html": "<p>Some text</p>"
                        },
                        "long_description": {
                          "text": "Some text",
                          "html": "<p>Some text</p>"
                        },
                        "logo_id": null,
                        "logo": {
                          "id": "12345",
                          "url": "https://image.com",
                          "crop_mask": {
                            "top_left": {
                              "y": 15,
                              "x": 15
                            },
                            "width": 15,
                            "height": 15
                          },
                          "original": {
                            "url": "https://image.com",
                            "width": 800,
                            "height": 400
                          },
                          "aspect_ratio": "2",
                          "edge_color": "#6a7c8b",
                          "edge_color_set": true
                        },
                        "resource_uri": "https://www.eventbriteapi.com/v3/organizers/12345/",
                        "id": "12345",
                        "url": "https://www.eventbrite.com/o/12345/",
                        "num_past_events": 5,
                        "num_future_events": 1,
                        "twitter": "@abc",
                        "facebook": "abc"
                      },
                      "logo_id": null,
                      "logo": {
                        "id": "12345",
                        "url": "https://image.com",
                        "crop_mask": {
                          "top_left": {
                            "y": 15,
                            "x": 15
                          },
                          "width": 15,
                          "height": 15
                        },
                        "original": {
                          "url": "https://image.com",
                          "width": 800,
                          "height": 400
                        },
                        "aspect_ratio": "2",
                        "edge_color": "#6a7c8b",
                        "edge_color_set": true
                      },
                      "venue": {
                        "name": "Great Venue",
                        "age_restriction": null,
                        "capacity": 100,
                        "address": {
                          "address_1": null,
                          "address_2": null,
                          "city": null,
                          "region": null,
                          "postal_code": null,
                          "country": null,
                          "latitude": null,
                          "longitude": null
                        },
                        "resource_uri": "https://www.eventbriteapi.com/v3/venues/3003/",
                        "id": "3003",
                        "latitude": "49.28497549999999",
                        "longitude": "123.11082529999999"
                      },
                      "format_id": null,
                      "format": {
                        "id": "2",
                        "name": "Seminar or Talk",
                        "name_localized": "Seminar or Talk",
                        "short_name": "Seminar",
                        "short_name_localized": "Seminar",
                        "resource_uri": "https://www.eventbriteapi.com/v3/formats/2/"
                      },
                      "category": {
                        "id": "103",
                        "resource_uri": "https://www.eventbriteapi.com/v3/categories/103/",
                        "name": "Music",
                        "name_localized": "Music",
                        "short_name": "Music",
                        "short_name_localized": "Music",
                        "subcategories": [
                          {
                            "id": "3003",
                            "resource_uri": "https://www.eventbriteapi.com/v3/subcategories/3003/",
                            "name": "Classical",
                            "parent_category": {}
                          }
                        ]
                      },
                      "subcategory": {
                        "id": "3003",
                        "resource_uri": "https://www.eventbriteapi.com/v3/subcategories/3003/",
                        "name": "Classical",
                        "parent_category": {
                          "id": "103",
                          "resource_uri": "https://www.eventbriteapi.com/v3/categories/103/",
                          "name": "Music",
                          "name_localized": "Music",
                          "short_name": "Music",
                          "short_name_localized": "Music",
                          "subcategories": [
                            {}
                          ]
                        }
                      },
                      "music_properties": {
                        "age_restriction": null,
                        "presented_by": null,
                        "door_time": "2019-05-12T-19:00:00Z"
                      },
                      "bookmark_info": {
                        "bookmarked": false
                      },
                      "ticket_availability": {
                        "has_available_tickets": false,
                        "minimum_ticket_price": {
                          "currency": "USD",
                          "value": 432,
                          "major_value": "4.32",
                          "display": "4.32 USD"
                        },
                        "maximum_ticket_price": {
                          "currency": "USD",
                          "value": 432,
                          "major_value": "4.32",
                          "display": "4.32 USD"
                        },
                        "is_sold_out": true,
                        "start_sales_date": {
                          "timezone": "America/Los_Angeles",
                          "utc": "2018-05-12T02:00:00Z",
                          "local": "2018-05-11T19:00:00"
                        },
                        "waitlist_available": false
                      },
                      "listed": false,
                      "shareable": false,
                      "invite_only": false,
                      "show_remaining": true,
                      "password": "12345",
                      "capacity": 100,
                      "capacity_is_custom": true,
                      "tx_time_limit": "12345",
                      "hide_start_date": true,
                      "hide_end_date": true,
                      "locale": "en_US",
                      "is_locked": true,
                      "privacy_setting": "unlocked",
                      "is_externally_ticketed": false,
                      "external_ticketing": {
                        "external_url": "",
                        "ticketing_provider_name": "",
                        "is_free": false,
                        "minimum_ticket_price": {
                          "currency": "USD",
                          "value": 432,
                          "major_value": "4.32",
                          "display": "4.32 USD"
                        },
                        "maximum_ticket_price": {
                          "currency": "USD",
                          "value": 432,
                          "major_value": "4.32",
                          "display": "4.32 USD"
                        },
                        "sales_start": "",
                        "sales_end": ""
                      },
                      "is_series": true,
                      "is_series_parent": true,
                      "series_id": "56321",
                      "is_reserved_seating": true,
                      "show_pick_a_seat": true,
                      "show_seatmap_thumbnail": true,
                      "show_colors_in_seatmap_thumbnail": true,
                      "is_free": true,
                      "source": "api",
                      "version": "null",
                      "resource_uri": "https://www.eventbriteapi.com/v3/events/1234/",
                      "event_sales_status": {
                        "sales_status": "text",
                        "start_sales_date": {
                          "timezone": "America/Los_Angeles",
                          "utc": "2018-05-12T02:00:00Z",
                          "local": "2018-05-11T19:00:00"
                        }
                      },
                      "checkout_settings": {
                        "created": "2018-01-31T13:00:00Z",
                        "changed": "2018-01-31T13:00:00Z",
                        "country_code": "",
                        "currency_code": "",
                        "checkout_method": "paypal",
                        "offline_settings": [
                          {
                            "payment_method": "CASH",
                            "instructions": ""
                          }
                        ],
                        "user_instrument_vault_id": ""
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/series/{event_series_id}/": {
      "get": {
        "tags": [
          "Event Series"
        ],
        "summary": "Retrieve an Event Series",
        "description": "Retrieve the parent Event Series by Event Series ID.",
        "operationId": "RetrieveanEventSeries",
        "parameters": [
          {
            "name": "event_series_id",
            "in": "path",
            "description": "Event Series ID.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "12345"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetrieveanEventSeriesresponse"
                },
                "example": {
                  "id": "12345",
                  "name": {
                    "text": "Some text",
                    "html": "<p>Some text</p>"
                  },
                  "description": {
                    "text": "Some text",
                    "html": "<p>Some text</p>"
                  },
                  "start": {
                    "timezone": "America/Los_Angeles",
                    "utc": "2018-05-12T02:00:00Z",
                    "local": "2018-05-11T19:00:00"
                  },
                  "end": {
                    "timezone": "America/Los_Angeles",
                    "utc": "2018-05-12T02:00:00Z",
                    "local": "2018-05-11T19:00:00"
                  },
                  "url": "https://www.eventbrite.com/e/45263283700",
                  "vanity_url": "https://testevent.eventbrite.com",
                  "created": "2017-02-19T20:28:14Z",
                  "changed": "2017-02-19T20:28:14Z",
                  "published": "2017-02-19T20:28:14Z",
                  "status": "live",
                  "currency": "USD",
                  "online_event": false,
                  "organization_id": "",
                  "organizer_id": "",
                  "organizer": {
                    "name": "",
                    "description": {
                      "text": "Some text",
                      "html": "<p>Some text</p>"
                    },
                    "long_description": {
                      "text": "Some text",
                      "html": "<p>Some text</p>"
                    },
                    "logo_id": null,
                    "logo": {
                      "id": "12345",
                      "url": "https://image.com",
                      "crop_mask": {
                        "top_left": {
                          "y": 15,
                          "x": 15
                        },
                        "width": 15,
                        "height": 15
                      },
                      "original": {
                        "url": "https://image.com",
                        "width": 800,
                        "height": 400
                      },
                      "aspect_ratio": "2",
                      "edge_color": "#6a7c8b",
                      "edge_color_set": true
                    },
                    "resource_uri": "https://www.eventbriteapi.com/v3/organizers/12345/",
                    "id": "12345",
                    "url": "https://www.eventbrite.com/o/12345/",
                    "num_past_events": 5,
                    "num_future_events": 1,
                    "twitter": "@abc",
                    "facebook": "abc"
                  },
                  "logo_id": null,
                  "logo": {
                    "id": "12345",
                    "url": "https://image.com",
                    "crop_mask": {
                      "top_left": {
                        "y": 15,
                        "x": 15
                      },
                      "width": 15,
                      "height": 15
                    },
                    "original": {
                      "url": "https://image.com",
                      "width": 800,
                      "height": 400
                    },
                    "aspect_ratio": "2",
                    "edge_color": "#6a7c8b",
                    "edge_color_set": true
                  },
                  "venue": {
                    "name": "Great Venue",
                    "age_restriction": null,
                    "capacity": 100,
                    "address": {
                      "address_1": null,
                      "address_2": null,
                      "city": null,
                      "region": null,
                      "postal_code": null,
                      "country": null,
                      "latitude": null,
                      "longitude": null
                    },
                    "resource_uri": "https://www.eventbriteapi.com/v3/venues/3003/",
                    "id": "3003",
                    "latitude": "49.28497549999999",
                    "longitude": "123.11082529999999"
                  },
                  "format_id": null,
                  "format": {
                    "id": "2",
                    "name": "Seminar or Talk",
                    "name_localized": "Seminar or Talk",
                    "short_name": "Seminar",
                    "short_name_localized": "Seminar",
                    "resource_uri": "https://www.eventbriteapi.com/v3/formats/2/"
                  },
                  "category": {
                    "id": "103",
                    "resource_uri": "https://www.eventbriteapi.com/v3/categories/103/",
                    "name": "Music",
                    "name_localized": "Music",
                    "short_name": "Music",
                    "short_name_localized": "Music",
                    "subcategories": [
                      {
                        "id": "3003",
                        "resource_uri": "https://www.eventbriteapi.com/v3/subcategories/3003/",
                        "name": "Classical",
                        "parent_category": {}
                      }
                    ]
                  },
                  "subcategory": {
                    "id": "3003",
                    "resource_uri": "https://www.eventbriteapi.com/v3/subcategories/3003/",
                    "name": "Classical",
                    "parent_category": {
                      "id": "103",
                      "resource_uri": "https://www.eventbriteapi.com/v3/categories/103/",
                      "name": "Music",
                      "name_localized": "Music",
                      "short_name": "Music",
                      "short_name_localized": "Music",
                      "subcategories": [
                        {}
                      ]
                    }
                  },
                  "music_properties": {
                    "age_restriction": null,
                    "presented_by": null,
                    "door_time": "2019-05-12T-19:00:00Z"
                  },
                  "bookmark_info": {
                    "bookmarked": false
                  },
                  "ticket_availability": {
                    "has_available_tickets": false,
                    "minimum_ticket_price": {
                      "currency": "USD",
                      "value": 432,
                      "major_value": "4.32",
                      "display": "4.32 USD"
                    },
                    "maximum_ticket_price": {
                      "currency": "USD",
                      "value": 432,
                      "major_value": "4.32",
                      "display": "4.32 USD"
                    },
                    "is_sold_out": true,
                    "start_sales_date": {
                      "timezone": "America/Los_Angeles",
                      "utc": "2018-05-12T02:00:00Z",
                      "local": "2018-05-11T19:00:00"
                    },
                    "waitlist_available": false
                  },
                  "listed": false,
                  "shareable": false,
                  "invite_only": false,
                  "show_remaining": true,
                  "password": "12345",
                  "capacity": 100,
                  "capacity_is_custom": true,
                  "tx_time_limit": "12345",
                  "hide_start_date": true,
                  "hide_end_date": true,
                  "locale": "en_US",
                  "is_locked": true,
                  "privacy_setting": "unlocked",
                  "is_externally_ticketed": false,
                  "external_ticketing": {
                    "external_url": "",
                    "ticketing_provider_name": "",
                    "is_free": false,
                    "minimum_ticket_price": {
                      "currency": "USD",
                      "value": 432,
                      "major_value": "4.32",
                      "display": "4.32 USD"
                    },
                    "maximum_ticket_price": {
                      "currency": "USD",
                      "value": 432,
                      "major_value": "4.32",
                      "display": "4.32 USD"
                    },
                    "sales_start": "",
                    "sales_end": ""
                  },
                  "is_series": true,
                  "is_series_parent": true,
                  "series_id": "56321",
                  "is_reserved_seating": true,
                  "show_pick_a_seat": true,
                  "show_seatmap_thumbnail": true,
                  "show_colors_in_seatmap_thumbnail": true,
                  "is_free": true,
                  "source": "api",
                  "version": "null",
                  "resource_uri": "https://www.eventbriteapi.com/v3/events/1234/",
                  "event_sales_status": {
                    "sales_status": "text",
                    "start_sales_date": {
                      "timezone": "America/Los_Angeles",
                      "utc": "2018-05-12T02:00:00Z",
                      "local": "2018-05-11T19:00:00"
                    }
                  },
                  "checkout_settings": {
                    "created": "2018-01-31T13:00:00Z",
                    "changed": "2018-01-31T13:00:00Z",
                    "country_code": "",
                    "currency_code": "",
                    "checkout_method": "paypal",
                    "offline_settings": [
                      {
                        "payment_method": "CASH",
                        "instructions": ""
                      }
                    ],
                    "user_instrument_vault_id": ""
                  },
                  "series_dates": [
                    {
                      "id": "12345",
                      "start": {
                        "timezone": "America/Los_Angeles",
                        "utc": "2018-05-12T02:00:00Z",
                        "local": "2018-05-11T19:00:00"
                      },
                      "end": {
                        "timezone": "America/Los_Angeles",
                        "utc": "2018-05-12T02:00:00Z",
                        "local": "2018-05-11T19:00:00"
                      },
                      "url": "https://www.eventbrite.com/e/45263283700",
                      "status": "live",
                      "locale": "en_US"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/events/{event_id}/teams/": {
      "get": {
        "tags": [
          "Event Teams"
        ],
        "summary": "List by Event",
        "description": "Returns a list of `teams` for the event. Returns a paginated response.",
        "operationId": "ListbyEvent",
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "description": "The event ID that the teams will be retrieved from.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "12345"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/json"
              ],
              "type": "string",
              "example": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListbyEventresponse"
                },
                "example": {
                  "pagination": {
                    "object_count": 1,
                    "page_number": 1,
                    "page_size": 1,
                    "page_count": 1,
                    "continuation": "dGhpcyBpcyBhIGNvbnRpbnVhdGlvbiB0b2tlbg",
                    "has_more_items": false
                  },
                  "teams": [
                    {
                      "id": "1",
                      "name": "Testing",
                      "creator": {
                        "id": "272057970621",
                        "name": "john@example.com",
                        "emails": [
                          {
                            "verified": false,
                            "primary": true,
                            "email": "john@example.com"
                          }
                        ]
                      },
                      "changed": "2018-10-22T21:43:16Z",
                      "created": "2018-10-22T21:43:16Z",
                      "attendee_count": 2,
                      "token": "",
                      "event_id": "12345",
                      "date_joined": ""
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/events/{event_id}/teams/{team_id}/": {
      "get": {
        "tags": [
          "Event Teams"
        ],
        "summary": "Retrieve Team",
        "description": "Returns information for a single `team`.",
        "operationId": "RetrieveTeam",
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "description": "The event ID that the team will be retrieved from.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "12345"
            }
          },
          {
            "name": "team_id",
            "in": "path",
            "description": "The team ID that will be retrieved.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "1"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/json"
              ],
              "type": "string",
              "example": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventTeamResponse"
                },
                "example": {
                  "id": "1",
                  "name": "Testing",
                  "creator": {
                    "id": "272057970621",
                    "name": "john@example.com",
                    "emails": [
                      {
                        "verified": false,
                        "primary": true,
                        "email": "john@example.com"
                      }
                    ]
                  },
                  "changed": "2018-10-22T21:43:16Z",
                  "created": "2018-10-22T21:43:16Z",
                  "attendee_count": 2,
                  "token": "",
                  "event_id": "12345",
                  "date_joined": ""
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/events/{event_id}/teams/{team_id}/attendees/": {
      "get": {
        "tags": [
          "Event Teams"
        ],
        "summary": "List Attendees by Team",
        "description": "Returns `attendee` for a single `team`. Returns a paginated response.",
        "operationId": "ListAttendeesbyTeam",
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "description": "The event ID that the team will be retrieved from.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "12345"
            }
          },
          {
            "name": "team_id",
            "in": "path",
            "description": "The team ID that will be retrieved.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "1"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/json"
              ],
              "type": "string",
              "example": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListAttendeesbyTeamresponse"
                },
                "example": {
                  "pagination": {
                    "object_count": 1,
                    "page_number": 1,
                    "page_size": 1,
                    "page_count": 1,
                    "continuation": "dGhpcyBpcyBhIGNvbnRpbnVhdGlvbiB0b2tlbg",
                    "has_more_items": false
                  },
                  "attendees": [
                    {
                      "id": "12345",
                      "created": "2018-05-12T02:00:00Z",
                      "changed": "2018-05-12T02:00:00Z",
                      "ticket_class_id": "12345",
                      "ticket_class_name": "General Admission",
                      "profile": {
                        "name": "John Smith",
                        "email": "jhon.smith@example.com",
                        "first_name": "John",
                        "last_name": "Smith",
                        "prefix": "Mr.",
                        "suffix": "Sr",
                        "age": 33,
                        "job_title": "Software Enginner",
                        "company": "Eventbrite",
                        "website": "https://mysite.com",
                        "blog": "https://mysite.com",
                        "gender": "male",
                        "birth_date": "1984-12-06",
                        "cell_phone": "555 555-1234",
                        "work_phone": "555 555-1234",
                        "addresses": {
                          "home": {
                            "address_1": null,
                            "address_2": null,
                            "city": null,
                            "region": null,
                            "postal_code": null,
                            "country": null,
                            "latitude": null,
                            "longitude": null,
                            "localized_address_display": "",
                            "localized_area_display": "",
                            "localized_multi_line_address_display": []
                          },
                          "ship": {
                            "address_1": null,
                            "address_2": null,
                            "city": null,
                            "region": null,
                            "postal_code": null,
                            "country": null,
                            "latitude": null,
                            "longitude": null,
                            "localized_address_display": "",
                            "localized_area_display": "",
                            "localized_multi_line_address_display": []
                          },
                          "work": {
                            "address_1": null,
                            "address_2": null,
                            "city": null,
                            "region": null,
                            "postal_code": null,
                            "country": null,
                            "latitude": null,
                            "longitude": null,
                            "localized_address_display": "",
                            "localized_area_display": "",
                            "localized_multi_line_address_display": []
                          },
                          "bill": {
                            "address_1": null,
                            "address_2": null,
                            "city": null,
                            "region": null,
                            "postal_code": null,
                            "country": null,
                            "latitude": null,
                            "longitude": null,
                            "localized_address_display": "",
                            "localized_area_display": "",
                            "localized_multi_line_address_display": []
                          }
                        }
                      },
                      "questions": [
                        {
                          "id": "20090892",
                          "label": "What's your question?",
                          "type": "text",
                          "required": false
                        }
                      ],
                      "answers": [
                        {
                          "question_id": "20090892",
                          "attendee_id": "1009831492",
                          "question": "What's your question?",
                          "type": "text",
                          "answer": "This is my answer"
                        }
                      ],
                      "barcodes": [
                        {
                          "barcode": "1234093511009831492001",
                          "status": "unused",
                          "created": "2018-08-18T22:24:03Z",
                          "changed": "2018-08-18T22:24:03Z",
                          "checkin_type": 0,
                          "is_printed": false
                        }
                      ],
                      "team": {
                        "id": "12345",
                        "name": "Great Team!",
                        "date_joined": "2018-05-12T02:00:00Z",
                        "event_id": "12345"
                      },
                      "affiliate": "affiliate_code",
                      "checked_in": false,
                      "cancelled": false,
                      "refunded": false,
                      "costs": {
                        "base_price": {
                          "currency": "USD",
                          "value": 432,
                          "major_value": "4.32",
                          "display": "4.32 USD"
                        },
                        "gross": {
                          "currency": "USD",
                          "value": 432,
                          "major_value": "4.32",
                          "display": "4.32 USD"
                        },
                        "eventbrite_fee": {
                          "currency": "USD",
                          "value": 432,
                          "major_value": "4.32",
                          "display": "4.32 USD"
                        },
                        "payment_fee": {
                          "currency": "USD",
                          "value": 432,
                          "major_value": "4.32",
                          "display": "4.32 USD"
                        },
                        "tax": {
                          "currency": "USD",
                          "value": 432,
                          "major_value": "4.32",
                          "display": "4.32 USD"
                        }
                      },
                      "status": "",
                      "event_id": "12345",
                      "event": {
                        "id": "12345",
                        "name": {
                          "text": "Some text",
                          "html": "<p>Some text</p>"
                        },
                        "description": {
                          "text": "Some text",
                          "html": "<p>Some text</p>"
                        },
                        "start": {
                          "timezone": "America/Los_Angeles",
                          "utc": "2018-05-12T02:00:00Z",
                          "local": "2018-05-11T19:00:00"
                        },
                        "end": {
                          "timezone": "America/Los_Angeles",
                          "utc": "2018-05-12T02:00:00Z",
                          "local": "2018-05-11T19:00:00"
                        },
                        "url": "https://www.eventbrite.com/e/45263283700",
                        "vanity_url": "https://testevent.eventbrite.com",
                        "created": "2017-02-19T20:28:14Z",
                        "changed": "2017-02-19T20:28:14Z",
                        "published": "2017-02-19T20:28:14Z",
                        "status": "live",
                        "currency": "USD",
                        "online_event": false,
                        "organization_id": "",
                        "organizer_id": "",
                        "organizer": {
                          "name": "",
                          "description": {
                            "text": "Some text",
                            "html": "<p>Some text</p>"
                          },
                          "long_description": {
                            "text": "Some text",
                            "html": "<p>Some text</p>"
                          },
                          "logo_id": null,
                          "logo": {
                            "id": "12345",
                            "url": "https://image.com",
                            "crop_mask": {
                              "top_left": {
                                "y": 15,
                                "x": 15
                              },
                              "width": 15,
                              "height": 15
                            },
                            "original": {
                              "url": "https://image.com",
                              "width": 800,
                              "height": 400
                            },
                            "aspect_ratio": "2",
                            "edge_color": "#6a7c8b",
                            "edge_color_set": true
                          },
                          "resource_uri": "https://www.eventbriteapi.com/v3/organizers/12345/",
                          "id": "12345",
                          "url": "https://www.eventbrite.com/o/12345/",
                          "num_past_events": 5,
                          "num_future_events": 1,
                          "twitter": "@abc",
                          "facebook": "abc"
                        },
                        "logo_id": null,
                        "logo": {
                          "id": "12345",
                          "url": "https://image.com",
                          "crop_mask": {
                            "top_left": {
                              "y": 15,
                              "x": 15
                            },
                            "width": 15,
                            "height": 15
                          },
                          "original": {
                            "url": "https://image.com",
                            "width": 800,
                            "height": 400
                          },
                          "aspect_ratio": "2",
                          "edge_color": "#6a7c8b",
                          "edge_color_set": true
                        },
                        "venue": {
                          "name": "Great Venue",
                          "age_restriction": null,
                          "capacity": 100,
                          "address": {
                            "address_1": null,
                            "address_2": null,
                            "city": null,
                            "region": null,
                            "postal_code": null,
                            "country": null,
                            "latitude": null,
                            "longitude": null
                          },
                          "resource_uri": "https://www.eventbriteapi.com/v3/venues/3003/",
                          "id": "3003",
                          "latitude": "49.28497549999999",
                          "longitude": "123.11082529999999"
                        },
                        "format_id": null,
                        "format": {
                          "id": "2",
                          "name": "Seminar or Talk",
                          "name_localized": "Seminar or Talk",
                          "short_name": "Seminar",
                          "short_name_localized": "Seminar",
                          "resource_uri": "https://www.eventbriteapi.com/v3/formats/2/"
                        },
                        "category": {
                          "id": "103",
                          "resource_uri": "https://www.eventbriteapi.com/v3/categories/103/",
                          "name": "Music",
                          "name_localized": "Music",
                          "short_name": "Music",
                          "short_name_localized": "Music",
                          "subcategories": [
                            {
                              "id": "3003",
                              "resource_uri": "https://www.eventbriteapi.com/v3/subcategories/3003/",
                              "name": "Classical",
                              "parent_category": {}
                            }
                          ]
                        },
                        "subcategory": {
                          "id": "3003",
                          "resource_uri": "https://www.eventbriteapi.com/v3/subcategories/3003/",
                          "name": "Classical",
                          "parent_category": {
                            "id": "103",
                            "resource_uri": "https://www.eventbriteapi.com/v3/categories/103/",
                            "name": "Music",
                            "name_localized": "Music",
                            "short_name": "Music",
                            "short_name_localized": "Music",
                            "subcategories": [
                              {}
                            ]
                          }
                        },
                        "music_properties": {
                          "age_restriction": null,
                          "presented_by": null,
                          "door_time": "2019-05-12T-19:00:00Z"
                        },
                        "bookmark_info": {
                          "bookmarked": false
                        },
                        "ticket_availability": {
                          "has_available_tickets": false,
                          "minimum_ticket_price": {
                            "currency": "USD",
                            "value": 432,
                            "major_value": "4.32",
                            "display": "4.32 USD"
                          },
                          "maximum_ticket_price": {
                            "currency": "USD",
                            "value": 432,
                            "major_value": "4.32",
                            "display": "4.32 USD"
                          },
                          "is_sold_out": true,
                          "start_sales_date": {
                            "timezone": "America/Los_Angeles",
                            "utc": "2018-05-12T02:00:00Z",
                            "local": "2018-05-11T19:00:00"
                          },
                          "waitlist_available": false
                        },
                        "listed": false,
                        "shareable": false,
                        "invite_only": false,
                        "show_remaining": true,
                        "password": "12345",
                        "capacity": 100,
                        "capacity_is_custom": true,
                        "tx_time_limit": "12345",
                        "hide_start_date": true,
                        "hide_end_date": true,
                        "locale": "en_US",
                        "is_locked": true,
                        "privacy_setting": "unlocked",
                        "is_externally_ticketed": false,
                        "external_ticketing": {
                          "external_url": "",
                          "ticketing_provider_name": "",
                          "is_free": false,
                          "minimum_ticket_price": {
                            "currency": "USD",
                            "value": 432,
                            "major_value": "4.32",
                            "display": "4.32 USD"
                          },
                          "maximum_ticket_price": {
                            "currency": "USD",
                            "value": 432,
                            "major_value": "4.32",
                            "display": "4.32 USD"
                          },
                          "sales_start": "",
                          "sales_end": ""
                        },
                        "is_series": true,
                        "is_series_parent": true,
                        "series_id": "56321",
                        "is_reserved_seating": true,
                        "show_pick_a_seat": true,
                        "show_seatmap_thumbnail": true,
                        "show_colors_in_seatmap_thumbnail": true,
                        "is_free": true,
                        "source": "api",
                        "version": "null",
                        "resource_uri": "https://www.eventbriteapi.com/v3/events/1234/",
                        "event_sales_status": {
                          "sales_status": "text",
                          "start_sales_date": {
                            "timezone": "America/Los_Angeles",
                            "utc": "2018-05-12T02:00:00Z",
                            "local": "2018-05-11T19:00:00"
                          }
                        },
                        "checkout_settings": {
                          "created": "2018-01-31T13:00:00Z",
                          "changed": "2018-01-31T13:00:00Z",
                          "country_code": "",
                          "currency_code": "",
                          "checkout_method": "paypal",
                          "offline_settings": [
                            {
                              "payment_method": "CASH",
                              "instructions": ""
                            }
                          ],
                          "user_instrument_vault_id": ""
                        }
                      },
                      "order_id": "12345",
                      "order": {
                        "id": "442719216",
                        "created": "2018-05-12T02:00:00Z",
                        "changed": "2018-05-12T02:00:00Z",
                        "name": "John Smith",
                        "first_name": "John",
                        "last_name": "Smith",
                        "email": "john.smith@example.com",
                        "costs": {
                          "base_price": {
                            "currency": "USD",
                            "value": 432,
                            "major_value": "4.32",
                            "display": "4.32 USD"
                          },
                          "display_price": {
                            "currency": "USD",
                            "value": 432,
                            "major_value": "4.32",
                            "display": "4.32 USD"
                          },
                          "display_fee": {
                            "currency": "USD",
                            "value": 432,
                            "major_value": "4.32",
                            "display": "4.32 USD"
                          },
                          "gross": {
                            "currency": "USD",
                            "value": 432,
                            "major_value": "4.32",
                            "display": "4.32 USD"
                          },
                          "eventbrite_fee": {
                            "currency": "USD",
                            "value": 432,
                            "major_value": "4.32",
                            "display": "4.32 USD"
                          },
                          "payment_fee": {
                            "currency": "USD",
                            "value": 432,
                            "major_value": "4.32",
                            "display": "4.32 USD"
                          },
                          "tax": {
                            "currency": "USD",
                            "value": 432,
                            "major_value": "4.32",
                            "display": "4.32 USD"
                          },
                          "display_tax": {
                            "currency": "USD",
                            "value": 432,
                            "major_value": "4.32",
                            "display": "4.32 USD"
                          },
                          "price_before_discount": {
                            "currency": "USD",
                            "value": 432,
                            "major_value": "4.32",
                            "display": "4.32 USD"
                          },
                          "discount_amount": {
                            "currency": "USD",
                            "value": 432,
                            "major_value": "4.32",
                            "display": "4.32 USD"
                          },
                          "discount_type": "coded",
                          "fee_components": [
                            {
                              "intermediate": false,
                              "name": "royalty",
                              "internal_name": "service fee",
                              "group_name": "service fee",
                              "value": 200,
                              "discount": {
                                "amount": {
                                  "currency": "USD",
                                  "value": 432,
                                  "major_value": "4.32",
                                  "display": "4.32 USD"
                                },
                                "reason": "TOGGLED_OFF_FEE"
                              },
                              "rule": {
                                "id": "95"
                              },
                              "base": "item.display-includable",
                              "bucket": "fee",
                              "recipient": "event.6018",
                              "payer": "attendee"
                            }
                          ],
                          "tax_components": [
                            {
                              "intermediate": false,
                              "name": "royalty",
                              "internal_name": "service fee",
                              "group_name": "service fee",
                              "value": 200,
                              "discount": {
                                "amount": {
                                  "currency": "USD",
                                  "value": 432,
                                  "major_value": "4.32",
                                  "display": "4.32 USD"
                                },
                                "reason": "TOGGLED_OFF_FEE"
                              },
                              "rule": {
                                "id": "95"
                              },
                              "base": "item.display-includable",
                              "bucket": "fee",
                              "recipient": "event.6018",
                              "payer": "attendee"
                            }
                          ],
                          "shipping_components": [
                            {
                              "intermediate": false,
                              "name": "royalty",
                              "internal_name": "service fee",
                              "group_name": "service fee",
                              "value": 200,
                              "discount": {
                                "amount": {
                                  "currency": "USD",
                                  "value": 432,
                                  "major_value": "4.32",
                                  "display": "4.32 USD"
                                },
                                "reason": "TOGGLED_OFF_FEE"
                              },
                              "rule": {
                                "id": "95"
                              },
                              "base": "item.display-includable",
                              "bucket": "fee",
                              "recipient": "event.6018",
                              "payer": "attendee"
                            }
                          ],
                          "has_gts_tax": false,
                          "tax_name": "VAT"
                        },
                        "event_id": "17937020110",
                        "event": {
                          "id": "12345",
                          "name": {
                            "text": "Some text",
                            "html": "<p>Some text</p>"
                          },
                          "description": {
                            "text": "Some text",
                            "html": "<p>Some text</p>"
                          },
                          "start": {
                            "timezone": "America/Los_Angeles",
                            "utc": "2018-05-12T02:00:00Z",
                            "local": "2018-05-11T19:00:00"
                          },
                          "end": {
                            "timezone": "America/Los_Angeles",
                            "utc": "2018-05-12T02:00:00Z",
                            "local": "2018-05-11T19:00:00"
                          },
                          "url": "https://www.eventbrite.com/e/45263283700",
                          "vanity_url": "https://testevent.eventbrite.com",
                          "created": "2017-02-19T20:28:14Z",
                          "changed": "2017-02-19T20:28:14Z",
                          "published": "2017-02-19T20:28:14Z",
                          "status": "live",
                          "currency": "USD",
                          "online_event": false,
                          "organization_id": "",
                          "organizer_id": "",
                          "organizer": {
                            "name": "",
                            "description": {
                              "text": "Some text",
                              "html": "<p>Some text</p>"
                            },
                            "long_description": {
                              "text": "Some text",
                              "html": "<p>Some text</p>"
                            },
                            "logo_id": null,
                            "logo": {
                              "id": "12345",
                              "url": "https://image.com",
                              "crop_mask": {
                                "top_left": {
                                  "y": 15,
                                  "x": 15
                                },
                                "width": 15,
                                "height": 15
                              },
                              "original": {
                                "url": "https://image.com",
                                "width": 800,
                                "height": 400
                              },
                              "aspect_ratio": "2",
                              "edge_color": "#6a7c8b",
                              "edge_color_set": true
                            },
                            "resource_uri": "https://www.eventbriteapi.com/v3/organizers/12345/",
                            "id": "12345",
                            "url": "https://www.eventbrite.com/o/12345/",
                            "num_past_events": 5,
                            "num_future_events": 1,
                            "twitter": "@abc",
                            "facebook": "abc"
                          },
                          "logo_id": null,
                          "logo": {
                            "id": "12345",
                            "url": "https://image.com",
                            "crop_mask": {
                              "top_left": {
                                "y": 15,
                                "x": 15
                              },
                              "width": 15,
                              "height": 15
                            },
                            "original": {
                              "url": "https://image.com",
                              "width": 800,
                              "height": 400
                            },
                            "aspect_ratio": "2",
                            "edge_color": "#6a7c8b",
                            "edge_color_set": true
                          },
                          "venue": {
                            "name": "Great Venue",
                            "age_restriction": null,
                            "capacity": 100,
                            "address": {
                              "address_1": null,
                              "address_2": null,
                              "city": null,
                              "region": null,
                              "postal_code": null,
                              "country": null,
                              "latitude": null,
                              "longitude": null
                            },
                            "resource_uri": "https://www.eventbriteapi.com/v3/venues/3003/",
                            "id": "3003",
                            "latitude": "49.28497549999999",
                            "longitude": "123.11082529999999"
                          },
                          "format_id": null,
                          "format": {
                            "id": "2",
                            "name": "Seminar or Talk",
                            "name_localized": "Seminar or Talk",
                            "short_name": "Seminar",
                            "short_name_localized": "Seminar",
                            "resource_uri": "https://www.eventbriteapi.com/v3/formats/2/"
                          },
                          "category": {
                            "id": "103",
                            "resource_uri": "https://www.eventbriteapi.com/v3/categories/103/",
                            "name": "Music",
                            "name_localized": "Music",
                            "short_name": "Music",
                            "short_name_localized": "Music",
                            "subcategories": [
                              {
                                "id": "3003",
                                "resource_uri": "https://www.eventbriteapi.com/v3/subcategories/3003/",
                                "name": "Classical",
                                "parent_category": {}
                              }
                            ]
                          },
                          "subcategory": {
                            "id": "3003",
                            "resource_uri": "https://www.eventbriteapi.com/v3/subcategories/3003/",
                            "name": "Classical",
                            "parent_category": {
                              "id": "103",
                              "resource_uri": "https://www.eventbriteapi.com/v3/categories/103/",
                              "name": "Music",
                              "name_localized": "Music",
                              "short_name": "Music",
                              "short_name_localized": "Music",
                              "subcategories": [
                                {}
                              ]
                            }
                          },
                          "music_properties": {
                            "age_restriction": null,
                            "presented_by": null,
                            "door_time": "2019-05-12T-19:00:00Z"
                          },
                          "bookmark_info": {
                            "bookmarked": false
                          },
                          "ticket_availability": {
                            "has_available_tickets": false,
                            "minimum_ticket_price": {
                              "currency": "USD",
                              "value": 432,
                              "major_value": "4.32",
                              "display": "4.32 USD"
                            },
                            "maximum_ticket_price": {
                              "currency": "USD",
                              "value": 432,
                              "major_value": "4.32",
                              "display": "4.32 USD"
                            },
                            "is_sold_out": true,
                            "start_sales_date": {
                              "timezone": "America/Los_Angeles",
                              "utc": "2018-05-12T02:00:00Z",
                              "local": "2018-05-11T19:00:00"
                            },
                            "waitlist_available": false
                          },
                          "listed": false,
                          "shareable": false,
                          "invite_only": false,
                          "show_remaining": true,
                          "password": "12345",
                          "capacity": 100,
                          "capacity_is_custom": true,
                          "tx_time_limit": "12345",
                          "hide_start_date": true,
                          "hide_end_date": true,
                          "locale": "en_US",
                          "is_locked": true,
                          "privacy_setting": "unlocked",
                          "is_externally_ticketed": false,
                          "external_ticketing": {
                            "external_url": "",
                            "ticketing_provider_name": "",
                            "is_free": false,
                            "minimum_ticket_price": {
                              "currency": "USD",
                              "value": 432,
                              "major_value": "4.32",
                              "display": "4.32 USD"
                            },
                            "maximum_ticket_price": {
                              "currency": "USD",
                              "value": 432,
                              "major_value": "4.32",
                              "display": "4.32 USD"
                            },
                            "sales_start": "",
                            "sales_end": ""
                          },
                          "is_series": true,
                          "is_series_parent": true,
                          "series_id": "56321",
                          "is_reserved_seating": true,
                          "show_pick_a_seat": true,
                          "show_seatmap_thumbnail": true,
                          "show_colors_in_seatmap_thumbnail": true,
                          "is_free": true,
                          "source": "api",
                          "version": "null",
                          "resource_uri": "https://www.eventbriteapi.com/v3/events/1234/",
                          "event_sales_status": {
                            "sales_status": "text",
                            "start_sales_date": {
                              "timezone": "America/Los_Angeles",
                              "utc": "2018-05-12T02:00:00Z",
                              "local": "2018-05-11T19:00:00"
                            }
                          },
                          "checkout_settings": {
                            "created": "2018-01-31T13:00:00Z",
                            "changed": "2018-01-31T13:00:00Z",
                            "country_code": "",
                            "currency_code": "",
                            "checkout_method": "paypal",
                            "offline_settings": [
                              {
                                "payment_method": "CASH",
                                "instructions": ""
                              }
                            ],
                            "user_instrument_vault_id": ""
                          }
                        },
                        "attendees": [
                          {}
                        ],
                        "time_remaining": 100,
                        "resource_uri": "https://www.eventbriteapi.com/v3/orders/1234/",
                        "status": "placed",
                        "ticket_buyer_settings": {
                          "confirmation_message": {
                            "text": "Some text",
                            "html": "<p>Some text</p>"
                          },
                          "instructions": {
                            "text": "Some text",
                            "html": "<p>Some text</p>"
                          },
                          "event_id": "3003",
                          "refund_request_enabled": false,
                          "ticket_class_confirmation_settings": [
                            {
                              "ticket_class_id": "1023",
                              "event_id": "3003",
                              "confirmation_message": {
                                "text": "Some text",
                                "html": "<p>Some text</p>"
                              }
                            }
                          ]
                        },
                        "contact_list_preferences": {
                          "has_contact_list": true,
                          "has_opted_in": true,
                          "_type": "order_contact_list_preferences"
                        }
                      },
                      "guestlist_id": null,
                      "invited_by": null,
                      "assigned_unit": {
                        "unit_id": "18-1:2",
                        "description": "Some description",
                        "location_image": {
                          "url": "",
                          "x": 0,
                          "y": 0
                        },
                        "labels": [
                          "100",
                          "A",
                          "23"
                        ],
                        "titles": [
                          "Area",
                          "Row",
                          "Seat"
                        ]
                      },
                      "delivery_method": "electronic",
                      "variant_id": null,
                      "contact_list_preferences": {
                        "has_contact_list": true,
                        "has_opted_in": true,
                        "_type": "attendee_contact_list_preferences"
                      },
                      "resource_uri": ""
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/events/{event_id}/teams/create/": {
      "post": {
        "tags": [
          "Event Teams"
        ],
        "summary": "Create a Team",
        "description": "Create and returns a `team`.",
        "operationId": "CreateaTeam",
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "description": "The event ID that the team will be created from.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "12345"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateaTeamrequest"
              },
              "example": {
                "public_event_id": ""
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateaTeamresponse"
                },
                "example": {
                  "name": "",
                  "id": "",
                  "token": "",
                  "spots_left": 0
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/events/{event_id}/teams/{team_id}/check_password/": {
      "post": {
        "tags": [
          "Event Teams"
        ],
        "summary": "Verify password for a team",
        "description": "Verify that the password of a team is correct, and if so, and returns the token of the team",
        "operationId": "Verifypasswordforateam",
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "description": "The event ID of the team which the password will be checked",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "12345"
            }
          },
          {
            "name": "team_id",
            "in": "path",
            "description": "The team ID which the password will be checked",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "1"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Verifypasswordforateamrequest"
              },
              "example": {
                "password": ""
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Verifypasswordforateamresponse"
                },
                "example": {
                  "token": ""
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/events/{event_id}/teams/search/?term={term}": {
      "get": {
        "tags": [
          "Event Teams"
        ],
        "summary": "Search teams by name Team",
        "description": "Returns the teams of an event searched by name. Returns a paginated response.",
        "operationId": "SearchteamsbynameTeam",
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "description": "The event ID from which we want to search teams",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "12345"
            }
          },
          {
            "name": "term",
            "in": "path",
            "description": "Search term.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "team_search"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/json"
              ],
              "type": "string",
              "example": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchteamsbynameTeamresponse"
                },
                "example": {
                  "pagination": {
                    "object_count": 1,
                    "page_number": 1,
                    "page_size": 1,
                    "page_count": 1,
                    "continuation": "dGhpcyBpcyBhIGNvbnRpbnVhdGlvbiB0b2tlbg",
                    "has_more_items": false
                  },
                  "teams": [
                    {
                      "id": "",
                      "token": "",
                      "name": "",
                      "has_password": false,
                      "is_full": false,
                      "logo": "",
                      "spots_left": 0,
                      "is_team_member": false
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/events/{event_id}/": {
      "get": {
        "tags": [
          "Event"
        ],
        "summary": "Retrieve an Event",
        "description": "Retrieve an Event by Event ID.\n\n> **Note**: If the Event being retrieved was created using the new version of Create, then you may notice that the Eventâ€™s description field is now being used to hold the event summary. To retrieve your eventâ€™s fully-rendered HTML description, you will need to make an additional API call to retrieve the Event's full HTML description.",
        "operationId": "RetrieveanEvent",
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "description": "Event ID.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "12345"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                },
                "example": {
                  "id": "12345",
                  "name": {
                    "text": "Some text",
                    "html": "<p>Some text</p>"
                  },
                  "description": {
                    "text": "Some text",
                    "html": "<p>Some text</p>"
                  },
                  "start": {
                    "timezone": "America/Los_Angeles",
                    "utc": "2018-05-12T02:00:00Z",
                    "local": "2018-05-11T19:00:00"
                  },
                  "end": {
                    "timezone": "America/Los_Angeles",
                    "utc": "2018-05-12T02:00:00Z",
                    "local": "2018-05-11T19:00:00"
                  },
                  "url": "https://www.eventbrite.com/e/45263283700",
                  "vanity_url": "https://testevent.eventbrite.com",
                  "created": "2017-02-19T20:28:14Z",
                  "changed": "2017-02-19T20:28:14Z",
                  "published": "2017-02-19T20:28:14Z",
                  "status": "live",
                  "currency": "USD",
                  "online_event": false,
                  "organization_id": "",
                  "organizer_id": "",
                  "organizer": {
                    "name": "",
                    "description": {
                      "text": "Some text",
                      "html": "<p>Some text</p>"
                    },
                    "long_description": {
                      "text": "Some text",
                      "html": "<p>Some text</p>"
                    },
                    "logo_id": null,
                    "logo": {
                      "id": "12345",
                      "url": "https://image.com",
                      "crop_mask": {
                        "top_left": {
                          "y": 15,
                          "x": 15
                        },
                        "width": 15,
                        "height": 15
                      },
                      "original": {
                        "url": "https://image.com",
                        "width": 800,
                        "height": 400
                      },
                      "aspect_ratio": "2",
                      "edge_color": "#6a7c8b",
                      "edge_color_set": true
                    },
                    "resource_uri": "https://www.eventbriteapi.com/v3/organizers/12345/",
                    "id": "12345",
                    "url": "https://www.eventbrite.com/o/12345/",
                    "num_past_events": 5,
                    "num_future_events": 1,
                    "twitter": "@abc",
                    "facebook": "abc"
                  },
                  "logo_id": null,
                  "logo": {
                    "id": "12345",
                    "url": "https://image.com",
                    "crop_mask": {
                      "top_left": {
                        "y": 15,
                        "x": 15
                      },
                      "width": 15,
                      "height": 15
                    },
                    "original": {
                      "url": "https://image.com",
                      "width": 800,
                      "height": 400
                    },
                    "aspect_ratio": "2",
                    "edge_color": "#6a7c8b",
                    "edge_color_set": true
                  },
                  "venue": {
                    "name": "Great Venue",
                    "age_restriction": null,
                    "capacity": 100,
                    "address": {
                      "address_1": null,
                      "address_2": null,
                      "city": null,
                      "region": null,
                      "postal_code": null,
                      "country": null,
                      "latitude": null,
                      "longitude": null
                    },
                    "resource_uri": "https://www.eventbriteapi.com/v3/venues/3003/",
                    "id": "3003",
                    "latitude": "49.28497549999999",
                    "longitude": "123.11082529999999"
                  },
                  "format_id": null,
                  "format": {
                    "id": "2",
                    "name": "Seminar or Talk",
                    "name_localized": "Seminar or Talk",
                    "short_name": "Seminar",
                    "short_name_localized": "Seminar",
                    "resource_uri": "https://www.eventbriteapi.com/v3/formats/2/"
                  },
                  "category": {
                    "id": "103",
                    "resource_uri": "https://www.eventbriteapi.com/v3/categories/103/",
                    "name": "Music",
                    "name_localized": "Music",
                    "short_name": "Music",
                    "short_name_localized": "Music",
                    "subcategories": [
                      {
                        "id": "3003",
                        "resource_uri": "https://www.eventbriteapi.com/v3/subcategories/3003/",
                        "name": "Classical",
                        "parent_category": {}
                      }
                    ]
                  },
                  "subcategory": {
                    "id": "3003",
                    "resource_uri": "https://www.eventbriteapi.com/v3/subcategories/3003/",
                    "name": "Classical",
                    "parent_category": {
                      "id": "103",
                      "resource_uri": "https://www.eventbriteapi.com/v3/categories/103/",
                      "name": "Music",
                      "name_localized": "Music",
                      "short_name": "Music",
                      "short_name_localized": "Music",
                      "subcategories": [
                        {}
                      ]
                    }
                  },
                  "music_properties": {
                    "age_restriction": null,
                    "presented_by": null,
                    "door_time": "2019-05-12T-19:00:00Z"
                  },
                  "bookmark_info": {
                    "bookmarked": false
                  },
                  "ticket_availability": {
                    "has_available_tickets": false,
                    "minimum_ticket_price": {
                      "currency": "USD",
                      "value": 432,
                      "major_value": "4.32",
                      "display": "4.32 USD"
                    },
                    "maximum_ticket_price": {
                      "currency": "USD",
                      "value": 432,
                      "major_value": "4.32",
                      "display": "4.32 USD"
                    },
                    "is_sold_out": true,
                    "start_sales_date": {
                      "timezone": "America/Los_Angeles",
                      "utc": "2018-05-12T02:00:00Z",
                      "local": "2018-05-11T19:00:00"
                    },
                    "waitlist_available": false
                  },
                  "listed": false,
                  "shareable": false,
                  "invite_only": false,
                  "show_remaining": true,
                  "password": "12345",
                  "capacity": 100,
                  "capacity_is_custom": true,
                  "tx_time_limit": "12345",
                  "hide_start_date": true,
                  "hide_end_date": true,
                  "locale": "en_US",
                  "is_locked": true,
                  "privacy_setting": "unlocked",
                  "is_externally_ticketed": false,
                  "external_ticketing": {
                    "external_url": "",
                    "ticketing_provider_name": "",
                    "is_free": false,
                    "minimum_ticket_price": {
                      "currency": "USD",
                      "value": 432,
                      "major_value": "4.32",
                      "display": "4.32 USD"
                    },
                    "maximum_ticket_price": {
                      "currency": "USD",
                      "value": 432,
                      "major_value": "4.32",
                      "display": "4.32 USD"
                    },
                    "sales_start": "",
                    "sales_end": ""
                  },
                  "is_series": true,
                  "is_series_parent": true,
                  "series_id": "56321",
                  "is_reserved_seating": true,
                  "show_pick_a_seat": true,
                  "show_seatmap_thumbnail": true,
                  "show_colors_in_seatmap_thumbnail": true,
                  "is_free": true,
                  "source": "api",
                  "version": "null",
                  "resource_uri": "https://www.eventbriteapi.com/v3/events/1234/",
                  "event_sales_status": {
                    "sales_status": "text",
                    "start_sales_date": {
                      "timezone": "America/Los_Angeles",
                      "utc": "2018-05-12T02:00:00Z",
                      "local": "2018-05-11T19:00:00"
                    }
                  },
                  "checkout_settings": {
                    "created": "2018-01-31T13:00:00Z",
                    "changed": "2018-01-31T13:00:00Z",
                    "country_code": "",
                    "currency_code": "",
                    "checkout_method": "paypal",
                    "offline_settings": [
                      {
                        "payment_method": "CASH",
                        "instructions": ""
                      }
                    ],
                    "user_instrument_vault_id": ""
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "Event"
        ],
        "summary": "Update an Event",
        "description": "Update Event by Event ID.\n\nNote that if the event is a series parent, updating `name`, `description`, `hide_start_date`, `hide_end_date`, `currency`, `show_remaining`, `password`, `capacity`, or `source` on the series parent will update these fields on all occurrences in the series.",
        "operationId": "UpdateanEvent",
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "description": "Event ID.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "12345"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateanEventrequest"
              },
              "example": {
                "event": {
                  "name": {
                    "html": "<p>Some text</p>"
                  },
                  "description": {
                    "html": "<p>Some text</p>"
                  },
                  "start": {
                    "timezone": "UTC",
                    "utc": "2018-05-12T02:00:00Z"
                  },
                  "end": {
                    "timezone": "UTC",
                    "utc": "2018-05-12T02:00:00Z"
                  },
                  "currency": "USD",
                  "online_event": false,
                  "organizer_id": "",
                  "listed": false,
                  "shareable": false,
                  "invite_only": false,
                  "show_remaining": true,
                  "password": "12345",
                  "capacity": 100,
                  "is_reserved_seating": true,
                  "is_series": true,
                  "show_pick_a_seat": true,
                  "show_seatmap_thumbnail": true,
                  "show_colors_in_seatmap_thumbnail": true
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                },
                "example": {
                  "id": "12345",
                  "name": {
                    "text": "Some text",
                    "html": "<p>Some text</p>"
                  },
                  "description": {
                    "text": "Some text",
                    "html": "<p>Some text</p>"
                  },
                  "start": {
                    "timezone": "America/Los_Angeles",
                    "utc": "2018-05-12T02:00:00Z",
                    "local": "2018-05-11T19:00:00"
                  },
                  "end": {
                    "timezone": "America/Los_Angeles",
                    "utc": "2018-05-12T02:00:00Z",
                    "local": "2018-05-11T19:00:00"
                  },
                  "url": "https://www.eventbrite.com/e/45263283700",
                  "vanity_url": "https://testevent.eventbrite.com",
                  "created": "2017-02-19T20:28:14Z",
                  "changed": "2017-02-19T20:28:14Z",
                  "published": "2017-02-19T20:28:14Z",
                  "status": "live",
                  "currency": "USD",
                  "online_event": false,
                  "organization_id": "",
                  "organizer_id": "",
                  "organizer": {
                    "name": "",
                    "description": {
                      "text": "Some text",
                      "html": "<p>Some text</p>"
                    },
                    "long_description": {
                      "text": "Some text",
                      "html": "<p>Some text</p>"
                    },
                    "logo_id": null,
                    "logo": {
                      "id": "12345",
                      "url": "https://image.com",
                      "crop_mask": {
                        "top_left": {
                          "y": 15,
                          "x": 15
                        },
                        "width": 15,
                        "height": 15
                      },
                      "original": {
                        "url": "https://image.com",
                        "width": 800,
                        "height": 400
                      },
                      "aspect_ratio": "2",
                      "edge_color": "#6a7c8b",
                      "edge_color_set": true
                    },
                    "resource_uri": "https://www.eventbriteapi.com/v3/organizers/12345/",
                    "id": "12345",
                    "url": "https://www.eventbrite.com/o/12345/",
                    "num_past_events": 5,
                    "num_future_events": 1,
                    "twitter": "@abc",
                    "facebook": "abc"
                  },
                  "logo_id": null,
                  "logo": {
                    "id": "12345",
                    "url": "https://image.com",
                    "crop_mask": {
                      "top_left": {
                        "y": 15,
                        "x": 15
                      },
                      "width": 15,
                      "height": 15
                    },
                    "original": {
                      "url": "https://image.com",
                      "width": 800,
                      "height": 400
                    },
                    "aspect_ratio": "2",
                    "edge_color": "#6a7c8b",
                    "edge_color_set": true
                  },
                  "venue": {
                    "name": "Great Venue",
                    "age_restriction": null,
                    "capacity": 100,
                    "address": {
                      "address_1": null,
                      "address_2": null,
                      "city": null,
                      "region": null,
                      "postal_code": null,
                      "country": null,
                      "latitude": null,
                      "longitude": null
                    },
                    "resource_uri": "https://www.eventbriteapi.com/v3/venues/3003/",
                    "id": "3003",
                    "latitude": "49.28497549999999",
                    "longitude": "123.11082529999999"
                  },
                  "format_id": null,
                  "format": {
                    "id": "2",
                    "name": "Seminar or Talk",
                    "name_localized": "Seminar or Talk",
                    "short_name": "Seminar",
                    "short_name_localized": "Seminar",
                    "resource_uri": "https://www.eventbriteapi.com/v3/formats/2/"
                  },
                  "category": {
                    "id": "103",
                    "resource_uri": "https://www.eventbriteapi.com/v3/categories/103/",
                    "name": "Music",
                    "name_localized": "Music",
                    "short_name": "Music",
                    "short_name_localized": "Music",
                    "subcategories": [
                      {
                        "id": "3003",
                        "resource_uri": "https://www.eventbriteapi.com/v3/subcategories/3003/",
                        "name": "Classical",
                        "parent_category": {}
                      }
                    ]
                  },
                  "subcategory": {
                    "id": "3003",
                    "resource_uri": "https://www.eventbriteapi.com/v3/subcategories/3003/",
                    "name": "Classical",
                    "parent_category": {
                      "id": "103",
                      "resource_uri": "https://www.eventbriteapi.com/v3/categories/103/",
                      "name": "Music",
                      "name_localized": "Music",
                      "short_name": "Music",
                      "short_name_localized": "Music",
                      "subcategories": [
                        {}
                      ]
                    }
                  },
                  "music_properties": {
                    "age_restriction": null,
                    "presented_by": null,
                    "door_time": "2019-05-12T-19:00:00Z"
                  },
                  "bookmark_info": {
                    "bookmarked": false
                  },
                  "ticket_availability": {
                    "has_available_tickets": false,
                    "minimum_ticket_price": {
                      "currency": "USD",
                      "value": 432,
                      "major_value": "4.32",
                      "display": "4.32 USD"
                    },
                    "maximum_ticket_price": {
                      "currency": "USD",
                      "value": 432,
                      "major_value": "4.32",
                      "display": "4.32 USD"
                    },
                    "is_sold_out": true,
                    "start_sales_date": {
                      "timezone": "America/Los_Angeles",
                      "utc": "2018-05-12T02:00:00Z",
                      "local": "2018-05-11T19:00:00"
                    },
                    "waitlist_available": false
                  },
                  "listed": false,
                  "shareable": false,
                  "invite_only": false,
                  "show_remaining": true,
                  "password": "12345",
                  "capacity": 100,
                  "capacity_is_custom": true,
                  "tx_time_limit": "12345",
                  "hide_start_date": true,
                  "hide_end_date": true,
                  "locale": "en_US",
                  "is_locked": true,
                  "privacy_setting": "unlocked",
                  "is_externally_ticketed": false,
                  "external_ticketing": {
                    "external_url": "",
                    "ticketing_provider_name": "",
                    "is_free": false,
                    "minimum_ticket_price": {
                      "currency": "USD",
                      "value": 432,
                      "major_value": "4.32",
                      "display": "4.32 USD"
                    },
                    "maximum_ticket_price": {
                      "currency": "USD",
                      "value": 432,
                      "major_value": "4.32",
                      "display": "4.32 USD"
                    },
                    "sales_start": "",
                    "sales_end": ""
                  },
                  "is_series": true,
                  "is_series_parent": true,
                  "series_id": "56321",
                  "is_reserved_seating": true,
                  "show_pick_a_seat": true,
                  "show_seatmap_thumbnail": true,
                  "show_colors_in_seatmap_thumbnail": true,
                  "is_free": true,
                  "source": "api",
                  "version": "null",
                  "resource_uri": "https://www.eventbriteapi.com/v3/events/1234/",
                  "event_sales_status": {
                    "sales_status": "text",
                    "start_sales_date": {
                      "timezone": "America/Los_Angeles",
                      "utc": "2018-05-12T02:00:00Z",
                      "local": "2018-05-11T19:00:00"
                    }
                  },
                  "checkout_settings": {
                    "created": "2018-01-31T13:00:00Z",
                    "changed": "2018-01-31T13:00:00Z",
                    "country_code": "",
                    "currency_code": "",
                    "checkout_method": "paypal",
                    "offline_settings": [
                      {
                        "payment_method": "CASH",
                        "instructions": ""
                      }
                    ],
                    "user_instrument_vault_id": ""
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateanEventresponse"
                },
                "example": {
                  "error_description": "",
                  "error_detail": {},
                  "status_code": 0,
                  "error": "CANNOT_UPDATE_CURRENCY"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "Event"
        ],
        "summary": "Delete an Event",
        "description": "Delete an Event if the delete is permitted. Returns a boolean indicating the success or failure of the delete action.\nTo delete an Event, the Event must not have any pending or completed orders.\n\nIf the event is a series parent, all series occurrences must be in a valid state to be deleted. Deleting the series parent will delete all series occurrences.",
        "operationId": "DeleteanEvent",
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "description": "Event ID.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "12345"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteanEventresponse"
                },
                "example": {
                  "deleted": true
                }
              }
            }
          },
          "400": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteanEventresponse1"
                },
                "example": {
                  "error_description": "",
                  "error_detail": {},
                  "status_code": 0,
                  "error": "ALREADY_DELETED"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/organizations/{organization_id}/events/": {
      "post": {
        "tags": [
          "Event"
        ],
        "summary": "Create an Event",
        "description": "<a name=\"events-create-api\"></a>Create a new Event.\n\nBy default, this API creates an event that occurs once. In order to create a series of events with multiple occurrences (also known as a \"repeating event\" or \"recurring event\"), you must first create one event to serve as the \"series parent\", then add occurrences to the series parent. Creating the series parent is done by calling the Create Event API with the `is_series` attribute set to `True`. Occurrences can then be added to the newly created series parent, using the [Event Schedule API](#schedules-create-api).",
        "operationId": "CreateanEvent",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "ID of the Organization that owns the Event.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "12345"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateanEventrequest"
              },
              "example": {
                "event": {
                  "name": {
                    "html": "<p>Some text</p>"
                  },
                  "description": {
                    "html": "<p>Some text</p>"
                  },
                  "start": {
                    "timezone": "UTC",
                    "utc": "2018-05-12T02:00:00Z"
                  },
                  "end": {
                    "timezone": "UTC",
                    "utc": "2018-05-12T02:00:00Z"
                  },
                  "currency": "USD",
                  "online_event": false,
                  "organizer_id": "",
                  "listed": false,
                  "shareable": false,
                  "invite_only": false,
                  "show_remaining": true,
                  "password": "12345",
                  "capacity": 100,
                  "is_reserved_seating": true,
                  "is_series": true,
                  "show_pick_a_seat": true,
                  "show_seatmap_thumbnail": true,
                  "show_colors_in_seatmap_thumbnail": true,
                  "locale": "de_AT"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                },
                "example": {
                  "id": "12345",
                  "name": {
                    "text": "Some text",
                    "html": "<p>Some text</p>"
                  },
                  "description": {
                    "text": "Some text",
                    "html": "<p>Some text</p>"
                  },
                  "start": {
                    "timezone": "America/Los_Angeles",
                    "utc": "2018-05-12T02:00:00Z",
                    "local": "2018-05-11T19:00:00"
                  },
                  "end": {
                    "timezone": "America/Los_Angeles",
                    "utc": "2018-05-12T02:00:00Z",
                    "local": "2018-05-11T19:00:00"
                  },
                  "url": "https://www.eventbrite.com/e/45263283700",
                  "vanity_url": "https://testevent.eventbrite.com",
                  "created": "2017-02-19T20:28:14Z",
                  "changed": "2017-02-19T20:28:14Z",
                  "published": "2017-02-19T20:28:14Z",
                  "status": "live",
                  "currency": "USD",
                  "online_event": false,
                  "organization_id": "",
                  "organizer_id": "",
                  "organizer": {
                    "name": "",
                    "description": {
                      "text": "Some text",
                      "html": "<p>Some text</p>"
                    },
                    "long_description": {
                      "text": "Some text",
                      "html": "<p>Some text</p>"
                    },
                    "logo_id": null,
                    "logo": {
                      "id": "12345",
                      "url": "https://image.com",
                      "crop_mask": {
                        "top_left": {
                          "y": 15,
                          "x": 15
                        },
                        "width": 15,
                        "height": 15
                      },
                      "original": {
                        "url": "https://image.com",
                        "width": 800,
                        "height": 400
                      },
                      "aspect_ratio": "2",
                      "edge_color": "#6a7c8b",
                      "edge_color_set": true
                    },
                    "resource_uri": "https://www.eventbriteapi.com/v3/organizers/12345/",
                    "id": "12345",
                    "url": "https://www.eventbrite.com/o/12345/",
                    "num_past_events": 5,
                    "num_future_events": 1,
                    "twitter": "@abc",
                    "facebook": "abc"
                  },
                  "logo_id": null,
                  "logo": {
                    "id": "12345",
                    "url": "https://image.com",
                    "crop_mask": {
                      "top_left": {
                        "y": 15,
                        "x": 15
                      },
                      "width": 15,
                      "height": 15
                    },
                    "original": {
                      "url": "https://image.com",
                      "width": 800,
                      "height": 400
                    },
                    "aspect_ratio": "2",
                    "edge_color": "#6a7c8b",
                    "edge_color_set": true
                  },
                  "venue": {
                    "name": "Great Venue",
                    "age_restriction": null,
                    "capacity": 100,
                    "address": {
                      "address_1": null,
                      "address_2": null,
                      "city": null,
                      "region": null,
                      "postal_code": null,
                      "country": null,
                      "latitude": null,
                      "longitude": null
                    },
                    "resource_uri": "https://www.eventbriteapi.com/v3/venues/3003/",
                    "id": "3003",
                    "latitude": "49.28497549999999",
                    "longitude": "123.11082529999999"
                  },
                  "format_id": null,
                  "format": {
                    "id": "2",
                    "name": "Seminar or Talk",
                    "name_localized": "Seminar or Talk",
                    "short_name": "Seminar",
                    "short_name_localized": "Seminar",
                    "resource_uri": "https://www.eventbriteapi.com/v3/formats/2/"
                  },
                  "category": {
                    "id": "103",
                    "resource_uri": "https://www.eventbriteapi.com/v3/categories/103/",
                    "name": "Music",
                    "name_localized": "Music",
                    "short_name": "Music",
                    "short_name_localized": "Music",
                    "subcategories": [
                      {
                        "id": "3003",
                        "resource_uri": "https://www.eventbriteapi.com/v3/subcategories/3003/",
                        "name": "Classical",
                        "parent_category": {}
                      }
                    ]
                  },
                  "subcategory": {
                    "id": "3003",
                    "resource_uri": "https://www.eventbriteapi.com/v3/subcategories/3003/",
                    "name": "Classical",
                    "parent_category": {
                      "id": "103",
                      "resource_uri": "https://www.eventbriteapi.com/v3/categories/103/",
                      "name": "Music",
                      "name_localized": "Music",
                      "short_name": "Music",
                      "short_name_localized": "Music",
                      "subcategories": [
                        {}
                      ]
                    }
                  },
                  "music_properties": {
                    "age_restriction": null,
                    "presented_by": null,
                    "door_time": "2019-05-12T-19:00:00Z"
                  },
                  "bookmark_info": {
                    "bookmarked": false
                  },
                  "ticket_availability": {
                    "has_available_tickets": false,
                    "minimum_ticket_price": {
                      "currency": "USD",
                      "value": 432,
                      "major_value": "4.32",
                      "display": "4.32 USD"
                    },
                    "maximum_ticket_price": {
                      "currency": "USD",
                      "value": 432,
                      "major_value": "4.32",
                      "display": "4.32 USD"
                    },
                    "is_sold_out": true,
                    "start_sales_date": {
                      "timezone": "America/Los_Angeles",
                      "utc": "2018-05-12T02:00:00Z",
                      "local": "2018-05-11T19:00:00"
                    },
                    "waitlist_available": false
                  },
                  "listed": false,
                  "shareable": false,
                  "invite_only": false,
                  "show_remaining": true,
                  "password": "12345",
                  "capacity": 100,
                  "capacity_is_custom": true,
                  "tx_time_limit": "12345",
                  "hide_start_date": true,
                  "hide_end_date": true,
                  "locale": "en_US",
                  "is_locked": true,
                  "privacy_setting": "unlocked",
                  "is_externally_ticketed": false,
                  "external_ticketing": {
                    "external_url": "",
                    "ticketing_provider_name": "",
                    "is_free": false,
                    "minimum_ticket_price": {
                      "currency": "USD",
                      "value": 432,
                      "major_value": "4.32",
                      "display": "4.32 USD"
                    },
                    "maximum_ticket_price": {
                      "currency": "USD",
                      "value": 432,
                      "major_value": "4.32",
                      "display": "4.32 USD"
                    },
                    "sales_start": "",
                    "sales_end": ""
                  },
                  "is_series": true,
                  "is_series_parent": true,
                  "series_id": "56321",
                  "is_reserved_seating": true,
                  "show_pick_a_seat": true,
                  "show_seatmap_thumbnail": true,
                  "show_colors_in_seatmap_thumbnail": true,
                  "is_free": true,
                  "source": "api",
                  "version": "null",
                  "resource_uri": "https://www.eventbriteapi.com/v3/events/1234/",
                  "event_sales_status": {
                    "sales_status": "text",
                    "start_sales_date": {
                      "timezone": "America/Los_Angeles",
                      "utc": "2018-05-12T02:00:00Z",
                      "local": "2018-05-11T19:00:00"
                    }
                  },
                  "checkout_settings": {
                    "created": "2018-01-31T13:00:00Z",
                    "changed": "2018-01-31T13:00:00Z",
                    "country_code": "",
                    "currency_code": "",
                    "checkout_method": "paypal",
                    "offline_settings": [
                      {
                        "payment_method": "CASH",
                        "instructions": ""
                      }
                    ],
                    "user_instrument_vault_id": ""
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateanEventresponse"
                },
                "example": {
                  "error_description": "",
                  "error_detail": {},
                  "status_code": 0,
                  "error": "DATE_CONFLICT"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "get": {
        "tags": [
          "Event"
        ],
        "summary": "List Events by Organization",
        "description": "List Events by Organization ID. Returns a paginated response.",
        "operationId": "ListEventsbyOrganization",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "Organization ID.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "1234"
            }
          },
          {
            "name": "name_filter",
            "in": "query",
            "description": "Filter Organization's Events by specified name.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "currency_filter",
            "in": "query",
            "description": "Filter Organization's Events by specified currency.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "USD"
            }
          },
          {
            "name": "order_by",
            "in": "query",
            "description": "Sort order for the list of Events.",
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/order_by2"
            }
          },
          {
            "name": "series_filter",
            "in": "query",
            "description": "Filter based on whether an event is not a series, a series, child series or parent series. This filter has higher precedence than `show series parent` filter.  Default will use `show series parent` filter behavior.",
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/series_filter"
            }
          },
          {
            "name": "show_series_parent",
            "in": "query",
            "description": "false (Default) = In the list, show the series children and not series parent. true = In the list, show the series parent instead of series children.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean",
              "example": false
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Filter Organization's Events by status. Specify multiple status values as a comma delimited string.",
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/status12"
            }
          },
          {
            "name": "event_group_id",
            "in": "query",
            "description": "Filter Organization's Events by event_group_id.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "collection_id",
            "in": "query",
            "description": "Filter Organization's Events by collection_id.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of records to display on each page of the list.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double",
              "example": 50
            }
          },
          {
            "name": "time_filter",
            "in": "query",
            "description": "Limits the list results to either past or current and future Events.",
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/time_filter"
            }
          },
          {
            "name": "venue_filter",
            "in": "query",
            "description": "Filter Organization's Events by Venue ID.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "organizer_filter",
            "in": "query",
            "description": "Filter Organization's Events by Organizer ID.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "inventory_type_filter",
            "in": "query",
            "description": "Filter Organization's Events by Inventory Type.",
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/inventory_type_filter"
            }
          },
          {
            "name": "event_ids_to_exclude",
            "in": "query",
            "description": "IDs of events to exclude from the Organization's Events list.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "event_ids",
            "in": "query",
            "description": "IDs of events to include from the Organization's Events list.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "collection_ids_to_exclude",
            "in": "query",
            "description": "IDs of collections to exclude from the Organization's Events list.  This will have precedence over `event_group_id` filter and `collection_id` filter.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListEventsbyOrganizationresponse"
                },
                "example": {
                  "pagination": {
                    "object_count": 1,
                    "page_number": 1,
                    "page_size": 1,
                    "page_count": 1,
                    "continuation": "dGhpcyBpcyBhIGNvbnRpbnVhdGlvbiB0b2tlbg",
                    "has_more_items": false
                  },
                  "events": [
                    {
                      "id": "12345",
                      "name": {
                        "text": "Some text",
                        "html": "<p>Some text</p>"
                      },
                      "description": {
                        "text": "Some text",
                        "html": "<p>Some text</p>"
                      },
                      "start": {
                        "timezone": "America/Los_Angeles",
                        "utc": "2018-05-12T02:00:00Z",
                        "local": "2018-05-11T19:00:00"
                      },
                      "end": {
                        "timezone": "America/Los_Angeles",
                        "utc": "2018-05-12T02:00:00Z",
                        "local": "2018-05-11T19:00:00"
                      },
                      "url": "https://www.eventbrite.com/e/45263283700",
                      "vanity_url": "https://testevent.eventbrite.com",
                      "created": "2017-02-19T20:28:14Z",
                      "changed": "2017-02-19T20:28:14Z",
                      "published": "2017-02-19T20:28:14Z",
                      "status": "live",
                      "currency": "USD",
                      "online_event": false,
                      "organization_id": "",
                      "organizer_id": "",
                      "organizer": {
                        "name": "",
                        "description": {
                          "text": "Some text",
                          "html": "<p>Some text</p>"
                        },
                        "long_description": {
                          "text": "Some text",
                          "html": "<p>Some text</p>"
                        },
                        "logo_id": null,
                        "logo": {
                          "id": "12345",
                          "url": "https://image.com",
                          "crop_mask": {
                            "top_left": {
                              "y": 15,
                              "x": 15
                            },
                            "width": 15,
                            "height": 15
                          },
                          "original": {
                            "url": "https://image.com",
                            "width": 800,
                            "height": 400
                          },
                          "aspect_ratio": "2",
                          "edge_color": "#6a7c8b",
                          "edge_color_set": true
                        },
                        "resource_uri": "https://www.eventbriteapi.com/v3/organizers/12345/",
                        "id": "12345",
                        "url": "https://www.eventbrite.com/o/12345/",
                        "num_past_events": 5,
                        "num_future_events": 1,
                        "twitter": "@abc",
                        "facebook": "abc"
                      },
                      "logo_id": null,
                      "logo": {
                        "id": "12345",
                        "url": "https://image.com",
                        "crop_mask": {
                          "top_left": {
                            "y": 15,
                            "x": 15
                          },
                          "width": 15,
                          "height": 15
                        },
                        "original": {
                          "url": "https://image.com",
                          "width": 800,
                          "height": 400
                        },
                        "aspect_ratio": "2",
                        "edge_color": "#6a7c8b",
                        "edge_color_set": true
                      },
                      "venue": {
                        "name": "Great Venue",
                        "age_restriction": null,
                        "capacity": 100,
                        "address": {
                          "address_1": null,
                          "address_2": null,
                          "city": null,
                          "region": null,
                          "postal_code": null,
                          "country": null,
                          "latitude": null,
                          "longitude": null
                        },
                        "resource_uri": "https://www.eventbriteapi.com/v3/venues/3003/",
                        "id": "3003",
                        "latitude": "49.28497549999999",
                        "longitude": "123.11082529999999"
                      },
                      "format_id": null,
                      "format": {
                        "id": "2",
                        "name": "Seminar or Talk",
                        "name_localized": "Seminar or Talk",
                        "short_name": "Seminar",
                        "short_name_localized": "Seminar",
                        "resource_uri": "https://www.eventbriteapi.com/v3/formats/2/"
                      },
                      "category": {
                        "id": "103",
                        "resource_uri": "https://www.eventbriteapi.com/v3/categories/103/",
                        "name": "Music",
                        "name_localized": "Music",
                        "short_name": "Music",
                        "short_name_localized": "Music",
                        "subcategories": [
                          {
                            "id": "3003",
                            "resource_uri": "https://www.eventbriteapi.com/v3/subcategories/3003/",
                            "name": "Classical",
                            "parent_category": {}
                          }
                        ]
                      },
                      "subcategory": {
                        "id": "3003",
                        "resource_uri": "https://www.eventbriteapi.com/v3/subcategories/3003/",
                        "name": "Classical",
                        "parent_category": {
                          "id": "103",
                          "resource_uri": "https://www.eventbriteapi.com/v3/categories/103/",
                          "name": "Music",
                          "name_localized": "Music",
                          "short_name": "Music",
                          "short_name_localized": "Music",
                          "subcategories": [
                            {}
                          ]
                        }
                      },
                      "music_properties": {
                        "age_restriction": null,
                        "presented_by": null,
                        "door_time": "2019-05-12T-19:00:00Z"
                      },
                      "bookmark_info": {
                        "bookmarked": false
                      },
                      "ticket_availability": {
                        "has_available_tickets": false,
                        "minimum_ticket_price": {
                          "currency": "USD",
                          "value": 432,
                          "major_value": "4.32",
                          "display": "4.32 USD"
                        },
                        "maximum_ticket_price": {
                          "currency": "USD",
                          "value": 432,
                          "major_value": "4.32",
                          "display": "4.32 USD"
                        },
                        "is_sold_out": true,
                        "start_sales_date": {
                          "timezone": "America/Los_Angeles",
                          "utc": "2018-05-12T02:00:00Z",
                          "local": "2018-05-11T19:00:00"
                        },
                        "waitlist_available": false
                      },
                      "listed": false,
                      "shareable": false,
                      "invite_only": false,
                      "show_remaining": true,
                      "password": "12345",
                      "capacity": 100,
                      "capacity_is_custom": true,
                      "tx_time_limit": "12345",
                      "hide_start_date": true,
                      "hide_end_date": true,
                      "locale": "en_US",
                      "is_locked": true,
                      "privacy_setting": "unlocked",
                      "is_externally_ticketed": false,
                      "external_ticketing": {
                        "external_url": "",
                        "ticketing_provider_name": "",
                        "is_free": false,
                        "minimum_ticket_price": {
                          "currency": "USD",
                          "value": 432,
                          "major_value": "4.32",
                          "display": "4.32 USD"
                        },
                        "maximum_ticket_price": {
                          "currency": "USD",
                          "value": 432,
                          "major_value": "4.32",
                          "display": "4.32 USD"
                        },
                        "sales_start": "",
                        "sales_end": ""
                      },
                      "is_series": true,
                      "is_series_parent": true,
                      "series_id": "56321",
                      "is_reserved_seating": true,
                      "show_pick_a_seat": true,
                      "show_seatmap_thumbnail": true,
                      "show_colors_in_seatmap_thumbnail": true,
                      "is_free": true,
                      "source": "api",
                      "version": "null",
                      "resource_uri": "https://www.eventbriteapi.com/v3/events/1234/",
                      "event_sales_status": {
                        "sales_status": "text",
                        "start_sales_date": {
                          "timezone": "America/Los_Angeles",
                          "utc": "2018-05-12T02:00:00Z",
                          "local": "2018-05-11T19:00:00"
                        }
                      },
                      "checkout_settings": {
                        "created": "2018-01-31T13:00:00Z",
                        "changed": "2018-01-31T13:00:00Z",
                        "country_code": "",
                        "currency_code": "",
                        "checkout_method": "paypal",
                        "offline_settings": [
                          {
                            "payment_method": "CASH",
                            "instructions": ""
                          }
                        ],
                        "user_instrument_vault_id": ""
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListEventsbyOrganizationresponse1"
                },
                "example": {
                  "error_description": "",
                  "error_detail": {},
                  "status_code": 0,
                  "error": "ARGUMENTS_ERROR"
                }
              }
            }
          },
          "404": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListEventsbyOrganizationresponse3"
                },
                "example": {
                  "error_description": "",
                  "error_detail": {},
                  "status_code": 0,
                  "error": "NOT_FOUND"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/venues/{venue_id}/events/": {
      "get": {
        "tags": [
          "Event"
        ],
        "summary": "List Events by Venue",
        "description": "List Events by Venue ID. Returns a paginated response.",
        "operationId": "ListEventsbyVenue",
        "parameters": [
          {
            "name": "venue_id",
            "in": "path",
            "description": "Venue ID.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "1234"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Filter Events at the Venue by status. Specify multiple status values as a comma delimited string.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/status12"
              }
            }
          },
          {
            "name": "order_by",
            "in": "query",
            "description": "Sort order of list of Events at the Venue.",
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/order_by1"
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "description": "Filter Events at the Venue by a specified date range.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "only_public",
            "in": "query",
            "description": "True = Filter public Events at the Venue.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean",
              "example": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListEventsbyVenueresponse"
                },
                "example": {
                  "pagination": {
                    "object_count": 1,
                    "page_number": 1,
                    "page_size": 1,
                    "page_count": 1,
                    "continuation": "dGhpcyBpcyBhIGNvbnRpbnVhdGlvbiB0b2tlbg",
                    "has_more_items": false
                  },
                  "events": [
                    {
                      "id": "12345",
                      "name": {
                        "text": "Some text",
                        "html": "<p>Some text</p>"
                      },
                      "description": {
                        "text": "Some text",
                        "html": "<p>Some text</p>"
                      },
                      "start": {
                        "timezone": "America/Los_Angeles",
                        "utc": "2018-05-12T02:00:00Z",
                        "local": "2018-05-11T19:00:00"
                      },
                      "end": {
                        "timezone": "America/Los_Angeles",
                        "utc": "2018-05-12T02:00:00Z",
                        "local": "2018-05-11T19:00:00"
                      },
                      "url": "https://www.eventbrite.com/e/45263283700",
                      "vanity_url": "https://testevent.eventbrite.com",
                      "created": "2017-02-19T20:28:14Z",
                      "changed": "2017-02-19T20:28:14Z",
                      "published": "2017-02-19T20:28:14Z",
                      "status": "live",
                      "currency": "USD",
                      "online_event": false,
                      "organization_id": "",
                      "organizer_id": "",
                      "organizer": {
                        "name": "",
                        "description": {
                          "text": "Some text",
                          "html": "<p>Some text</p>"
                        },
                        "long_description": {
                          "text": "Some text",
                          "html": "<p>Some text</p>"
                        },
                        "logo_id": null,
                        "logo": {
                          "id": "12345",
                          "url": "https://image.com",
                          "crop_mask": {
                            "top_left": {
                              "y": 15,
                              "x": 15
                            },
                            "width": 15,
                            "height": 15
                          },
                          "original": {
                            "url": "https://image.com",
                            "width": 800,
                            "height": 400
                          },
                          "aspect_ratio": "2",
                          "edge_color": "#6a7c8b",
                          "edge_color_set": true
                        },
                        "resource_uri": "https://www.eventbriteapi.com/v3/organizers/12345/",
                        "id": "12345",
                        "url": "https://www.eventbrite.com/o/12345/",
                        "num_past_events": 5,
                        "num_future_events": 1,
                        "twitter": "@abc",
                        "facebook": "abc"
                      },
                      "logo_id": null,
                      "logo": {
                        "id": "12345",
                        "url": "https://image.com",
                        "crop_mask": {
                          "top_left": {
                            "y": 15,
                            "x": 15
                          },
                          "width": 15,
                          "height": 15
                        },
                        "original": {
                          "url": "https://image.com",
                          "width": 800,
                          "height": 400
                        },
                        "aspect_ratio": "2",
                        "edge_color": "#6a7c8b",
                        "edge_color_set": true
                      },
                      "venue": {
                        "name": "Great Venue",
                        "age_restriction": null,
                        "capacity": 100,
                        "address": {
                          "address_1": null,
                          "address_2": null,
                          "city": null,
                          "region": null,
                          "postal_code": null,
                          "country": null,
                          "latitude": null,
                          "longitude": null
                        },
                        "resource_uri": "https://www.eventbriteapi.com/v3/venues/3003/",
                        "id": "3003",
                        "latitude": "49.28497549999999",
                        "longitude": "123.11082529999999"
                      },
                      "format_id": null,
                      "format": {
                        "id": "2",
                        "name": "Seminar or Talk",
                        "name_localized": "Seminar or Talk",
                        "short_name": "Seminar",
                        "short_name_localized": "Seminar",
                        "resource_uri": "https://www.eventbriteapi.com/v3/formats/2/"
                      },
                      "category": {
                        "id": "103",
                        "resource_uri": "https://www.eventbriteapi.com/v3/categories/103/",
                        "name": "Music",
                        "name_localized": "Music",
                        "short_name": "Music",
                        "short_name_localized": "Music",
                        "subcategories": [
                          {
                            "id": "3003",
                            "resource_uri": "https://www.eventbriteapi.com/v3/subcategories/3003/",
                            "name": "Classical",
                            "parent_category": {}
                          }
                        ]
                      },
                      "subcategory": {
                        "id": "3003",
                        "resource_uri": "https://www.eventbriteapi.com/v3/subcategories/3003/",
                        "name": "Classical",
                        "parent_category": {
                          "id": "103",
                          "resource_uri": "https://www.eventbriteapi.com/v3/categories/103/",
                          "name": "Music",
                          "name_localized": "Music",
                          "short_name": "Music",
                          "short_name_localized": "Music",
                          "subcategories": [
                            {}
                          ]
                        }
                      },
                      "music_properties": {
                        "age_restriction": null,
                        "presented_by": null,
                        "door_time": "2019-05-12T-19:00:00Z"
                      },
                      "bookmark_info": {
                        "bookmarked": false
                      },
                      "ticket_availability": {
                        "has_available_tickets": false,
                        "minimum_ticket_price": {
                          "currency": "USD",
                          "value": 432,
                          "major_value": "4.32",
                          "display": "4.32 USD"
                        },
                        "maximum_ticket_price": {
                          "currency": "USD",
                          "value": 432,
                          "major_value": "4.32",
                          "display": "4.32 USD"
                        },
                        "is_sold_out": true,
                        "start_sales_date": {
                          "timezone": "America/Los_Angeles",
                          "utc": "2018-05-12T02:00:00Z",
                          "local": "2018-05-11T19:00:00"
                        },
                        "waitlist_available": false
                      },
                      "listed": false,
                      "shareable": false,
                      "invite_only": false,
                      "show_remaining": true,
                      "password": "12345",
                      "capacity": 100,
                      "capacity_is_custom": true,
                      "tx_time_limit": "12345",
                      "hide_start_date": true,
                      "hide_end_date": true,
                      "locale": "en_US",
                      "is_locked": true,
                      "privacy_setting": "unlocked",
                      "is_externally_ticketed": false,
                      "external_ticketing": {
                        "external_url": "",
                        "ticketing_provider_name": "",
                        "is_free": false,
                        "minimum_ticket_price": {
                          "currency": "USD",
                          "value": 432,
                          "major_value": "4.32",
                          "display": "4.32 USD"
                        },
                        "maximum_ticket_price": {
                          "currency": "USD",
                          "value": 432,
                          "major_value": "4.32",
                          "display": "4.32 USD"
                        },
                        "sales_start": "",
                        "sales_end": ""
                      },
                      "is_series": true,
                      "is_series_parent": true,
                      "series_id": "56321",
                      "is_reserved_seating": true,
                      "show_pick_a_seat": true,
                      "show_seatmap_thumbnail": true,
                      "show_colors_in_seatmap_thumbnail": true,
                      "is_free": true,
                      "source": "api",
                      "version": "null",
                      "resource_uri": "https://www.eventbriteapi.com/v3/events/1234/",
                      "event_sales_status": {
                        "sales_status": "text",
                        "start_sales_date": {
                          "timezone": "America/Los_Angeles",
                          "utc": "2018-05-12T02:00:00Z",
                          "local": "2018-05-11T19:00:00"
                        }
                      },
                      "checkout_settings": {
                        "created": "2018-01-31T13:00:00Z",
                        "changed": "2018-01-31T13:00:00Z",
                        "country_code": "",
                        "currency_code": "",
                        "checkout_method": "paypal",
                        "offline_settings": [
                          {
                            "payment_method": "CASH",
                            "instructions": ""
                          }
                        ],
                        "user_instrument_vault_id": ""
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/series/{event_series_id}/events/": {
      "get": {
        "tags": [
          "Event"
        ],
        "summary": "List Events by Series",
        "description": "List Events by Event Series ID. Returns a paginated response.",
        "operationId": "ListEventsbySeries",
        "parameters": [
          {
            "name": "event_series_id",
            "in": "path",
            "description": "Event Series ID.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "12345"
            }
          },
          {
            "name": "time_filter",
            "in": "query",
            "description": "Limits the list results to either past or current and future Events.",
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/time_filter"
            }
          },
          {
            "name": "order_by",
            "in": "query",
            "description": "Sort order for the list of Events.",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/order_by1"
            }
          },
          {
            "name": "start_date.range_start",
            "in": "query",
            "description": "Return only Events in the series past this date",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "start_date.range_end",
            "in": "query",
            "description": "Return only Events in the series before this date",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListEventsbySeriesresponse"
                },
                "example": {
                  "pagination": {
                    "object_count": 1,
                    "page_number": 1,
                    "page_size": 1,
                    "page_count": 1,
                    "continuation": "dGhpcyBpcyBhIGNvbnRpbnVhdGlvbiB0b2tlbg",
                    "has_more_items": false
                  },
                  "events": [
                    {
                      "id": "12345",
                      "name": {
                        "text": "Some text",
                        "html": "<p>Some text</p>"
                      },
                      "description": {
                        "text": "Some text",
                        "html": "<p>Some text</p>"
                      },
                      "start": {
                        "timezone": "America/Los_Angeles",
                        "utc": "2018-05-12T02:00:00Z",
                        "local": "2018-05-11T19:00:00"
                      },
                      "end": {
                        "timezone": "America/Los_Angeles",
                        "utc": "2018-05-12T02:00:00Z",
                        "local": "2018-05-11T19:00:00"
                      },
                      "url": "https://www.eventbrite.com/e/45263283700",
                      "vanity_url": "https://testevent.eventbrite.com",
                      "created": "2017-02-19T20:28:14Z",
                      "changed": "2017-02-19T20:28:14Z",
                      "published": "2017-02-19T20:28:14Z",
                      "status": "live",
                      "currency": "USD",
                      "online_event": false,
                      "organization_id": "",
                      "organizer_id": "",
                      "organizer": {
                        "name": "",
                        "description": {
                          "text": "Some text",
                          "html": "<p>Some text</p>"
                        },
                        "long_description": {
                          "text": "Some text",
                          "html": "<p>Some text</p>"
                        },
                        "logo_id": null,
                        "logo": {
                          "id": "12345",
                          "url": "https://image.com",
                          "crop_mask": {
                            "top_left": {
                              "y": 15,
                              "x": 15
                            },
                            "width": 15,
                            "height": 15
                          },
                          "original": {
                            "url": "https://image.com",
                            "width": 800,
                            "height": 400
                          },
                          "aspect_ratio": "2",
                          "edge_color": "#6a7c8b",
                          "edge_color_set": true
                        },
                        "resource_uri": "https://www.eventbriteapi.com/v3/organizers/12345/",
                        "id": "12345",
                        "url": "https://www.eventbrite.com/o/12345/",
                        "num_past_events": 5,
                        "num_future_events": 1,
                        "twitter": "@abc",
                        "facebook": "abc"
                      },
                      "logo_id": null,
                      "logo": {
                        "id": "12345",
                        "url": "https://image.com",
                        "crop_mask": {
                          "top_left": {
                            "y": 15,
                            "x": 15
                          },
                          "width": 15,
                          "height": 15
                        },
                        "original": {
                          "url": "https://image.com",
                          "width": 800,
                          "height": 400
                        },
                        "aspect_ratio": "2",
                        "edge_color": "#6a7c8b",
                        "edge_color_set": true
                      },
                      "venue": {
                        "name": "Great Venue",
                        "age_restriction": null,
                        "capacity": 100,
                        "address": {
                          "address_1": null,
                          "address_2": null,
                          "city": null,
                          "region": null,
                          "postal_code": null,
                          "country": null,
                          "latitude": null,
                          "longitude": null
                        },
                        "resource_uri": "https://www.eventbriteapi.com/v3/venues/3003/",
                        "id": "3003",
                        "latitude": "49.28497549999999",
                        "longitude": "123.11082529999999"
                      },
                      "format_id": null,
                      "format": {
                        "id": "2",
                        "name": "Seminar or Talk",
                        "name_localized": "Seminar or Talk",
                        "short_name": "Seminar",
                        "short_name_localized": "Seminar",
                        "resource_uri": "https://www.eventbriteapi.com/v3/formats/2/"
                      },
                      "category": {
                        "id": "103",
                        "resource_uri": "https://www.eventbriteapi.com/v3/categories/103/",
                        "name": "Music",
                        "name_localized": "Music",
                        "short_name": "Music",
                        "short_name_localized": "Music",
                        "subcategories": [
                          {
                            "id": "3003",
                            "resource_uri": "https://www.eventbriteapi.com/v3/subcategories/3003/",
                            "name": "Classical",
                            "parent_category": {}
                          }
                        ]
                      },
                      "subcategory": {
                        "id": "3003",
                        "resource_uri": "https://www.eventbriteapi.com/v3/subcategories/3003/",
                        "name": "Classical",
                        "parent_category": {
                          "id": "103",
                          "resource_uri": "https://www.eventbriteapi.com/v3/categories/103/",
                          "name": "Music",
                          "name_localized": "Music",
                          "short_name": "Music",
                          "short_name_localized": "Music",
                          "subcategories": [
                            {}
                          ]
                        }
                      },
                      "music_properties": {
                        "age_restriction": null,
                        "presented_by": null,
                        "door_time": "2019-05-12T-19:00:00Z"
                      },
                      "bookmark_info": {
                        "bookmarked": false
                      },
                      "ticket_availability": {
                        "has_available_tickets": false,
                        "minimum_ticket_price": {
                          "currency": "USD",
                          "value": 432,
                          "major_value": "4.32",
                          "display": "4.32 USD"
                        },
                        "maximum_ticket_price": {
                          "currency": "USD",
                          "value": 432,
                          "major_value": "4.32",
                          "display": "4.32 USD"
                        },
                        "is_sold_out": true,
                        "start_sales_date": {
                          "timezone": "America/Los_Angeles",
                          "utc": "2018-05-12T02:00:00Z",
                          "local": "2018-05-11T19:00:00"
                        },
                        "waitlist_available": false
                      },
                      "listed": false,
                      "shareable": false,
                      "invite_only": false,
                      "show_remaining": true,
                      "password": "12345",
                      "capacity": 100,
                      "capacity_is_custom": true,
                      "tx_time_limit": "12345",
                      "hide_start_date": true,
                      "hide_end_date": true,
                      "locale": "en_US",
                      "is_locked": true,
                      "privacy_setting": "unlocked",
                      "is_externally_ticketed": false,
                      "external_ticketing": {
                        "external_url": "",
                        "ticketing_provider_name": "",
                        "is_free": false,
                        "minimum_ticket_price": {
                          "currency": "USD",
                          "value": 432,
                          "major_value": "4.32",
                          "display": "4.32 USD"
                        },
                        "maximum_ticket_price": {
                          "currency": "USD",
                          "value": 432,
                          "major_value": "4.32",
                          "display": "4.32 USD"
                        },
                        "sales_start": "",
                        "sales_end": ""
                      },
                      "is_series": true,
                      "is_series_parent": true,
                      "series_id": "56321",
                      "is_reserved_seating": true,
                      "show_pick_a_seat": true,
                      "show_seatmap_thumbnail": true,
                      "show_colors_in_seatmap_thumbnail": true,
                      "is_free": true,
                      "source": "api",
                      "version": "null",
                      "resource_uri": "https://www.eventbriteapi.com/v3/events/1234/",
                      "event_sales_status": {
                        "sales_status": "text",
                        "start_sales_date": {
                          "timezone": "America/Los_Angeles",
                          "utc": "2018-05-12T02:00:00Z",
                          "local": "2018-05-11T19:00:00"
                        }
                      },
                      "checkout_settings": {
                        "created": "2018-01-31T13:00:00Z",
                        "changed": "2018-01-31T13:00:00Z",
                        "country_code": "",
                        "currency_code": "",
                        "checkout_method": "paypal",
                        "offline_settings": [
                          {
                            "payment_method": "CASH",
                            "instructions": ""
                          }
                        ],
                        "user_instrument_vault_id": ""
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/events/{event_id}/publish/": {
      "post": {
        "tags": [
          "Event"
        ],
        "summary": "Publish an Event",
        "description": "Publish an Event.\n\nIn order for publish to be permitted, the event must have all necessary information, including a name and description, an organizer, at least one ticket, and valid payment options. This API endpoint will return argument errors for event fields that fail to validate the publish requirements. Returns a boolean indicating success or failure of the publish.\n\nIf the event is a series parent, all occurrences in the series must be in a valid state to be published. Publishing the series parent will publish all series occurrences.\n\nDeleted Events can not be published.",
        "operationId": "PublishanEvent",
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "description": "Event ID.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "12345"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/json"
              ],
              "type": "string",
              "example": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublishanEventresponse"
                },
                "example": {
                  "published": true
                }
              }
            }
          },
          "400": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublishanEventresponse1"
                },
                "example": {
                  "error_description": "",
                  "error_detail": {},
                  "status_code": 0,
                  "error": "ALREADY_PUBLISHED_OR_DELETED"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/events/{event_id}/unpublish/": {
      "post": {
        "tags": [
          "Event"
        ],
        "summary": "Unpublish an Event",
        "description": "Unpublish an Event. Returns a boolean indicating the success or failure of the unpublish action.\nTo unpublish a free Event, including a past free Event, the Event must not have any pending or completed orders.\nA completed and paid out paid Event can be unpublished. A paid Event that is not completed and paid out can only be unpublished if the Event does not have any pending or completed orders.\n\nIf the event is a series parent, all occurrences in the series must be in a valid state to be unpublished. Unpublishing a series parent will unpublish all series occurrences. A series occurrence cannot be unpublished individually.",
        "operationId": "UnpublishanEvent",
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "description": "Event ID.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "12345"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/json"
              ],
              "type": "string",
              "example": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnpublishanEventresponse"
                },
                "example": {
                  "unpublished": true
                }
              }
            }
          },
          "400": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnpublishanEventresponse1"
                },
                "example": {
                  "error_description": "",
                  "error_detail": {},
                  "status_code": 0,
                  "error": "NOT_PUBLISHED"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/events/{event_id}/copy/": {
      "post": {
        "tags": [
          "Event"
        ],
        "summary": "Copy an Event",
        "description": "Copy the Event, creating a duplicate version of the Event with a new Event ID. Use to create a new Event based on an existing Event. Returns the Event object for the newly created Event.\n\nThe Event payment options, payout method, refund policy, and tax settings will copy to the new Event.",
        "operationId": "CopyanEvent",
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "description": "Event ID.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "12345"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventCopy"
              },
              "example": {
                "start_date": "2019",
                "end_date": "2019"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                },
                "example": {
                  "id": "12345",
                  "name": {
                    "text": "Some text",
                    "html": "<p>Some text</p>"
                  },
                  "description": {
                    "text": "Some text",
                    "html": "<p>Some text</p>"
                  },
                  "start": {
                    "timezone": "America/Los_Angeles",
                    "utc": "2018-05-12T02:00:00Z",
                    "local": "2018-05-11T19:00:00"
                  },
                  "end": {
                    "timezone": "America/Los_Angeles",
                    "utc": "2018-05-12T02:00:00Z",
                    "local": "2018-05-11T19:00:00"
                  },
                  "url": "https://www.eventbrite.com/e/45263283700",
                  "vanity_url": "https://testevent.eventbrite.com",
                  "created": "2017-02-19T20:28:14Z",
                  "changed": "2017-02-19T20:28:14Z",
                  "published": "2017-02-19T20:28:14Z",
                  "status": "live",
                  "currency": "USD",
                  "online_event": false,
                  "organization_id": "",
                  "organizer_id": "",
                  "organizer": {
                    "name": "",
                    "description": {
                      "text": "Some text",
                      "html": "<p>Some text</p>"
                    },
                    "long_description": {
                      "text": "Some text",
                      "html": "<p>Some text</p>"
                    },
                    "logo_id": null,
                    "logo": {
                      "id": "12345",
                      "url": "https://image.com",
                      "crop_mask": {
                        "top_left": {
                          "y": 15,
                          "x": 15
                        },
                        "width": 15,
                        "height": 15
                      },
                      "original": {
                        "url": "https://image.com",
                        "width": 800,
                        "height": 400
                      },
                      "aspect_ratio": "2",
                      "edge_color": "#6a7c8b",
                      "edge_color_set": true
                    },
                    "resource_uri": "https://www.eventbriteapi.com/v3/organizers/12345/",
                    "id": "12345",
                    "url": "https://www.eventbrite.com/o/12345/",
                    "num_past_events": 5,
                    "num_future_events": 1,
                    "twitter": "@abc",
                    "facebook": "abc"
                  },
                  "logo_id": null,
                  "logo": {
                    "id": "12345",
                    "url": "https://image.com",
                    "crop_mask": {
                      "top_left": {
                        "y": 15,
                        "x": 15
                      },
                      "width": 15,
                      "height": 15
                    },
                    "original": {
                      "url": "https://image.com",
                      "width": 800,
                      "height": 400
                    },
                    "aspect_ratio": "2",
                    "edge_color": "#6a7c8b",
                    "edge_color_set": true
                  },
                  "venue": {
                    "name": "Great Venue",
                    "age_restriction": null,
                    "capacity": 100,
                    "address": {
                      "address_1": null,
                      "address_2": null,
                      "city": null,
                      "region": null,
                      "postal_code": null,
                      "country": null,
                      "latitude": null,
                      "longitude": null
                    },
                    "resource_uri": "https://www.eventbriteapi.com/v3/venues/3003/",
                    "id": "3003",
                    "latitude": "49.28497549999999",
                    "longitude": "123.11082529999999"
                  },
                  "format_id": null,
                  "format": {
                    "id": "2",
                    "name": "Seminar or Talk",
                    "name_localized": "Seminar or Talk",
                    "short_name": "Seminar",
                    "short_name_localized": "Seminar",
                    "resource_uri": "https://www.eventbriteapi.com/v3/formats/2/"
                  },
                  "category": {
                    "id": "103",
                    "resource_uri": "https://www.eventbriteapi.com/v3/categories/103/",
                    "name": "Music",
                    "name_localized": "Music",
                    "short_name": "Music",
                    "short_name_localized": "Music",
                    "subcategories": [
                      {
                        "id": "3003",
                        "resource_uri": "https://www.eventbriteapi.com/v3/subcategories/3003/",
                        "name": "Classical",
                        "parent_category": {}
                      }
                    ]
                  },
                  "subcategory": {
                    "id": "3003",
                    "resource_uri": "https://www.eventbriteapi.com/v3/subcategories/3003/",
                    "name": "Classical",
                    "parent_category": {
                      "id": "103",
                      "resource_uri": "https://www.eventbriteapi.com/v3/categories/103/",
                      "name": "Music",
                      "name_localized": "Music",
                      "short_name": "Music",
                      "short_name_localized": "Music",
                      "subcategories": [
                        {}
                      ]
                    }
                  },
                  "music_properties": {
                    "age_restriction": null,
                    "presented_by": null,
                    "door_time": "2019-05-12T-19:00:00Z"
                  },
                  "bookmark_info": {
                    "bookmarked": false
                  },
                  "ticket_availability": {
                    "has_available_tickets": false,
                    "minimum_ticket_price": {
                      "currency": "USD",
                      "value": 432,
                      "major_value": "4.32",
                      "display": "4.32 USD"
                    },
                    "maximum_ticket_price": {
                      "currency": "USD",
                      "value": 432,
                      "major_value": "4.32",
                      "display": "4.32 USD"
                    },
                    "is_sold_out": true,
                    "start_sales_date": {
                      "timezone": "America/Los_Angeles",
                      "utc": "2018-05-12T02:00:00Z",
                      "local": "2018-05-11T19:00:00"
                    },
                    "waitlist_available": false
                  },
                  "listed": false,
                  "shareable": false,
                  "invite_only": false,
                  "show_remaining": true,
                  "password": "12345",
                  "capacity": 100,
                  "capacity_is_custom": true,
                  "tx_time_limit": "12345",
                  "hide_start_date": true,
                  "hide_end_date": true,
                  "locale": "en_US",
                  "is_locked": true,
                  "privacy_setting": "unlocked",
                  "is_externally_ticketed": false,
                  "external_ticketing": {
                    "external_url": "",
                    "ticketing_provider_name": "",
                    "is_free": false,
                    "minimum_ticket_price": {
                      "currency": "USD",
                      "value": 432,
                      "major_value": "4.32",
                      "display": "4.32 USD"
                    },
                    "maximum_ticket_price": {
                      "currency": "USD",
                      "value": 432,
                      "major_value": "4.32",
                      "display": "4.32 USD"
                    },
                    "sales_start": "",
                    "sales_end": ""
                  },
                  "is_series": true,
                  "is_series_parent": true,
                  "series_id": "56321",
                  "is_reserved_seating": true,
                  "show_pick_a_seat": true,
                  "show_seatmap_thumbnail": true,
                  "show_colors_in_seatmap_thumbnail": true,
                  "is_free": true,
                  "source": "api",
                  "version": "null",
                  "resource_uri": "https://www.eventbriteapi.com/v3/events/1234/",
                  "event_sales_status": {
                    "sales_status": "text",
                    "start_sales_date": {
                      "timezone": "America/Los_Angeles",
                      "utc": "2018-05-12T02:00:00Z",
                      "local": "2018-05-11T19:00:00"
                    }
                  },
                  "checkout_settings": {
                    "created": "2018-01-31T13:00:00Z",
                    "changed": "2018-01-31T13:00:00Z",
                    "country_code": "",
                    "currency_code": "",
                    "checkout_method": "paypal",
                    "offline_settings": [
                      {
                        "payment_method": "CASH",
                        "instructions": ""
                      }
                    ],
                    "user_instrument_vault_id": ""
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CopyanEventresponse"
                },
                "example": {
                  "error_description": "",
                  "error_detail": {},
                  "status_code": 0,
                  "error": "INSUFFICIENT_PACKAGE"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/events/{event_id}/cancel/": {
      "post": {
        "tags": [
          "Event"
        ],
        "summary": "Cancel an Event",
        "description": "Cancel an Event. Returns a boolean indicating the success or failure of the cancel action.\nTo cancel an Event, the Event must not have any pending or completed orders.\n\nIf the event is a series parent, all series occurrences must be in a valid state to be canceled. Canceling the series parent will cancel all series occurrences.",
        "operationId": "CancelanEvent",
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "description": "Event ID.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "12345"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/json"
              ],
              "type": "string",
              "example": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CancelanEventresponse"
                },
                "example": {
                  "canceled": true
                }
              }
            }
          },
          "400": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CancelanEventresponse1"
                },
                "example": {
                  "error_description": "",
                  "error_detail": {},
                  "status_code": 0,
                  "error": "ALREADY_CANCELED"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/formats/{format_id}/": {
      "get": {
        "tags": [
          "Formats"
        ],
        "summary": "Retrieve a Format",
        "description": "Retrieve a Format by Format ID.",
        "operationId": "RetrieveaFormat",
        "parameters": [
          {
            "name": "format_id",
            "in": "path",
            "description": "Format ID.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number",
              "format": "double",
              "example": 2
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Format"
                },
                "example": {
                  "id": "2",
                  "name": "Seminar or Talk",
                  "name_localized": "Seminar or Talk",
                  "short_name": "Seminar",
                  "short_name_localized": "Seminar",
                  "resource_uri": "https://www.eventbriteapi.com/v3/formats/2/"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/formats/": {
      "get": {
        "tags": [
          "Formats"
        ],
        "summary": "List Formats",
        "description": "List all available Formats. Returns a paginated response.",
        "operationId": "ListFormats",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListFormatsresponse"
                },
                "example": {
                  "locale": "en_US",
                  "formats": [
                    {
                      "id": "2",
                      "name": "Seminar or Talk",
                      "name_localized": "Seminar or Talk",
                      "short_name": "Seminar",
                      "short_name_localized": "Seminar",
                      "resource_uri": "https://www.eventbriteapi.com/v3/formats/2/"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/events/{event_id}/inventory_tiers/{inventory_tier_id}/": {
      "get": {
        "tags": [
          "Inventory Tiers"
        ],
        "summary": "Retrieve an Inventory Tier",
        "description": "Retrieve an Inventory Tier by ID for an Event.",
        "operationId": "RetrieveanInventoryTier",
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "description": "Event ID",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "5678"
            }
          },
          {
            "name": "inventory_tier_id",
            "in": "path",
            "description": "Inventory Tier ID",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "1234"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetrieveanInventoryTierresponse"
                },
                "example": {
                  "inventory_tier": {
                    "name": "Tier 1",
                    "tier": 1,
                    "seatmap_number": 1,
                    "sort_order": 1,
                    "color": "#fac114",
                    "quantity_total": 30,
                    "count_against_event_capacity": true,
                    "image_id": "1234",
                    "id": "1234",
                    "event_id": "5678",
                    "quantity_held": 5,
                    "quantity_sold": 10,
                    "quantity_pending": 2,
                    "ticket_class_ids": [
                      "1234",
                      "5678"
                    ],
                    "capacity_total": 100,
                    "holds": [
                      {
                        "id": "I1234",
                        "event_id": "5678",
                        "name": "Marketing",
                        "abbreviation": "MKT",
                        "sort_order": 1,
                        "color": "#fac114",
                        "quantity_sold": 10,
                        "quantity_total": 30,
                        "quantity_pending": 5
                      }
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetrieveanInventoryTierresponse1"
                },
                "example": {
                  "error_description": "",
                  "error_detail": {},
                  "status_code": 0,
                  "error": "NOT_AUTHORIZED"
                }
              }
            }
          },
          "404": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetrieveanInventoryTierresponse3"
                },
                "example": {
                  "error_description": "",
                  "error_detail": {},
                  "status_code": 0,
                  "error": "NOT_FOUND"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "Inventory Tiers"
        ],
        "summary": "Update an Inventory Tier",
        "description": "<a name=\"inventory_tier_update\"></a>Update an existing Inventory Iier by ID for an Event. Partial updates are supported. Submit only attributes that are changed.",
        "operationId": "UpdateanInventoryTier",
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "description": "Event ID",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "12345"
            }
          },
          {
            "name": "inventory_tier_id",
            "in": "path",
            "description": "Inventory Tier ID",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "1234"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateanInventoryTierrequest"
              },
              "example": {
                "inventory_tier": {
                  "name": "Tier 1",
                  "sort_order": 1,
                  "color": "#fac114",
                  "quantity_total": 30,
                  "image_id": "1234",
                  "capacity_total": 100,
                  "holds": [
                    {
                      "id": "H1234",
                      "event_id": "5678",
                      "name": "Marketing",
                      "abbreviation": "MKT",
                      "sort_order": 1,
                      "color": "#fac114",
                      "quantity_total": 30,
                      "is_deleted": false
                    }
                  ]
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateanInventoryTierresponse"
                },
                "example": {
                  "inventory_tier": {
                    "name": "Tier 1",
                    "tier": 1,
                    "seatmap_number": 1,
                    "sort_order": 1,
                    "color": "#fac114",
                    "quantity_total": 30,
                    "count_against_event_capacity": true,
                    "image_id": "1234",
                    "id": "1234",
                    "event_id": "5678",
                    "quantity_held": 5,
                    "quantity_sold": 10,
                    "quantity_pending": 2,
                    "ticket_class_ids": [
                      "1234",
                      "5678"
                    ],
                    "capacity_total": 100,
                    "holds": [
                      {
                        "id": "I1234",
                        "event_id": "5678",
                        "name": "Marketing",
                        "abbreviation": "MKT",
                        "sort_order": 1,
                        "color": "#fac114",
                        "quantity_sold": 10,
                        "quantity_total": 30,
                        "quantity_pending": 5
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateanInventoryTierresponse1"
                },
                "example": {
                  "error_description": "",
                  "error_detail": {},
                  "status_code": 0,
                  "error": "ARGUMENTS_ERROR"
                }
              }
            }
          },
          "403": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateanInventoryTierresponse3"
                },
                "example": {
                  "error_description": "",
                  "error_detail": {},
                  "status_code": 0,
                  "error": "NOT_AUTHORIZED"
                }
              }
            }
          },
          "404": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateanInventoryTierresponse5"
                },
                "example": {
                  "error_description": "",
                  "error_detail": {},
                  "status_code": 0,
                  "error": "NOT_FOUND"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "Inventory Tiers"
        ],
        "summary": "Delete an Inventory Tier",
        "description": "Mark an existing Inventory Tier as deleted.",
        "operationId": "DeleteanInventoryTier",
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "description": "Event ID",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "12345"
            }
          },
          {
            "name": "inventory_tier_id",
            "in": "path",
            "description": "Inventory Tier ID",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "1234"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteanInventoryTierresponse"
                },
                "example": {
                  "deleted": "true"
                }
              }
            }
          },
          "400": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteanInventoryTierresponse1"
                },
                "example": {
                  "error_description": "",
                  "error_detail": {},
                  "status_code": 0,
                  "error": "HAS_ATTENDEES"
                }
              }
            }
          },
          "403": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteanInventoryTierresponse3"
                },
                "example": {
                  "error_description": "",
                  "error_detail": {},
                  "status_code": 0,
                  "error": "NOT_AUTHORIZED"
                }
              }
            }
          },
          "404": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteanInventoryTierresponse5"
                },
                "example": {
                  "error_description": "",
                  "error_detail": {},
                  "status_code": 0,
                  "error": "NOT_FOUND"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/events/{event_id}/inventory_tiers/": {
      "post": {
        "tags": [
          "Inventory Tiers"
        ],
        "summary": "Create an Inventory Tier",
        "description": "Create a new Inventory Tier for an Event.",
        "operationId": "CreateanInventoryTier",
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "description": "Event ID",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "1234"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateanInventoryTierrequest"
              },
              "example": {
                "inventory_tier": {
                  "name": "Tier 1",
                  "tier": 1,
                  "seatmap_number": 1,
                  "sort_order": 1,
                  "color": "#fac114",
                  "quantity_total": 30,
                  "count_against_event_capacity": true,
                  "image_id": "1234"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateanInventoryTierresponse"
                },
                "example": {
                  "inventory_tier": {
                    "name": "Tier 1",
                    "tier": 1,
                    "seatmap_number": 1,
                    "sort_order": 1,
                    "color": "#fac114",
                    "quantity_total": 30,
                    "count_against_event_capacity": true,
                    "image_id": "1234",
                    "id": "1234",
                    "event_id": "5678",
                    "quantity_held": 5,
                    "quantity_sold": 10,
                    "quantity_pending": 2,
                    "ticket_class_ids": [
                      "1234",
                      "5678"
                    ],
                    "capacity_total": 100,
                    "holds": [
                      {
                        "id": "I1234",
                        "event_id": "5678",
                        "name": "Marketing",
                        "abbreviation": "MKT",
                        "sort_order": 1,
                        "color": "#fac114",
                        "quantity_sold": 10,
                        "quantity_total": 30,
                        "quantity_pending": 5
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateanInventoryTierresponse1"
                },
                "example": {
                  "error_description": "",
                  "error_detail": {},
                  "status_code": 0,
                  "error": "EXCEED_MAXIMUM_INVENTORY_TIERS"
                }
              }
            }
          },
          "403": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateanInventoryTierresponse3"
                },
                "example": {
                  "error_description": "",
                  "error_detail": {},
                  "status_code": 0,
                  "error": "NOT_AUTHORIZED"
                }
              }
            }
          },
          "404": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateanInventoryTierresponse5"
                },
                "example": {
                  "error_description": "",
                  "error_detail": {},
                  "status_code": 0,
                  "error": "NOT_FOUND"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "get": {
        "tags": [
          "Inventory Tiers"
        ],
        "summary": "List Inventory Tiers by Event",
        "description": "Retrieves inventory tiers for an event.",
        "operationId": "ListInventoryTiersbyEvent",
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "description": "Event ID",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "1234"
            }
          },
          {
            "name": "seatmap_number",
            "in": "query",
            "description": "When specified, output is filtered by this tier group",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double",
              "example": 1
            }
          },
          {
            "name": "count_against_event_capacity",
            "in": "query",
            "description": "If true, output is filtered by whether the tier counts toward the event capacity or not",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean",
              "example": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListInventoryTiersbyEventresponse"
                },
                "example": {
                  "pagination": {
                    "object_count": 1,
                    "page_number": 1,
                    "page_size": 1,
                    "page_count": 1,
                    "continuation": "dGhpcyBpcyBhIGNvbnRpbnVhdGlvbiB0b2tlbg",
                    "has_more_items": false
                  },
                  "inventory_tiers": [
                    {
                      "name": "Tier 1",
                      "tier": 1,
                      "seatmap_number": 1,
                      "sort_order": 1,
                      "color": "#fac114",
                      "quantity_total": 30,
                      "count_against_event_capacity": true,
                      "image_id": "1234",
                      "id": "1234",
                      "event_id": "5678",
                      "quantity_held": 5,
                      "quantity_sold": 10,
                      "quantity_pending": 2,
                      "ticket_class_ids": [
                        "1234",
                        "5678"
                      ],
                      "capacity_total": 100,
                      "holds": [
                        {
                          "id": "I1234",
                          "event_id": "5678",
                          "name": "Marketing",
                          "abbreviation": "MKT",
                          "sort_order": 1,
                          "color": "#fac114",
                          "quantity_sold": 10,
                          "quantity_total": 30,
                          "quantity_pending": 5
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListInventoryTiersbyEventresponse1"
                },
                "example": {
                  "error_description": "",
                  "error_detail": {},
                  "status_code": 0,
                  "error": "NOT_AUTHORIZED"
                }
              }
            }
          },
          "404": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListInventoryTiersbyEventresponse3"
                },
                "example": {
                  "error_description": "",
                  "error_detail": {},
                  "status_code": 0,
                  "error": "NOT_FOUND"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/media/{media_id}/": {
      "get": {
        "tags": [
          "Media"
        ],
        "summary": "Retrieve Media",
        "description": "Retrieve Media by Media ID.",
        "operationId": "RetrieveMedia",
        "parameters": [
          {
            "name": "media_id",
            "in": "path",
            "description": "Media ID.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number",
              "format": "double",
              "example": 12345
            }
          },
          {
            "name": "width",
            "in": "query",
            "description": "Thumbnail width.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double",
              "example": 10
            }
          },
          {
            "name": "height",
            "in": "query",
            "description": "Thumbnail height.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double",
              "example": 15
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Image"
                },
                "example": {
                  "id": "12345",
                  "url": "https://image.com"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/media/upload/": {
      "post": {
        "tags": [
          "Media"
        ],
        "summary": "Upload a Media File",
        "description": "Upload a Media image file.",
        "operationId": "UploadaMediaFile",
        "parameters": [],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MediaUploadPost"
              },
              "example": {
                "upload_token": "abc123",
                "crop_mask": {
                  "top_left": {
                    "y": 15,
                    "x": 15
                  },
                  "width": 15,
                  "height": 15
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediaUploadPost"
                },
                "example": {
                  "upload_token": "abc123",
                  "crop_mask": {
                    "top_left": {
                      "y": 15,
                      "x": 15
                    },
                    "width": 15,
                    "height": 15
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UploadaMediaFileresponse"
                },
                "example": {
                  "error_description": "",
                  "error_detail": {},
                  "status_code": 0,
                  "error": "BAD_FILE"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "get": {
        "tags": [
          "Media"
        ],
        "summary": "Retrieve a Media Upload",
        "description": "Retrieve information on a Media image upload.",
        "operationId": "RetrieveaMediaUpload",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediaUpload"
                },
                "example": {
                  "type": [
                    "jpeg",
                    "image",
                    "image",
                    "image",
                    "image",
                    "image",
                    "image"
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/orders/{order_id}/": {
      "get": {
        "tags": [
          "Order"
        ],
        "summary": "Retrieve Order by ID",
        "description": "Retrieve an Order by Order ID.",
        "operationId": "RetrieveOrderbyID",
        "parameters": [
          {
            "name": "order_id",
            "in": "path",
            "description": "Order ID.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "12345"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                },
                "example": {
                  "id": "442719216",
                  "created": "2018-05-12T02:00:00Z",
                  "changed": "2018-05-12T02:00:00Z",
                  "name": "John Smith",
                  "first_name": "John",
                  "last_name": "Smith",
                  "email": "john.smith@example.com",
                  "costs": {
                    "base_price": {
                      "currency": "USD",
                      "value": 432,
                      "major_value": "4.32",
                      "display": "4.32 USD"
                    },
                    "display_price": {
                      "currency": "USD",
                      "value": 432,
                      "major_value": "4.32",
                      "display": "4.32 USD"
                    },
                    "display_fee": {
                      "currency": "USD",
                      "value": 432,
                      "major_value": "4.32",
                      "display": "4.32 USD"
                    },
                    "gross": {
                      "currency": "USD",
                      "value": 432,
                      "major_value": "4.32",
                      "display": "4.32 USD"
                    },
                    "eventbrite_fee": {
                      "currency": "USD",
                      "value": 432,
                      "major_value": "4.32",
                      "display": "4.32 USD"
                    },
                    "payment_fee": {
                      "currency": "USD",
                      "value": 432,
                      "major_value": "4.32",
                      "display": "4.32 USD"
                    },
                    "tax": {
                      "currency": "USD",
                      "value": 432,
                      "major_value": "4.32",
                      "display": "4.32 USD"
                    },
                    "display_tax": {
                      "currency": "USD",
                      "value": 432,
                      "major_value": "4.32",
                      "display": "4.32 USD"
                    },
                    "price_before_discount": {
                      "currency": "USD",
                      "value": 432,
                      "major_value": "4.32",
                      "display": "4.32 USD"
                    },
                    "discount_amount": {
                      "currency": "USD",
                      "value": 432,
                      "major_value": "4.32",
                      "display": "4.32 USD"
                    },
                    "discount_type": "coded",
                    "fee_components": [
                      {
                        "intermediate": false,
                        "name": "royalty",
                        "internal_name": "service fee",
                        "group_name": "service fee",
                        "value": 200,
                        "discount": {
                          "amount": {
                            "currency": "USD",
                            "value": 432,
                            "major_value": "4.32",
                            "display": "4.32 USD"
                          },
                          "reason": "TOGGLED_OFF_FEE"
                        },
                        "rule": {
                          "id": "95"
                        },
                        "base": "item.display-includable",
                        "bucket": "fee",
                        "recipient": "event.6018",
                        "payer": "attendee"
                      }
                    ],
                    "tax_components": [
                      {
                        "intermediate": false,
                        "name": "royalty",
                        "internal_name": "service fee",
                        "group_name": "service fee",
                        "value": 200,
                        "discount": {
                          "amount": {
                            "currency": "USD",
                            "value": 432,
                            "major_value": "4.32",
                            "display": "4.32 USD"
                          },
                          "reason": "TOGGLED_OFF_FEE"
                        },
                        "rule": {
                          "id": "95"
                        },
                        "base": "item.display-includable",
                        "bucket": "fee",
                        "recipient": "event.6018",
                        "payer": "attendee"
                      }
                    ],
                    "shipping_components": [
                      {
                        "intermediate": false,
                        "name": "royalty",
                        "internal_name": "service fee",
                        "group_name": "service fee",
                        "value": 200,
                        "discount": {
                          "amount": {
                            "currency": "USD",
                            "value": 432,
                            "major_value": "4.32",
                            "display": "4.32 USD"
                          },
                          "reason": "TOGGLED_OFF_FEE"
                        },
                        "rule": {
                          "id": "95"
                        },
                        "base": "item.display-includable",
                        "bucket": "fee",
                        "recipient": "event.6018",
                        "payer": "attendee"
                      }
                    ],
                    "has_gts_tax": false,
                    "tax_name": "VAT"
                  },
                  "event_id": "17937020110",
                  "event": {
                    "id": "12345",
                    "name": {
                      "text": "Some text",
                      "html": "<p>Some text</p>"
                    },
                    "description": {
                      "text": "Some text",
                      "html": "<p>Some text</p>"
                    },
                    "start": {
                      "timezone": "America/Los_Angeles",
                      "utc": "2018-05-12T02:00:00Z",
                      "local": "2018-05-11T19:00:00"
                    },
                    "end": {
                      "timezone": "America/Los_Angeles",
                      "utc": "2018-05-12T02:00:00Z",
                      "local": "2018-05-11T19:00:00"
                    },
                    "url": "https://www.eventbrite.com/e/45263283700",
                    "vanity_url": "https://testevent.eventbrite.com",
                    "created": "2017-02-19T20:28:14Z",
                    "changed": "2017-02-19T20:28:14Z",
                    "published": "2017-02-19T20:28:14Z",
                    "status": "live",
                    "currency": "USD",
                    "online_event": false,
                    "organization_id": "",
                    "organizer_id": "",
                    "organizer": {
                      "name": "",
                      "description": {
                        "text": "Some text",
                        "html": "<p>Some text</p>"
                      },
                      "long_description": {
                        "text": "Some text",
                        "html": "<p>Some text</p>"
                      },
                      "logo_id": null,
                      "logo": {
                        "id": "12345",
                        "url": "https://image.com",
                        "crop_mask": {
                          "top_left": {
                            "y": 15,
                            "x": 15
                          },
                          "width": 15,
                          "height": 15
                        },
                        "original": {
                          "url": "https://image.com",
                          "width": 800,
                          "height": 400
                        },
                        "aspect_ratio": "2",
                        "edge_color": "#6a7c8b",
                        "edge_color_set": true
                      },
                      "resource_uri": "https://www.eventbriteapi.com/v3/organizers/12345/",
                      "id": "12345",
                      "url": "https://www.eventbrite.com/o/12345/",
                      "num_past_events": 5,
                      "num_future_events": 1,
                      "twitter": "@abc",
                      "facebook": "abc"
                    },
                    "logo_id": null,
                    "logo": {
                      "id": "12345",
                      "url": "https://image.com",
                      "crop_mask": {
                        "top_left": {
                          "y": 15,
                          "x": 15
                        },
                        "width": 15,
                        "height": 15
                      },
                      "original": {
                        "url": "https://image.com",
                        "width": 800,
                        "height": 400
                      },
                      "aspect_ratio": "2",
                      "edge_color": "#6a7c8b",
                      "edge_color_set": true
                    },
                    "venue": {
                      "name": "Great Venue",
                      "age_restriction": null,
                      "capacity": 100,
                      "address": {
                        "address_1": null,
                        "address_2": null,
                        "city": null,
                        "region": null,
                        "postal_code": null,
                        "country": null,
                        "latitude": null,
                        "longitude": null
                      },
                      "resource_uri": "https://www.eventbriteapi.com/v3/venues/3003/",
                      "id": "3003",
                      "latitude": "49.28497549999999",
                      "longitude": "123.11082529999999"
                    },
                    "format_id": null,
                    "format": {
                      "id": "2",
                      "name": "Seminar or Talk",
                      "name_localized": "Seminar or Talk",
                      "short_name": "Seminar",
                      "short_name_localized": "Seminar",
                      "resource_uri": "https://www.eventbriteapi.com/v3/formats/2/"
                    },
                    "category": {
                      "id": "103",
                      "resource_uri": "https://www.eventbriteapi.com/v3/categories/103/",
                      "name": "Music",
                      "name_localized": "Music",
                      "short_name": "Music",
                      "short_name_localized": "Music",
                      "subcategories": [
                        {
                          "id": "3003",
                          "resource_uri": "https://www.eventbriteapi.com/v3/subcategories/3003/",
                          "name": "Classical",
                          "parent_category": {}
                        }
                      ]
                    },
                    "subcategory": {
                      "id": "3003",
                      "resource_uri": "https://www.eventbriteapi.com/v3/subcategories/3003/",
                      "name": "Classical",
                      "parent_category": {
                        "id": "103",
                        "resource_uri": "https://www.eventbriteapi.com/v3/categories/103/",
                        "name": "Music",
                        "name_localized": "Music",
                        "short_name": "Music",
                        "short_name_localized": "Music",
                        "subcategories": [
                          {}
                        ]
                      }
                    },
                    "music_properties": {
                      "age_restriction": null,
                      "presented_by": null,
                      "door_time": "2019-05-12T-19:00:00Z"
                    },
                    "bookmark_info": {
                      "bookmarked": false
                    },
                    "ticket_availability": {
                      "has_available_tickets": false,
                      "minimum_ticket_price": {
                        "currency": "USD",
                        "value": 432,
                        "major_value": "4.32",
                        "display": "4.32 USD"
                      },
                      "maximum_ticket_price": {
                        "currency": "USD",
                        "value": 432,
                        "major_value": "4.32",
                        "display": "4.32 USD"
                      },
                      "is_sold_out": true,
                      "start_sales_date": {
                        "timezone": "America/Los_Angeles",
                        "utc": "2018-05-12T02:00:00Z",
                        "local": "2018-05-11T19:00:00"
                      },
                      "waitlist_available": false
                    },
                    "listed": false,
                    "shareable": false,
                    "invite_only": false,
                    "show_remaining": true,
                    "password": "12345",
                    "capacity": 100,
                    "capacity_is_custom": true,
                    "tx_time_limit": "12345",
                    "hide_start_date": true,
                    "hide_end_date": true,
                    "locale": "en_US",
                    "is_locked": true,
                    "privacy_setting": "unlocked",
                    "is_externally_ticketed": false,
                    "external_ticketing": {
                      "external_url": "",
                      "ticketing_provider_name": "",
                      "is_free": false,
                      "minimum_ticket_price": {
                        "currency": "USD",
                        "value": 432,
                        "major_value": "4.32",
                        "display": "4.32 USD"
                      },
                      "maximum_ticket_price": {
                        "currency": "USD",
                        "value": 432,
                        "major_value": "4.32",
                        "display": "4.32 USD"
                      },
                      "sales_start": "",
                      "sales_end": ""
                    },
                    "is_series": true,
                    "is_series_parent": true,
                    "series_id": "56321",
                    "is_reserved_seating": true,
                    "show_pick_a_seat": true,
                    "show_seatmap_thumbnail": true,
                    "show_colors_in_seatmap_thumbnail": true,
                    "is_free": true,
                    "source": "api",
                    "version": "null",
                    "resource_uri": "https://www.eventbriteapi.com/v3/events/1234/",
                    "event_sales_status": {
                      "sales_status": "text",
                      "start_sales_date": {
                        "timezone": "America/Los_Angeles",
                        "utc": "2018-05-12T02:00:00Z",
                        "local": "2018-05-11T19:00:00"
                      }
                    },
                    "checkout_settings": {
                      "created": "2018-01-31T13:00:00Z",
                      "changed": "2018-01-31T13:00:00Z",
                      "country_code": "",
                      "currency_code": "",
                      "checkout_method": "paypal",
                      "offline_settings": [
                        {
                          "payment_method": "CASH",
                          "instructions": ""
                        }
                      ],
                      "user_instrument_vault_id": ""
                    }
                  },
                  "attendees": [
                    {
                      "id": "12345",
                      "created": "2018-05-12T02:00:00Z",
                      "changed": "2018-05-12T02:00:00Z",
                      "ticket_class_id": "12345",
                      "ticket_class_name": "General Admission",
                      "profile": {
                        "name": "John Smith",
                        "email": "jhon.smith@example.com",
                        "first_name": "John",
                        "last_name": "Smith",
                        "prefix": "Mr.",
                        "suffix": "Sr",
                        "age": 33,
                        "job_title": "Software Enginner",
                        "company": "Eventbrite",
                        "website": "https://mysite.com",
                        "blog": "https://mysite.com",
                        "gender": "male",
                        "birth_date": "1984-12-06",
                        "cell_phone": "555 555-1234",
                        "work_phone": "555 555-1234",
                        "addresses": {
                          "home": {
                            "address_1": null,
                            "address_2": null,
                            "city": null,
                            "region": null,
                            "postal_code": null,
                            "country": null,
                            "latitude": null,
                            "longitude": null,
                            "localized_address_display": "",
                            "localized_area_display": "",
                            "localized_multi_line_address_display": []
                          },
                          "ship": {
                            "address_1": null,
                            "address_2": null,
                            "city": null,
                            "region": null,
                            "postal_code": null,
                            "country": null,
                            "latitude": null,
                            "longitude": null,
                            "localized_address_display": "",
                            "localized_area_display": "",
                            "localized_multi_line_address_display": []
                          },
                          "work": {
                            "address_1": null,
                            "address_2": null,
                            "city": null,
                            "region": null,
                            "postal_code": null,
                            "country": null,
                            "latitude": null,
                            "longitude": null,
                            "localized_address_display": "",
                            "localized_area_display": "",
                            "localized_multi_line_address_display": []
                          },
                          "bill": {
                            "address_1": null,
                            "address_2": null,
                            "city": null,
                            "region": null,
                            "postal_code": null,
                            "country": null,
                            "latitude": null,
                            "longitude": null,
                            "localized_address_display": "",
                            "localized_area_display": "",
                            "localized_multi_line_address_display": []
                          }
                        }
                      },
                      "questions": [
                        {
                          "id": "20090892",
                          "label": "What's your question?",
                          "type": "text",
                          "required": false
                        }
                      ],
                      "answers": [
                        {
                          "question_id": "20090892",
                          "attendee_id": "1009831492",
                          "question": "What's your question?",
                          "type": "text",
                          "answer": "This is my answer"
                        }
                      ],
                      "barcodes": [
                        {
                          "barcode": "1234093511009831492001",
                          "status": "unused",
                          "created": "2018-08-18T22:24:03Z",
                          "changed": "2018-08-18T22:24:03Z",
                          "checkin_type": 0,
                          "is_printed": false
                        }
                      ],
                      "team": {
                        "id": "12345",
                        "name": "Great Team!",
                        "date_joined": "2018-05-12T02:00:00Z",
                        "event_id": "12345"
                      },
                      "affiliate": "affiliate_code",
                      "checked_in": false,
                      "cancelled": false,
                      "refunded": false,
                      "costs": {
                        "base_price": {
                          "currency": "USD",
                          "value": 432,
                          "major_value": "4.32",
                          "display": "4.32 USD"
                        },
                        "gross": {
                          "currency": "USD",
                          "value": 432,
                          "major_value": "4.32",
                          "display": "4.32 USD"
                        },
                        "eventbrite_fee": {
                          "currency": "USD",
                          "value": 432,
                          "major_value": "4.32",
                          "display": "4.32 USD"
                        },
                        "payment_fee": {
                          "currency": "USD",
                          "value": 432,
                          "major_value": "4.32",
                          "display": "4.32 USD"
                        },
                        "tax": {
                          "currency": "USD",
                          "value": 432,
                          "major_value": "4.32",
                          "display": "4.32 USD"
                        }
                      },
                      "status": "",
                      "event_id": "12345",
                      "event": {
                        "id": "12345",
                        "name": {
                          "text": "Some text",
                          "html": "<p>Some text</p>"
                        },
                        "description": {
                          "text": "Some text",
                          "html": "<p>Some text</p>"
                        },
                        "start": {
                          "timezone": "America/Los_Angeles",
                          "utc": "2018-05-12T02:00:00Z",
                          "local": "2018-05-11T19:00:00"
                        },
                        "end": {
                          "timezone": "America/Los_Angeles",
                          "utc": "2018-05-12T02:00:00Z",
                          "local": "2018-05-11T19:00:00"
                        },
                        "url": "https://www.eventbrite.com/e/45263283700",
                        "vanity_url": "https://testevent.eventbrite.com",
                        "created": "2017-02-19T20:28:14Z",
                        "changed": "2017-02-19T20:28:14Z",
                        "published": "2017-02-19T20:28:14Z",
                        "status": "live",
                        "currency": "USD",
                        "online_event": false,
                        "organization_id": "",
                        "organizer_id": "",
                        "organizer": {
                          "name": "",
                          "description": {
                            "text": "Some text",
                            "html": "<p>Some text</p>"
                          },
                          "long_description": {
                            "text": "Some text",
                            "html": "<p>Some text</p>"
                          },
                          "logo_id": null,
                          "logo": {
                            "id": "12345",
                            "url": "https://image.com",
                            "crop_mask": {
                              "top_left": {
                                "y": 15,
                                "x": 15
                              },
                              "width": 15,
                              "height": 15
                            },
                            "original": {
                              "url": "https://image.com",
                              "width": 800,
                              "height": 400
                            },
                            "aspect_ratio": "2",
                            "edge_color": "#6a7c8b",
                            "edge_color_set": true
                          },
                          "resource_uri": "https://www.eventbriteapi.com/v3/organizers/12345/",
                          "id": "12345",
                          "url": "https://www.eventbrite.com/o/12345/",
                          "num_past_events": 5,
                          "num_future_events": 1,
                          "twitter": "@abc",
                          "facebook": "abc"
                        },
                        "logo_id": null,
                        "logo": {
                          "id": "12345",
                          "url": "https://image.com",
                          "crop_mask": {
                            "top_left": {
                              "y": 15,
                              "x": 15
                            },
                            "width": 15,
                            "height": 15
                          },
                          "original": {
                            "url": "https://image.com",
                            "width": 800,
                            "height": 400
                          },
                          "aspect_ratio": "2",
                          "edge_color": "#6a7c8b",
                          "edge_color_set": true
                        },
                        "venue": {
                          "name": "Great Venue",
                          "age_restriction": null,
                          "capacity": 100,
                          "address": {
                            "address_1": null,
                            "address_2": null,
                            "city": null,
                            "region": null,
                            "postal_code": null,
                            "country": null,
                            "latitude": null,
                            "longitude": null
                          },
                          "resource_uri": "https://www.eventbriteapi.com/v3/venues/3003/",
                          "id": "3003",
                          "latitude": "49.28497549999999",
                          "longitude": "123.11082529999999"
                        },
                        "format_id": null,
                        "format": {
                          "id": "2",
                          "name": "Seminar or Talk",
                          "name_localized": "Seminar or Talk",
                          "short_name": "Seminar",
                          "short_name_localized": "Seminar",
                          "resource_uri": "https://www.eventbriteapi.com/v3/formats/2/"
                        },
                        "category": {
                          "id": "103",
                          "resource_uri": "https://www.eventbriteapi.com/v3/categories/103/",
                          "name": "Music",
                          "name_localized": "Music",
                          "short_name": "Music",
                          "short_name_localized": "Music",
                          "subcategories": [
                            {
                              "id": "3003",
                              "resource_uri": "https://www.eventbriteapi.com/v3/subcategories/3003/",
                              "name": "Classical",
                              "parent_category": {}
                            }
                          ]
                        },
                        "subcategory": {
                          "id": "3003",
                          "resource_uri": "https://www.eventbriteapi.com/v3/subcategories/3003/",
                          "name": "Classical",
                          "parent_category": {
                            "id": "103",
                            "resource_uri": "https://www.eventbriteapi.com/v3/categories/103/",
                            "name": "Music",
                            "name_localized": "Music",
                            "short_name": "Music",
                            "short_name_localized": "Music",
                            "subcategories": [
                              {}
                            ]
                          }
                        },
                        "music_properties": {
                          "age_restriction": null,
                          "presented_by": null,
                          "door_time": "2019-05-12T-19:00:00Z"
                        },
                        "bookmark_info": {
                          "bookmarked": false
                        },
                        "ticket_availability": {
                          "has_available_tickets": false,
                          "minimum_ticket_price": {
                            "currency": "USD",
                            "value": 432,
                            "major_value": "4.32",
                            "display": "4.32 USD"
                          },
                          "maximum_ticket_price": {
                            "currency": "USD",
                            "value": 432,
                            "major_value": "4.32",
                            "display": "4.32 USD"
                          },
                          "is_sold_out": true,
                          "start_sales_date": {
                            "timezone": "America/Los_Angeles",
                            "utc": "2018-05-12T02:00:00Z",
                            "local": "2018-05-11T19:00:00"
                          },
                          "waitlist_available": false
                        },
                        "listed": false,
                        "shareable": false,
                        "invite_only": false,
                        "show_remaining": true,
                        "password": "12345",
                        "capacity": 100,
                        "capacity_is_custom": true,
                        "tx_time_limit": "12345",
                        "hide_start_date": true,
                        "hide_end_date": true,
                        "locale": "en_US",
                        "is_locked": true,
                        "privacy_setting": "unlocked",
                        "is_externally_ticketed": false,
                        "external_ticketing": {
                          "external_url": "",
                          "ticketing_provider_name": "",
                          "is_free": false,
                          "minimum_ticket_price": {
                            "currency": "USD",
                            "value": 432,
                            "major_value": "4.32",
                            "display": "4.32 USD"
                          },
                          "maximum_ticket_price": {
                            "currency": "USD",
                            "value": 432,
                            "major_value": "4.32",
                            "display": "4.32 USD"
                          },
                          "sales_start": "",
                          "sales_end": ""
                        },
                        "is_series": true,
                        "is_series_parent": true,
                        "series_id": "56321",
                        "is_reserved_seating": true,
                        "show_pick_a_seat": true,
                        "show_seatmap_thumbnail": true,
                        "show_colors_in_seatmap_thumbnail": true,
                        "is_free": true,
                        "source": "api",
                        "version": "null",
                        "resource_uri": "https://www.eventbriteapi.com/v3/events/1234/",
                        "event_sales_status": {
                          "sales_status": "text",
                          "start_sales_date": {
                            "timezone": "America/Los_Angeles",
                            "utc": "2018-05-12T02:00:00Z",
                            "local": "2018-05-11T19:00:00"
                          }
                        },
                        "checkout_settings": {
                          "created": "2018-01-31T13:00:00Z",
                          "changed": "2018-01-31T13:00:00Z",
                          "country_code": "",
                          "currency_code": "",
                          "checkout_method": "paypal",
                          "offline_settings": [
                            {
                              "payment_method": "CASH",
                              "instructions": ""
                            }
                          ],
                          "user_instrument_vault_id": ""
                        }
                      },
                      "order_id": "12345",
                      "guestlist_id": null,
                      "invited_by": null,
                      "assigned_unit": {
                        "unit_id": "18-1:2",
                        "description": "Some description",
                        "location_image": {
                          "url": "",
                          "x": 0,
                          "y": 0
                        },
                        "labels": [
                          "100",
                          "A",
                          "23"
                        ],
                        "titles": [
                          "Area",
                          "Row",
                          "Seat"
                        ]
                      },
                      "delivery_method": "electronic",
                      "variant_id": null,
                      "contact_list_preferences": {
                        "has_contact_list": true,
                        "has_opted_in": true,
                        "_type": "attendee_contact_list_preferences"
                      },
                      "resource_uri": ""
                    }
                  ],
                  "time_remaining": 100,
                  "resource_uri": "https://www.eventbriteapi.com/v3/orders/1234/",
                  "status": "placed",
                  "ticket_buyer_settings": {
                    "confirmation_message": {
                      "text": "Some text",
                      "html": "<p>Some text</p>"
                    },
                    "instructions": {
                      "text": "Some text",
                      "html": "<p>Some text</p>"
                    },
                    "event_id": "3003",
                    "refund_request_enabled": false,
                    "ticket_class_confirmation_settings": [
                      {
                        "ticket_class_id": "1023",
                        "event_id": "3003",
                        "confirmation_message": {
                          "text": "Some text",
                          "html": "<p>Some text</p>"
                        }
                      }
                    ]
                  },
                  "contact_list_preferences": {
                    "has_contact_list": true,
                    "has_opted_in": true,
                    "_type": "order_contact_list_preferences"
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetrieveOrderbyIDresponse"
                },
                "example": {
                  "error_description": "",
                  "error_detail": {},
                  "status_code": 0,
                  "error": "ORDER_EXPIRED"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/organizations/{organization_id}/orders/": {
      "get": {
        "tags": [
          "Order"
        ],
        "summary": "List Orders by Organization ID",
        "description": "Returns a paginated response of orders, under the key orders, of orders placed against any of the events the organization owns (events that would be returned from /organizations/:id/events/)",
        "operationId": "ListOrdersbyOrganizationID",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "Organization ID.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "12345"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Filter Event's Order by status.",
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/status14"
            }
          },
          {
            "name": "changed_since",
            "in": "query",
            "description": "Only return orders changed on or after the time given.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "only_emails",
            "in": "query",
            "description": "Only include orders placed by one of these emails.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "exclude_emails",
            "in": "query",
            "description": "Don't include orders placed by any of these emails",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Expand query results",
            "explode": true,
            "style": "form",
            "schema": {
              "enum": [
                "attendee"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOrdersbyOrganizationIDresponse"
                },
                "example": {
                  "pagination": {
                    "object_count": 1,
                    "page_number": 1,
                    "page_size": 1,
                    "page_count": 1,
                    "continuation": "dGhpcyBpcyBhIGNvbnRpbnVhdGlvbiB0b2tlbg",
                    "has_more_items": false
                  },
                  "orders": [
                    {
                      "id": "442719216",
                      "created": "2018-05-12T02:00:00Z",
                      "changed": "2018-05-12T02:00:00Z",
                      "name": "John Smith",
                      "first_name": "John",
                      "last_name": "Smith",
                      "email": "john.smith@example.com",
                      "costs": {
                        "base_price": {
                          "currency": "USD",
                          "value": 432,
                          "major_value": "4.32",
                          "display": "4.32 USD"
                        },
                        "display_price": {
                          "currency": "USD",
                          "value": 432,
                          "major_value": "4.32",
                          "display": "4.32 USD"
                        },
                        "display_fee": {
                          "currency": "USD",
                          "value": 432,
                          "major_value": "4.32",
                          "display": "4.32 USD"
                        },
                        "gross": {
                          "currency": "USD",
                          "value": 432,
                          "major_value": "4.32",
                          "display": "4.32 USD"
                        },
                        "eventbrite_fee": {
                          "currency": "USD",
                          "value": 432,
                          "major_value": "4.32",
                          "display": "4.32 USD"
                        },
                        "payment_fee": {
                          "currency": "USD",
                          "value": 432,
                          "major_value": "4.32",
                          "display": "4.32 USD"
                        },
                        "tax": {
                          "currency": "USD",
                          "value": 432,
                          "major_value": "4.32",
                          "display": "4.32 USD"
                        },
                        "display_tax": {
                          "currency": "USD",
                          "value": 432,
                          "major_value": "4.32",
                          "display": "4.32 USD"
                        },
                        "price_before_discount": {
                          "currency": "USD",
                          "value": 432,
                          "major_value": "4.32",
                          "display": "4.32 USD"
                        },
                        "discount_amount": {
                          "currency": "USD",
                          "value": 432,
                          "major_value": "4.32",
                          "display": "4.32 USD"
                        },
                        "discount_type": "coded",
                        "fee_components": [
                          {
                            "intermediate": false,
                            "name": "royalty",
                            "internal_name": "service fee",
                            "group_name": "service fee",
                            "value": 200,
                            "discount": {
                              "amount": {
                                "currency": "USD",
                                "value": 432,
                                "major_value": "4.32",
                                "display": "4.32 USD"
                              },
                              "reason": "TOGGLED_OFF_FEE"
                            },
                            "rule": {
                              "id": "95"
                            },
                            "base": "item.display-includable",
                            "bucket": "fee",
                            "recipient": "event.6018",
                            "payer": "attendee"
                          }
                        ],
                        "tax_components": [
                          {
                            "intermediate": false,
                            "name": "royalty",
                            "internal_name": "service fee",
                            "group_name": "service fee",
                            "value": 200,
                            "discount": {
                              "amount": {
                                "currency": "USD",
                                "value": 432,
                                "major_value": "4.32",
                                "display": "4.32 USD"
                              },
                              "reason": "TOGGLED_OFF_FEE"
                            },
                            "rule": {
                              "id": "95"
                            },
                            "base": "item.display-includable",
                            "bucket": "fee",
                            "recipient": "event.6018",
                            "payer": "attendee"
                          }
                        ],
                        "shipping_components": [
                          {
                            "intermediate": false,
                            "name": "royalty",
                            "internal_name": "service fee",
                            "group_name": "service fee",
                            "value": 200,
                            "discount": {
                              "amount": {
                                "currency": "USD",
                                "value": 432,
                                "major_value": "4.32",
                                "display": "4.32 USD"
                              },
                              "reason": "TOGGLED_OFF_FEE"
                            },
                            "rule": {
                              "id": "95"
                            },
                            "base": "item.display-includable",
                            "bucket": "fee",
                            "recipient": "event.6018",
                            "payer": "attendee"
                          }
                        ],
                        "has_gts_tax": false,
                        "tax_name": "VAT"
                      },
                      "event_id": "17937020110",
                      "event": {
                        "id": "12345",
                        "name": {
                          "text": "Some text",
                          "html": "<p>Some text</p>"
                        },
                        "description": {
                          "text": "Some text",
                          "html": "<p>Some text</p>"
                        },
                        "start": {
                          "timezone": "America/Los_Angeles",
                          "utc": "2018-05-12T02:00:00Z",
                          "local": "2018-05-11T19:00:00"
                        },
                        "end": {
                          "timezone": "America/Los_Angeles",
                          "utc": "2018-05-12T02:00:00Z",
                          "local": "2018-05-11T19:00:00"
                        },
                        "url": "https://www.eventbrite.com/e/45263283700",
                        "vanity_url": "https://testevent.eventbrite.com",
                        "created": "2017-02-19T20:28:14Z",
                        "changed": "2017-02-19T20:28:14Z",
                        "published": "2017-02-19T20:28:14Z",
                        "status": "live",
                        "currency": "USD",
                        "online_event": false,
                        "organization_id": "",
                        "organizer_id": "",
                        "organizer": {
                          "name": "",
                          "description": {
                            "text": "Some text",
                            "html": "<p>Some text</p>"
                          },
                          "long_description": {
                            "text": "Some text",
                            "html": "<p>Some text</p>"
                          },
                          "logo_id": null,
                          "logo": {
                            "id": "12345",
                            "url": "https://image.com",
                            "crop_mask": {
                              "top_left": {
                                "y": 15,
                                "x": 15
                              },
                              "width": 15,
                              "height": 15
                            },
                            "original": {
                              "url": "https://image.com",
                              "width": 800,
                              "height": 400
                            },
                            "aspect_ratio": "2",
                            "edge_color": "#6a7c8b",
                            "edge_color_set": true
                          },
                          "resource_uri": "https://www.eventbriteapi.com/v3/organizers/12345/",
                          "id": "12345",
                          "url": "https://www.eventbrite.com/o/12345/",
                          "num_past_events": 5,
                          "num_future_events": 1,
                          "twitter": "@abc",
                          "facebook": "abc"
                        },
                        "logo_id": null,
                        "logo": {
                          "id": "12345",
                          "url": "https://image.com",
                          "crop_mask": {
                            "top_left": {
                              "y": 15,
                              "x": 15
                            },
                            "width": 15,
                            "height": 15
                          },
                          "original": {
                            "url": "https://image.com",
                            "width": 800,
                            "height": 400
                          },
                          "aspect_ratio": "2",
                          "edge_color": "#6a7c8b",
                          "edge_color_set": true
                        },
                        "venue": {
                          "name": "Great Venue",
                          "age_restriction": null,
                          "capacity": 100,
                          "address": {
                            "address_1": null,
                            "address_2": null,
                            "city": null,
                            "region": null,
                            "postal_code": null,
                            "country": null,
                            "latitude": null,
                            "longitude": null
                          },
                          "resource_uri": "https://www.eventbriteapi.com/v3/venues/3003/",
                          "id": "3003",
                          "latitude": "49.28497549999999",
                          "longitude": "123.11082529999999"
                        },
                        "format_id": null,
                        "format": {
                          "id": "2",
                          "name": "Seminar or Talk",
                          "name_localized": "Seminar or Talk",
                          "short_name": "Seminar",
                          "short_name_localized": "Seminar",
                          "resource_uri": "https://www.eventbriteapi.com/v3/formats/2/"
                        },
                        "category": {
                          "id": "103",
                          "resource_uri": "https://www.eventbriteapi.com/v3/categories/103/",
                          "name": "Music",
                          "name_localized": "Music",
                          "short_name": "Music",
                          "short_name_localized": "Music",
                          "subcategories": [
                            {
                              "id": "3003",
                              "resource_uri": "https://www.eventbriteapi.com/v3/subcategories/3003/",
                              "name": "Classical",
                              "parent_category": {}
                            }
                          ]
                        },
                        "subcategory": {
                          "id": "3003",
                          "resource_uri": "https://www.eventbriteapi.com/v3/subcategories/3003/",
                          "name": "Classical",
                          "parent_category": {
                            "id": "103",
                            "resource_uri": "https://www.eventbriteapi.com/v3/categories/103/",
                            "name": "Music",
                            "name_localized": "Music",
                            "short_name": "Music",
                            "short_name_localized": "Music",
                            "subcategories": [
                              {}
                            ]
                          }
                        },
                        "music_properties": {
                          "age_restriction": null,
                          "presented_by": null,
                          "door_time": "2019-05-12T-19:00:00Z"
                        },
                        "bookmark_info": {
                          "bookmarked": false
                        },
                        "ticket_availability": {
                          "has_available_tickets": false,
                          "minimum_ticket_price": {
                            "currency": "USD",
                            "value": 432,
                            "major_value": "4.32",
                            "display": "4.32 USD"
                          },
                          "maximum_ticket_price": {
                            "currency": "USD",
                            "value": 432,
                            "major_value": "4.32",
                            "display": "4.32 USD"
                          },
                          "is_sold_out": true,
                          "start_sales_date": {
                            "timezone": "America/Los_Angeles",
                            "utc": "2018-05-12T02:00:00Z",
                            "local": "2018-05-11T19:00:00"
                          },
                          "waitlist_available": false
                        },
                        "listed": false,
                        "shareable": false,
                        "invite_only": false,
                        "show_remaining": true,
                        "password": "12345",
                        "capacity": 100,
                        "capacity_is_custom": true,
                        "tx_time_limit": "12345",
                        "hide_start_date": true,
                        "hide_end_date": true,
                        "locale": "en_US",
                        "is_locked": true,
                        "privacy_setting": "unlocked",
                        "is_externally_ticketed": false,
                        "external_ticketing": {
                          "external_url": "",
                          "ticketing_provider_name": "",
                          "is_free": false,
                          "minimum_ticket_price": {
                            "currency": "USD",
                            "value": 432,
                            "major_value": "4.32",
                            "display": "4.32 USD"
                          },
                          "maximum_ticket_price": {
                            "currency": "USD",
                            "value": 432,
                            "major_value": "4.32",
                            "display": "4.32 USD"
                          },
                          "sales_start": "",
                          "sales_end": ""
                        },
                        "is_series": true,
                        "is_series_parent": true,
                        "series_id": "56321",
                        "is_reserved_seating": true,
                        "show_pick_a_seat": true,
                        "show_seatmap_thumbnail": true,
                        "show_colors_in_seatmap_thumbnail": true,
                        "is_free": true,
                        "source": "api",
                        "version": "null",
                        "resource_uri": "https://www.eventbriteapi.com/v3/events/1234/",
                        "event_sales_status": {
                          "sales_status": "text",
                          "start_sales_date": {
                            "timezone": "America/Los_Angeles",
                            "utc": "2018-05-12T02:00:00Z",
                            "local": "2018-05-11T19:00:00"
                          }
                        },
                        "checkout_settings": {
                          "created": "2018-01-31T13:00:00Z",
                          "changed": "2018-01-31T13:00:00Z",
                          "country_code": "",
                          "currency_code": "",
                          "checkout_method": "paypal",
                          "offline_settings": [
                            {
                              "payment_method": "CASH",
                              "instructions": ""
                            }
                          ],
                          "user_instrument_vault_id": ""
                        }
                      },
                      "attendees": [
                        {
                          "id": "12345",
                          "created": "2018-05-12T02:00:00Z",
                          "changed": "2018-05-12T02:00:00Z",
                          "ticket_class_id": "12345",
                          "ticket_class_name": "General Admission",
                          "profile": {
                            "name": "John Smith",
                            "email": "jhon.smith@example.com",
                            "first_name": "John",
                            "last_name": "Smith",
                            "prefix": "Mr.",
                            "suffix": "Sr",
                            "age": 33,
                            "job_title": "Software Enginner",
                            "company": "Eventbrite",
                            "website": "https://mysite.com",
                            "blog": "https://mysite.com",
                            "gender": "male",
                            "birth_date": "1984-12-06",
                            "cell_phone": "555 555-1234",
                            "work_phone": "555 555-1234",
                            "addresses": {
                              "home": {
                                "address_1": null,
                                "address_2": null,
                                "city": null,
                                "region": null,
                                "postal_code": null,
                                "country": null,
                                "latitude": null,
                                "longitude": null,
                                "localized_address_display": "",
                                "localized_area_display": "",
                                "localized_multi_line_address_display": []
                              },
                              "ship": {
                                "address_1": null,
                                "address_2": null,
                                "city": null,
                                "region": null,
                                "postal_code": null,
                                "country": null,
                                "latitude": null,
                                "longitude": null,
                                "localized_address_display": "",
                                "localized_area_display": "",
                                "localized_multi_line_address_display": []
                              },
                              "work": {
                                "address_1": null,
                                "address_2": null,
                                "city": null,
                                "region": null,
                                "postal_code": null,
                                "country": null,
                                "latitude": null,
                                "longitude": null,
                                "localized_address_display": "",
                                "localized_area_display": "",
                                "localized_multi_line_address_display": []
                              },
                              "bill": {
                                "address_1": null,
                                "address_2": null,
                                "city": null,
                                "region": null,
                                "postal_code": null,
                                "country": null,
                                "latitude": null,
                                "longitude": null,
                                "localized_address_display": "",
                                "localized_area_display": "",
                                "localized_multi_line_address_display": []
                              }
                            }
                          },
                          "questions": [
                            {
                              "id": "20090892",
                              "label": "What's your question?",
                              "type": "text",
                              "required": false
                            }
                          ],
                          "answers": [
                            {
                              "question_id": "20090892",
                              "attendee_id": "1009831492",
                              "question": "What's your question?",
                              "type": "text",
                              "answer": "This is my answer"
                            }
                          ],
                          "barcodes": [
                            {
                              "barcode": "1234093511009831492001",
                              "status": "unused",
                              "created": "2018-08-18T22:24:03Z",
                              "changed": "2018-08-18T22:24:03Z",
                              "checkin_type": 0,
                              "is_printed": false
                            }
                          ],
                          "team": {
                            "id": "12345",
                            "name": "Great Team!",
                            "date_joined": "2018-05-12T02:00:00Z",
                            "event_id": "12345"
                          },
                          "affiliate": "affiliate_code",
                          "checked_in": false,
                          "cancelled": false,
                          "refunded": false,
                          "costs": {
                            "base_price": {
                              "currency": "USD",
                              "value": 432,
                              "major_value": "4.32",
                              "display": "4.32 USD"
                            },
                            "gross": {
                              "currency": "USD",
                              "value": 432,
                              "major_value": "4.32",
                              "display": "4.32 USD"
                            },
                            "eventbrite_fee": {
                              "currency": "USD",
                              "value": 432,
                              "major_value": "4.32",
                              "display": "4.32 USD"
                            },
                            "payment_fee": {
                              "currency": "USD",
                              "value": 432,
                              "major_value": "4.32",
                              "display": "4.32 USD"
                            },
                            "tax": {
                              "currency": "USD",
                              "value": 432,
                              "major_value": "4.32",
                              "display": "4.32 USD"
                            }
                          },
                          "status": "",
                          "event_id": "12345",
                          "event": {
                            "id": "12345",
                            "name": {
                              "text": "Some text",
                              "html": "<p>Some text</p>"
                            },
                            "description": {
                              "text": "Some text",
                              "html": "<p>Some text</p>"
                            },
                            "start": {
                              "timezone": "America/Los_Angeles",
                              "utc": "2018-05-12T02:00:00Z",
                              "local": "2018-05-11T19:00:00"
                            },
                            "end": {
                              "timezone": "America/Los_Angeles",
                              "utc": "2018-05-12T02:00:00Z",
                              "local": "2018-05-11T19:00:00"
                            },
                            "url": "https://www.eventbrite.com/e/45263283700",
                            "vanity_url": "https://testevent.eventbrite.com",
                            "created": "2017-02-19T20:28:14Z",
                            "changed": "2017-02-19T20:28:14Z",
                            "published": "2017-02-19T20:28:14Z",
                            "status": "live",
                            "currency": "USD",
                            "online_event": false,
                            "organization_id": "",
                            "organizer_id": "",
                            "organizer": {
                              "name": "",
                              "description": {
                                "text": "Some text",
                                "html": "<p>Some text</p>"
                              },
                              "long_description": {
                                "text": "Some text",
                                "html": "<p>Some text</p>"
                              },
                              "logo_id": null,
                              "logo": {
                                "id": "12345",
                                "url": "https://image.com",
                                "crop_mask": {
                                  "top_left": {
                                    "y": 15,
                                    "x": 15
                                  },
                                  "width": 15,
                                  "height": 15
                                },
                                "original": {
                                  "url": "https://image.com",
                                  "width": 800,
                                  "height": 400
                                },
                                "aspect_ratio": "2",
                                "edge_color": "#6a7c8b",
                                "edge_color_set": true
                              },
                              "resource_uri": "https://www.eventbriteapi.com/v3/organizers/12345/",
                              "id": "12345",
                              "url": "https://www.eventbrite.com/o/12345/",
                              "num_past_events": 5,
                              "num_future_events": 1,
                              "twitter": "@abc",
                              "facebook": "abc"
                            },
                            "logo_id": null,
                            "logo": {
                              "id": "12345",
                              "url": "https://image.com",
                              "crop_mask": {
                                "top_left": {
                                  "y": 15,
                                  "x": 15
                                },
                                "width": 15,
                                "height": 15
                              },
                              "original": {
                                "url": "https://image.com",
                                "width": 800,
                                "height": 400
                              },
                              "aspect_ratio": "2",
                              "edge_color": "#6a7c8b",
                              "edge_color_set": true
                            },
                            "venue": {
                              "name": "Great Venue",
                              "age_restriction": null,
                              "capacity": 100,
                              "address": {
                                "address_1": null,
                                "address_2": null,
                                "city": null,
                                "region": null,
                                "postal_code": null,
                                "country": null,
                                "latitude": null,
                                "longitude": null
                              },
                              "resource_uri": "https://www.eventbriteapi.com/v3/venues/3003/",
                              "id": "3003",
                              "latitude": "49.28497549999999",
                              "longitude": "123.11082529999999"
                            },
                            "format_id": null,
                            "format": {
                              "id": "2",
                              "name": "Seminar or Talk",
                              "name_localized": "Seminar or Talk",
                              "short_name": "Seminar",
                              "short_name_localized": "Seminar",
                              "resource_uri": "https://www.eventbriteapi.com/v3/formats/2/"
                            },
                            "category": {
                              "id": "103",
                              "resource_uri": "https://www.eventbriteapi.com/v3/categories/103/",
                              "name": "Music",
                              "name_localized": "Music",
                              "short_name": "Music",
                              "short_name_localized": "Music",
                              "subcategories": [
                                {
                                  "id": "3003",
                                  "resource_uri": "https://www.eventbriteapi.com/v3/subcategories/3003/",
                                  "name": "Classical",
                                  "parent_category": {}
                                }
                              ]
                            },
                            "subcategory": {
                              "id": "3003",
                              "resource_uri": "https://www.eventbriteapi.com/v3/subcategories/3003/",
                              "name": "Classical",
                              "parent_category": {
                                "id": "103",
                                "resource_uri": "https://www.eventbriteapi.com/v3/categories/103/",
                                "name": "Music",
                                "name_localized": "Music",
                                "short_name": "Music",
                                "short_name_localized": "Music",
                                "subcategories": [
                                  {}
                                ]
                              }
                            },
                            "music_properties": {
                              "age_restriction": null,
                              "presented_by": null,
                              "door_time": "2019-05-12T-19:00:00Z"
                            },
                            "bookmark_info": {
                              "bookmarked": false
                            },
                            "ticket_availability": {
                              "has_available_tickets": false,
                              "minimum_ticket_price": {
                                "currency": "USD",
                                "value": 432,
                                "major_value": "4.32",
                                "display": "4.32 USD"
                              },
                              "maximum_ticket_price": {
                                "currency": "USD",
                                "value": 432,
                                "major_value": "4.32",
                                "display": "4.32 USD"
                              },
                              "is_sold_out": true,
                              "start_sales_date": {
                                "timezone": "America/Los_Angeles",
                                "utc": "2018-05-12T02:00:00Z",
                                "local": "2018-05-11T19:00:00"
                              },
                              "waitlist_available": false
                            },
                            "listed": false,
                            "shareable": false,
                            "invite_only": false,
                            "show_remaining": true,
                            "password": "12345",
                            "capacity": 100,
                            "capacity_is_custom": true,
                            "tx_time_limit": "12345",
                            "hide_start_date": true,
                            "hide_end_date": true,
                            "locale": "en_US",
                            "is_locked": true,
                            "privacy_setting": "unlocked",
                            "is_externally_ticketed": false,
                            "external_ticketing": {
                              "external_url": "",
                              "ticketing_provider_name": "",
                              "is_free": false,
                              "minimum_ticket_price": {
                                "currency": "USD",
                                "value": 432,
                                "major_value": "4.32",
                                "display": "4.32 USD"
                              },
                              "maximum_ticket_price": {
                                "currency": "USD",
                                "value": 432,
                                "major_value": "4.32",
                                "display": "4.32 USD"
                              },
                              "sales_start": "",
                              "sales_end": ""
                            },
                            "is_series": true,
                            "is_series_parent": true,
                            "series_id": "56321",
                            "is_reserved_seating": true,
                            "show_pick_a_seat": true,
                            "show_seatmap_thumbnail": true,
                            "show_colors_in_seatmap_thumbnail": true,
                            "is_free": true,
                            "source": "api",
                            "version": "null",
                            "resource_uri": "https://www.eventbriteapi.com/v3/events/1234/",
                            "event_sales_status": {
                              "sales_status": "text",
                              "start_sales_date": {
                                "timezone": "America/Los_Angeles",
                                "utc": "2018-05-12T02:00:00Z",
                                "local": "2018-05-11T19:00:00"
                              }
                            },
                            "checkout_settings": {
                              "created": "2018-01-31T13:00:00Z",
                              "changed": "2018-01-31T13:00:00Z",
                              "country_code": "",
                              "currency_code": "",
                              "checkout_method": "paypal",
                              "offline_settings": [
                                {
                                  "payment_method": "CASH",
                                  "instructions": ""
                                }
                              ],
                              "user_instrument_vault_id": ""
                            }
                          },
                          "order_id": "12345",
                          "guestlist_id": null,
                          "invited_by": null,
                          "assigned_unit": {
                            "unit_id": "18-1:2",
                            "description": "Some description",
                            "location_image": {
                              "url": "",
                              "x": 0,
                              "y": 0
                            },
                            "labels": [
                              "100",
                              "A",
                              "23"
                            ],
                            "titles": [
                              "Area",
                              "Row",
                              "Seat"
                            ]
                          },
                          "delivery_method": "electronic",
                          "variant_id": null,
                          "contact_list_preferences": {
                            "has_contact_list": true,
                            "has_opted_in": true,
                            "_type": "attendee_contact_list_preferences"
                          },
                          "resource_uri": ""
                        }
                      ],
                      "time_remaining": 100,
                      "resource_uri": "https://www.eventbriteapi.com/v3/orders/1234/",
                      "status": "placed",
                      "ticket_buyer_settings": {
                        "confirmation_message": {
                          "text": "Some text",
                          "html": "<p>Some text</p>"
                        },
                        "instructions": {
                          "text": "Some text",
                          "html": "<p>Some text</p>"
                        },
                        "event_id": "3003",
                        "refund_request_enabled": false,
                        "ticket_class_confirmation_settings": [
                          {
                            "ticket_class_id": "1023",
                            "event_id": "3003",
                            "confirmation_message": {
                              "text": "Some text",
                              "html": "<p>Some text</p>"
                            }
                          }
                        ]
                      },
                      "contact_list_preferences": {
                        "has_contact_list": true,
                        "has_opted_in": true,
                        "_type": "order_contact_list_preferences"
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/events/{event_id}/orders/": {
      "get": {
        "tags": [
          "Order"
        ],
        "summary": "List Orders by Event ID",
        "description": "List Orders by Event ID. Returns a paginated response.",
        "operationId": "ListOrdersbyEventID",
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "description": "Event ID.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "12345"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Filter Event's Order by status.",
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/status14"
            }
          },
          {
            "name": "changed_since",
            "in": "query",
            "description": "Orders changed on or after this time.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "last_item_seen",
            "in": "query",
            "description": "Orders changed on or after this time, and with an ID larger than last item seen.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "only_emails",
            "in": "query",
            "description": "Orders placed by this email address.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "exclude_emails",
            "in": "query",
            "description": "Orders placed by this email address are not included in return.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "refund_request_statuses",
            "in": "query",
            "description": "Only Orders with specified refund request status are  included in return.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/refund_request_statuses"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Expand query results",
            "style": "form",
            "schema": {
              "enum": [
                "attendee"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOrdersbyEventIDresponse"
                },
                "example": {
                  "pagination": {
                    "object_count": 1,
                    "page_number": 1,
                    "page_size": 1,
                    "page_count": 1,
                    "continuation": "dGhpcyBpcyBhIGNvbnRpbnVhdGlvbiB0b2tlbg",
                    "has_more_items": false
                  },
                  "orders": [
                    {
                      "id": "442719216",
                      "created": "2018-05-12T02:00:00Z",
                      "changed": "2018-05-12T02:00:00Z",
                      "name": "John Smith",
                      "first_name": "John",
                      "last_name": "Smith",
                      "email": "john.smith@example.com",
                      "costs": {
                        "base_price": {
                          "currency": "USD",
                          "value": 432,
                          "major_value": "4.32",
                          "display": "4.32 USD"
                        },
                        "display_price": {
                          "currency": "USD",
                          "value": 432,
                          "major_value": "4.32",
                          "display": "4.32 USD"
                        },
                        "display_fee": {
                          "currency": "USD",
                          "value": 432,
                          "major_value": "4.32",
                          "display": "4.32 USD"
                        },
                        "gross": {
                          "currency": "USD",
                          "value": 432,
                          "major_value": "4.32",
                          "display": "4.32 USD"
                        },
                        "eventbrite_fee": {
                          "currency": "USD",
                          "value": 432,
                          "major_value": "4.32",
                          "display": "4.32 USD"
                        },
                        "payment_fee": {
                          "currency": "USD",
                          "value": 432,
                          "major_value": "4.32",
                          "display": "4.32 USD"
                        },
                        "tax": {
                          "currency": "USD",
                          "value": 432,
                          "major_value": "4.32",
                          "display": "4.32 USD"
                        },
                        "display_tax": {
                          "currency": "USD",
                          "value": 432,
                          "major_value": "4.32",
                          "display": "4.32 USD"
                        },
                        "price_before_discount": {
                          "currency": "USD",
                          "value": 432,
                          "major_value": "4.32",
                          "display": "4.32 USD"
                        },
                        "discount_amount": {
                          "currency": "USD",
                          "value": 432,
                          "major_value": "4.32",
                          "display": "4.32 USD"
                        },
                        "discount_type": "coded",
                        "fee_components": [
                          {
                            "intermediate": false,
                            "name": "royalty",
                            "internal_name": "service fee",
                            "group_name": "service fee",
                            "value": 200,
                            "discount": {
                              "amount": {
                                "currency": "USD",
                                "value": 432,
                                "major_value": "4.32",
                                "display": "4.32 USD"
                              },
                              "reason": "TOGGLED_OFF_FEE"
                            },
                            "rule": {
                              "id": "95"
                            },
                            "base": "item.display-includable",
                            "bucket": "fee",
                            "recipient": "event.6018",
                            "payer": "attendee"
                          }
                        ],
                        "tax_components": [
                          {
                            "intermediate": false,
                            "name": "royalty",
                            "internal_name": "service fee",
                            "group_name": "service fee",
                            "value": 200,
                            "discount": {
                              "amount": {
                                "currency": "USD",
                                "value": 432,
                                "major_value": "4.32",
                                "display": "4.32 USD"
                              },
                              "reason": "TOGGLED_OFF_FEE"
                            },
                            "rule": {
                              "id": "95"
                            },
                            "base": "item.display-includable",
                            "bucket": "fee",
                            "recipient": "event.6018",
                            "payer": "attendee"
                          }
                        ],
                        "shipping_components": [
                          {
                            "intermediate": false,
                            "name": "royalty",
                            "internal_name": "service fee",
                            "group_name": "service fee",
                            "value": 200,
                            "discount": {
                              "amount": {
                                "currency": "USD",
                                "value": 432,
                                "major_value": "4.32",
                                "display": "4.32 USD"
                              },
                              "reason": "TOGGLED_OFF_FEE"
                            },
                            "rule": {
                              "id": "95"
                            },
                            "base": "item.display-includable",
                            "bucket": "fee",
                            "recipient": "event.6018",
                            "payer": "attendee"
                          }
                        ],
                        "has_gts_tax": false,
                        "tax_name": "VAT"
                      },
                      "event_id": "17937020110",
                      "event": {
                        "id": "12345",
                        "name": {
                          "text": "Some text",
                          "html": "<p>Some text</p>"
                        },
                        "description": {
                          "text": "Some text",
                          "html": "<p>Some text</p>"
                        },
                        "start": {
                          "timezone": "America/Los_Angeles",
                          "utc": "2018-05-12T02:00:00Z",
                          "local": "2018-05-11T19:00:00"
                        },
                        "end": {
                          "timezone": "America/Los_Angeles",
                          "utc": "2018-05-12T02:00:00Z",
                          "local": "2018-05-11T19:00:00"
                        },
                        "url": "https://www.eventbrite.com/e/45263283700",
                        "vanity_url": "https://testevent.eventbrite.com",
                        "created": "2017-02-19T20:28:14Z",
                        "changed": "2017-02-19T20:28:14Z",
                        "published": "2017-02-19T20:28:14Z",
                        "status": "live",
                        "currency": "USD",
                        "online_event": false,
                        "organization_id": "",
                        "organizer_id": "",
                        "organizer": {
                          "name": "",
                          "description": {
                            "text": "Some text",
                            "html": "<p>Some text</p>"
                          },
                          "long_description": {
                            "text": "Some text",
                            "html": "<p>Some text</p>"
                          },
                          "logo_id": null,
                          "logo": {
                            "id": "12345",
                            "url": "https://image.com",
                            "crop_mask": {
                              "top_left": {
                                "y": 15,
                                "x": 15
                              },
                              "width": 15,
                              "height": 15
                            },
                            "original": {
                              "url": "https://image.com",
                              "width": 800,
                              "height": 400
                            },
                            "aspect_ratio": "2",
                            "edge_color": "#6a7c8b",
                            "edge_color_set": true
                          },
                          "resource_uri": "https://www.eventbriteapi.com/v3/organizers/12345/",
                          "id": "12345",
                          "url": "https://www.eventbrite.com/o/12345/",
                          "num_past_events": 5,
                          "num_future_events": 1,
                          "twitter": "@abc",
                          "facebook": "abc"
                        },
                        "logo_id": null,
                        "logo": {
                          "id": "12345",
                          "url": "https://image.com",
                          "crop_mask": {
                            "top_left": {
                              "y": 15,
                              "x": 15
                            },
                            "width": 15,
                            "height": 15
                          },
                          "original": {
                            "url": "https://image.com",
                            "width": 800,
                            "height": 400
                          },
                          "aspect_ratio": "2",
                          "edge_color": "#6a7c8b",
                          "edge_color_set": true
                        },
                        "venue": {
                          "name": "Great Venue",
                          "age_restriction": null,
                          "capacity": 100,
                          "address": {
                            "address_1": null,
                            "address_2": null,
                            "city": null,
                            "region": null,
                            "postal_code": null,
                            "country": null,
                            "latitude": null,
                            "longitude": null
                          },
                          "resource_uri": "https://www.eventbriteapi.com/v3/venues/3003/",
                          "id": "3003",
                          "latitude": "49.28497549999999",
                          "longitude": "123.11082529999999"
                        },
                        "format_id": null,
                        "format": {
                          "id": "2",
                          "name": "Seminar or Talk",
                          "name_localized": "Seminar or Talk",
                          "short_name": "Seminar",
                          "short_name_localized": "Seminar",
                          "resource_uri": "https://www.eventbriteapi.com/v3/formats/2/"
                        },
                        "category": {
                          "id": "103",
                          "resource_uri": "https://www.eventbriteapi.com/v3/categories/103/",
                          "name": "Music",
                          "name_localized": "Music",
                          "short_name": "Music",
                          "short_name_localized": "Music",
                          "subcategories": [
                            {
                              "id": "3003",
                              "resource_uri": "https://www.eventbriteapi.com/v3/subcategories/3003/",
                              "name": "Classical",
                              "parent_category": {}
                            }
                          ]
                        },
                        "subcategory": {
                          "id": "3003",
                          "resource_uri": "https://www.eventbriteapi.com/v3/subcategories/3003/",
                          "name": "Classical",
                          "parent_category": {
                            "id": "103",
                            "resource_uri": "https://www.eventbriteapi.com/v3/categories/103/",
                            "name": "Music",
                            "name_localized": "Music",
                            "short_name": "Music",
                            "short_name_localized": "Music",
                            "subcategories": [
                              {}
                            ]
                          }
                        },
                        "music_properties": {
                          "age_restriction": null,
                          "presented_by": null,
                          "door_time": "2019-05-12T-19:00:00Z"
                        },
                        "bookmark_info": {
                          "bookmarked": false
                        },
                        "ticket_availability": {
                          "has_available_tickets": false,
                          "minimum_ticket_price": {
                            "currency": "USD",
                            "value": 432,
                            "major_value": "4.32",
                            "display": "4.32 USD"
                          },
                          "maximum_ticket_price": {
                            "currency": "USD",
                            "value": 432,
                            "major_value": "4.32",
                            "display": "4.32 USD"
                          },
                          "is_sold_out": true,
                          "start_sales_date": {
                            "timezone": "America/Los_Angeles",
                            "utc": "2018-05-12T02:00:00Z",
                            "local": "2018-05-11T19:00:00"
                          },
                          "waitlist_available": false
                        },
                        "listed": false,
                        "shareable": false,
                        "invite_only": false,
                        "show_remaining": true,
                        "password": "12345",
                        "capacity": 100,
                        "capacity_is_custom": true,
                        "tx_time_limit": "12345",
                        "hide_start_date": true,
                        "hide_end_date": true,
                        "locale": "en_US",
                        "is_locked": true,
                        "privacy_setting": "unlocked",
                        "is_externally_ticketed": false,
                        "external_ticketing": {
                          "external_url": "",
                          "ticketing_provider_name": "",
                          "is_free": false,
                          "minimum_ticket_price": {
                            "currency": "USD",
                            "value": 432,
                            "major_value": "4.32",
                            "display": "4.32 USD"
                          },
                          "maximum_ticket_price": {
                            "currency": "USD",
                            "value": 432,
                            "major_value": "4.32",
                            "display": "4.32 USD"
                          },
                          "sales_start": "",
                          "sales_end": ""
                        },
                        "is_series": true,
                        "is_series_parent": true,
                        "series_id": "56321",
                        "is_reserved_seating": true,
                        "show_pick_a_seat": true,
                        "show_seatmap_thumbnail": true,
                        "show_colors_in_seatmap_thumbnail": true,
                        "is_free": true,
                        "source": "api",
                        "version": "null",
                        "resource_uri": "https://www.eventbriteapi.com/v3/events/1234/",
                        "event_sales_status": {
                          "sales_status": "text",
                          "start_sales_date": {
                            "timezone": "America/Los_Angeles",
                            "utc": "2018-05-12T02:00:00Z",
                            "local": "2018-05-11T19:00:00"
                          }
                        },
                        "checkout_settings": {
                          "created": "2018-01-31T13:00:00Z",
                          "changed": "2018-01-31T13:00:00Z",
                          "country_code": "",
                          "currency_code": "",
                          "checkout_method": "paypal",
                          "offline_settings": [
                            {
                              "payment_method": "CASH",
                              "instructions": ""
                            }
                          ],
                          "user_instrument_vault_id": ""
                        }
                      },
                      "attendees": [
                        {
                          "id": "12345",
                          "created": "2018-05-12T02:00:00Z",
                          "changed": "2018-05-12T02:00:00Z",
                          "ticket_class_id": "12345",
                          "ticket_class_name": "General Admission",
                          "profile": {
                            "name": "John Smith",
                            "email": "jhon.smith@example.com",
                            "first_name": "John",
                            "last_name": "Smith",
                            "prefix": "Mr.",
                            "suffix": "Sr",
                            "age": 33,
                            "job_title": "Software Enginner",
                            "company": "Eventbrite",
                            "website": "https://mysite.com",
                            "blog": "https://mysite.com",
                            "gender": "male",
                            "birth_date": "1984-12-06",
                            "cell_phone": "555 555-1234",
                            "work_phone": "555 555-1234",
                            "addresses": {
                              "home": {
                                "address_1": null,
                                "address_2": null,
                                "city": null,
                                "region": null,
                                "postal_code": null,
                                "country": null,
                                "latitude": null,
                                "longitude": null,
                                "localized_address_display": "",
                                "localized_area_display": "",
                                "localized_multi_line_address_display": []
                              },
                              "ship": {
                                "address_1": null,
                                "address_2": null,
                                "city": null,
                                "region": null,
                                "postal_code": null,
                                "country": null,
                                "latitude": null,
                                "longitude": null,
                                "localized_address_display": "",
                                "localized_area_display": "",
                                "localized_multi_line_address_display": []
                              },
                              "work": {
                                "address_1": null,
                                "address_2": null,
                                "city": null,
                                "region": null,
                                "postal_code": null,
                                "country": null,
                                "latitude": null,
                                "longitude": null,
                                "localized_address_display": "",
                                "localized_area_display": "",
                                "localized_multi_line_address_display": []
                              },
                              "bill": {
                                "address_1": null,
                                "address_2": null,
                                "city": null,
                                "region": null,
                                "postal_code": null,
                                "country": null,
                                "latitude": null,
                                "longitude": null,
                                "localized_address_display": "",
                                "localized_area_display": "",
                                "localized_multi_line_address_display": []
                              }
                            }
                          },
                          "questions": [
                            {
                              "id": "20090892",
                              "label": "What's your question?",
                              "type": "text",
                              "required": false
                            }
                          ],
                          "answers": [
                            {
                              "question_id": "20090892",
                              "attendee_id": "1009831492",
                              "question": "What's your question?",
                              "type": "text",
                              "answer": "This is my answer"
                            }
                          ],
                          "barcodes": [
                            {
                              "barcode": "1234093511009831492001",
                              "status": "unused",
                              "created": "2018-08-18T22:24:03Z",
                              "changed": "2018-08-18T22:24:03Z",
                              "checkin_type": 0,
                              "is_printed": false
                            }
                          ],
                          "team": {
                            "id": "12345",
                            "name": "Great Team!",
                            "date_joined": "2018-05-12T02:00:00Z",
                            "event_id": "12345"
                          },
                          "affiliate": "affiliate_code",
                          "checked_in": false,
                          "cancelled": false,
                          "refunded": false,
                          "costs": {
                            "base_price": {
                              "currency": "USD",
                              "value": 432,
                              "major_value": "4.32",
                              "display": "4.32 USD"
                            },
                            "gross": {
                              "currency": "USD",
                              "value": 432,
                              "major_value": "4.32",
                              "display": "4.32 USD"
                            },
                            "eventbrite_fee": {
                              "currency": "USD",
                              "value": 432,
                              "major_value": "4.32",
                              "display": "4.32 USD"
                            },
                            "payment_fee": {
                              "currency": "USD",
                              "value": 432,
                              "major_value": "4.32",
                              "display": "4.32 USD"
                            },
                            "tax": {
                              "currency": "USD",
                              "value": 432,
                              "major_value": "4.32",
                              "display": "4.32 USD"
                            }
                          },
                          "status": "",
                          "event_id": "12345",
                          "event": {
                            "id": "12345",
                            "name": {
                              "text": "Some text",
                              "html": "<p>Some text</p>"
                            },
                            "description": {
                              "text": "Some text",
                              "html": "<p>Some text</p>"
                            },
                            "start": {
                              "timezone": "America/Los_Angeles",
                              "utc": "2018-05-12T02:00:00Z",
                              "local": "2018-05-11T19:00:00"
                            },
                            "end": {
                              "timezone": "America/Los_Angeles",
                              "utc": "2018-05-12T02:00:00Z",
                              "local": "2018-05-11T19:00:00"
                            },
                            "url": "https://www.eventbrite.com/e/45263283700",
                            "vanity_url": "https://testevent.eventbrite.com",
                            "created": "2017-02-19T20:28:14Z",
                            "changed": "2017-02-19T20:28:14Z",
                            "published": "2017-02-19T20:28:14Z",
                            "status": "live",
                            "currency": "USD",
                            "online_event": false,
                            "organization_id": "",
                            "organizer_id": "",
                            "organizer": {
                              "name": "",
                              "description": {
                                "text": "Some text",
                                "html": "<p>Some text</p>"
                              },
                              "long_description": {
                                "text": "Some text",
                                "html": "<p>Some text</p>"
                              },
                              "logo_id": null,
                              "logo": {
                                "id": "12345",
                                "url": "https://image.com",
                                "crop_mask": {
                                  "top_left": {
                                    "y": 15,
                                    "x": 15
                                  },
                                  "width": 15,
                                  "height": 15
                                },
                                "original": {
                                  "url": "https://image.com",
                                  "width": 800,
                                  "height": 400
                                },
                                "aspect_ratio": "2",
                                "edge_color": "#6a7c8b",
                                "edge_color_set": true
                              },
                              "resource_uri": "https://www.eventbriteapi.com/v3/organizers/12345/",
                              "id": "12345",
                              "url": "https://www.eventbrite.com/o/12345/",
                              "num_past_events": 5,
                              "num_future_events": 1,
                              "twitter": "@abc",
                              "facebook": "abc"
                            },
                            "logo_id": null,
                            "logo": {
                              "id": "12345",
                              "url": "https://image.com",
                              "crop_mask": {
                                "top_left": {
                                  "y": 15,
                                  "x": 15
                                },
                                "width": 15,
                                "height": 15
                              },
                              "original": {
                                "url": "https://image.com",
                                "width": 800,
                                "height": 400
                              },
                              "aspect_ratio": "2",
                              "edge_color": "#6a7c8b",
                              "edge_color_set": true
                            },
                            "venue": {
                              "name": "Great Venue",
                              "age_restriction": null,
                              "capacity": 100,
                              "address": {
                                "address_1": null,
                                "address_2": null,
                                "city": null,
                                "region": null,
                                "postal_code": null,
                                "country": null,
                                "latitude": null,
                                "longitude": null
                              },
                              "resource_uri": "https://www.eventbriteapi.com/v3/venues/3003/",
                              "id": "3003",
                              "latitude": "49.28497549999999",
                              "longitude": "123.11082529999999"
                            },
                            "format_id": null,
                            "format": {
                              "id": "2",
                              "name": "Seminar or Talk",
                              "name_localized": "Seminar or Talk",
                              "short_name": "Seminar",
                              "short_name_localized": "Seminar",
                              "resource_uri": "https://www.eventbriteapi.com/v3/formats/2/"
                            },
                            "category": {
                              "id": "103",
                              "resource_uri": "https://www.eventbriteapi.com/v3/categories/103/",
                              "name": "Music",
                              "name_localized": "Music",
                              "short_name": "Music",
                              "short_name_localized": "Music",
                              "subcategories": [
                                {
                                  "id": "3003",
                                  "resource_uri": "https://www.eventbriteapi.com/v3/subcategories/3003/",
                                  "name": "Classical",
                                  "parent_category": {}
                                }
                              ]
                            },
                            "subcategory": {
                              "id": "3003",
                              "resource_uri": "https://www.eventbriteapi.com/v3/subcategories/3003/",
                              "name": "Classical",
                              "parent_category": {
                                "id": "103",
                                "resource_uri": "https://www.eventbriteapi.com/v3/categories/103/",
                                "name": "Music",
                                "name_localized": "Music",
                                "short_name": "Music",
                                "short_name_localized": "Music",
                                "subcategories": [
                                  {}
                                ]
                              }
                            },
                            "music_properties": {
                              "age_restriction": null,
                              "presented_by": null,
                              "door_time": "2019-05-12T-19:00:00Z"
                            },
                            "bookmark_info": {
                              "bookmarked": false
                            },
                            "ticket_availability": {
                              "has_available_tickets": false,
                              "minimum_ticket_price": {
                                "currency": "USD",
                                "value": 432,
                                "major_value": "4.32",
                                "display": "4.32 USD"
                              },
                              "maximum_ticket_price": {
                                "currency": "USD",
                                "value": 432,
                                "major_value": "4.32",
                                "display": "4.32 USD"
                              },
                              "is_sold_out": true,
                              "start_sales_date": {
                                "timezone": "America/Los_Angeles",
                                "utc": "2018-05-12T02:00:00Z",
                                "local": "2018-05-11T19:00:00"
                              },
                              "waitlist_available": false
                            },
                            "listed": false,
                            "shareable": false,
                            "invite_only": false,
                            "show_remaining": true,
                            "password": "12345",
                            "capacity": 100,
                            "capacity_is_custom": true,
                            "tx_time_limit": "12345",
                            "hide_start_date": true,
                            "hide_end_date": true,
                            "locale": "en_US",
                            "is_locked": true,
                            "privacy_setting": "unlocked",
                            "is_externally_ticketed": false,
                            "external_ticketing": {
                              "external_url": "",
                              "ticketing_provider_name": "",
                              "is_free": false,
                              "minimum_ticket_price": {
                                "currency": "USD",
                                "value": 432,
                                "major_value": "4.32",
                                "display": "4.32 USD"
                              },
                              "maximum_ticket_price": {
                                "currency": "USD",
                                "value": 432,
                                "major_value": "4.32",
                                "display": "4.32 USD"
                              },
                              "sales_start": "",
                              "sales_end": ""
                            },
                            "is_series": true,
                            "is_series_parent": true,
                            "series_id": "56321",
                            "is_reserved_seating": true,
                            "show_pick_a_seat": true,
                            "show_seatmap_thumbnail": true,
                            "show_colors_in_seatmap_thumbnail": true,
                            "is_free": true,
                            "source": "api",
                            "version": "null",
                            "resource_uri": "https://www.eventbriteapi.com/v3/events/1234/",
                            "event_sales_status": {
                              "sales_status": "text",
                              "start_sales_date": {
                                "timezone": "America/Los_Angeles",
                                "utc": "2018-05-12T02:00:00Z",
                                "local": "2018-05-11T19:00:00"
                              }
                            },
                            "checkout_settings": {
                              "created": "2018-01-31T13:00:00Z",
                              "changed": "2018-01-31T13:00:00Z",
                              "country_code": "",
                              "currency_code": "",
                              "checkout_method": "paypal",
                              "offline_settings": [
                                {
                                  "payment_method": "CASH",
                                  "instructions": ""
                                }
                              ],
                              "user_instrument_vault_id": ""
                            }
                          },
                          "order_id": "12345",
                          "guestlist_id": null,
                          "invited_by": null,
                          "assigned_unit": {
                            "unit_id": "18-1:2",
                            "description": "Some description",
                            "location_image": {
                              "url": "",
                              "x": 0,
                              "y": 0
                            },
                            "labels": [
                              "100",
                              "A",
                              "23"
                            ],
                            "titles": [
                              "Area",
                              "Row",
                              "Seat"
                            ]
                          },
                          "delivery_method": "electronic",
                          "variant_id": null,
                          "contact_list_preferences": {
                            "has_contact_list": true,
                            "has_opted_in": true,
                            "_type": "attendee_contact_list_preferences"
                          },
                          "resource_uri": ""
                        }
                      ],
                      "time_remaining": 100,
                      "resource_uri": "https://www.eventbriteapi.com/v3/orders/1234/",
                      "status": "placed",
                      "ticket_buyer_settings": {
                        "confirmation_message": {
                          "text": "Some text",
                          "html": "<p>Some text</p>"
                        },
                        "instructions": {
                          "text": "Some text",
                          "html": "<p>Some text</p>"
                        },
                        "event_id": "3003",
                        "refund_request_enabled": false,
                        "ticket_class_confirmation_settings": [
                          {
                            "ticket_class_id": "1023",
                            "event_id": "3003",
                            "confirmation_message": {
                              "text": "Some text",
                              "html": "<p>Some text</p>"
                            }
                          }
                        ]
                      },
                      "contact_list_preferences": {
                        "has_contact_list": true,
                        "has_opted_in": true,
                        "_type": "order_contact_list_preferences"
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/users/{user_id}/orders/": {
      "get": {
        "tags": [
          "Order"
        ],
        "summary": "List Orders by User ID",
        "description": "List Orders by User ID. Returns a paginated response.",
        "operationId": "ListOrdersbyUserID",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "User ID.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number",
              "format": "double",
              "example": 12345
            }
          },
          {
            "name": "changed_since",
            "in": "query",
            "description": "Order changed on or after this time.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "time_filter",
            "in": "query",
            "description": "Filter the list to only, or all, past or current and future Orders.",
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/time_filter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOrdersbyUserIDresponse"
                },
                "example": {
                  "pagination": {
                    "object_count": 1,
                    "page_number": 1,
                    "page_size": 1,
                    "page_count": 1,
                    "continuation": "dGhpcyBpcyBhIGNvbnRpbnVhdGlvbiB0b2tlbg",
                    "has_more_items": false
                  },
                  "orders": [
                    {
                      "id": "442719216",
                      "created": "2018-05-12T02:00:00Z",
                      "changed": "2018-05-12T02:00:00Z",
                      "name": "John Smith",
                      "first_name": "John",
                      "last_name": "Smith",
                      "email": "john.smith@example.com",
                      "costs": {
                        "base_price": {
                          "currency": "USD",
                          "value": 432,
                          "major_value": "4.32",
                          "display": "4.32 USD"
                        },
                        "display_price": {
                          "currency": "USD",
                          "value": 432,
                          "major_value": "4.32",
                          "display": "4.32 USD"
                        },
                        "display_fee": {
                          "currency": "USD",
                          "value": 432,
                          "major_value": "4.32",
                          "display": "4.32 USD"
                        },
                        "gross": {
                          "currency": "USD",
                          "value": 432,
                          "major_value": "4.32",
                          "display": "4.32 USD"
                        },
                        "eventbrite_fee": {
                          "currency": "USD",
                          "value": 432,
                          "major_value": "4.32",
                          "display": "4.32 USD"
                        },
                        "payment_fee": {
                          "currency": "USD",
                          "value": 432,
                          "major_value": "4.32",
                          "display": "4.32 USD"
                        },
                        "tax": {
                          "currency": "USD",
                          "value": 432,
                          "major_value": "4.32",
                          "display": "4.32 USD"
                        },
                        "display_tax": {
                          "currency": "USD",
                          "value": 432,
                          "major_value": "4.32",
                          "display": "4.32 USD"
                        },
                        "price_before_discount": {
                          "currency": "USD",
                          "value": 432,
                          "major_value": "4.32",
                          "display": "4.32 USD"
                        },
                        "discount_amount": {
                          "currency": "USD",
                          "value": 432,
                          "major_value": "4.32",
                          "display": "4.32 USD"
                        },
                        "discount_type": "coded",
                        "fee_components": [
                          {
                            "intermediate": false,
                            "name": "royalty",
                            "internal_name": "service fee",
                            "group_name": "service fee",
                            "value": 200,
                            "discount": {
                              "amount": {
                                "currency": "USD",
                                "value": 432,
                                "major_value": "4.32",
                                "display": "4.32 USD"
                              },
                              "reason": "TOGGLED_OFF_FEE"
                            },
                            "rule": {
                              "id": "95"
                            },
                            "base": "item.display-includable",
                            "bucket": "fee",
                            "recipient": "event.6018",
                            "payer": "attendee"
                          }
                        ],
                        "tax_components": [
                          {
                            "intermediate": false,
                            "name": "royalty",
                            "internal_name": "service fee",
                            "group_name": "service fee",
                            "value": 200,
                            "discount": {
                              "amount": {
                                "currency": "USD",
                                "value": 432,
                                "major_value": "4.32",
                                "display": "4.32 USD"
                              },
                              "reason": "TOGGLED_OFF_FEE"
                            },
                            "rule": {
                              "id": "95"
                            },
                            "base": "item.display-includable",
                            "bucket": "fee",
                            "recipient": "event.6018",
                            "payer": "attendee"
                          }
                        ],
                        "shipping_components": [
                          {
                            "intermediate": false,
                            "name": "royalty",
                            "internal_name": "service fee",
                            "group_name": "service fee",
                            "value": 200,
                            "discount": {
                              "amount": {
                                "currency": "USD",
                                "value": 432,
                                "major_value": "4.32",
                                "display": "4.32 USD"
                              },
                              "reason": "TOGGLED_OFF_FEE"
                            },
                            "rule": {
                              "id": "95"
                            },
                            "base": "item.display-includable",
                            "bucket": "fee",
                            "recipient": "event.6018",
                            "payer": "attendee"
                          }
                        ],
                        "has_gts_tax": false,
                        "tax_name": "VAT"
                      },
                      "event_id": "17937020110",
                      "event": {
                        "id": "12345",
                        "name": {
                          "text": "Some text",
                          "html": "<p>Some text</p>"
                        },
                        "description": {
                          "text": "Some text",
                          "html": "<p>Some text</p>"
                        },
                        "start": {
                          "timezone": "America/Los_Angeles",
                          "utc": "2018-05-12T02:00:00Z",
                          "local": "2018-05-11T19:00:00"
                        },
                        "end": {
                          "timezone": "America/Los_Angeles",
                          "utc": "2018-05-12T02:00:00Z",
                          "local": "2018-05-11T19:00:00"
                        },
                        "url": "https://www.eventbrite.com/e/45263283700",
                        "vanity_url": "https://testevent.eventbrite.com",
                        "created": "2017-02-19T20:28:14Z",
                        "changed": "2017-02-19T20:28:14Z",
                        "published": "2017-02-19T20:28:14Z",
                        "status": "live",
                        "currency": "USD",
                        "online_event": false,
                        "organization_id": "",
                        "organizer_id": "",
                        "organizer": {
                          "name": "",
                          "description": {
                            "text": "Some text",
                            "html": "<p>Some text</p>"
                          },
                          "long_description": {
                            "text": "Some text",
                            "html": "<p>Some text</p>"
                          },
                          "logo_id": null,
                          "logo": {
                            "id": "12345",
                            "url": "https://image.com",
                            "crop_mask": {
                              "top_left": {
                                "y": 15,
                                "x": 15
                              },
                              "width": 15,
                              "height": 15
                            },
                            "original": {
                              "url": "https://image.com",
                              "width": 800,
                              "height": 400
                            },
                            "aspect_ratio": "2",
                            "edge_color": "#6a7c8b",
                            "edge_color_set": true
                          },
                          "resource_uri": "https://www.eventbriteapi.com/v3/organizers/12345/",
                          "id": "12345",
                          "url": "https://www.eventbrite.com/o/12345/",
                          "num_past_events": 5,
                          "num_future_events": 1,
                          "twitter": "@abc",
                          "facebook": "abc"
                        },
                        "logo_id": null,
                        "logo": {
                          "id": "12345",
                          "url": "https://image.com",
                          "crop_mask": {
                            "top_left": {
                              "y": 15,
                              "x": 15
                            },
                            "width": 15,
                            "height": 15
                          },
                          "original": {
                            "url": "https://image.com",
                            "width": 800,
                            "height": 400
                          },
                          "aspect_ratio": "2",
                          "edge_color": "#6a7c8b",
                          "edge_color_set": true
                        },
                        "venue": {
                          "name": "Great Venue",
                          "age_restriction": null,
                          "capacity": 100,
                          "address": {
                            "address_1": null,
                            "address_2": null,
                            "city": null,
                            "region": null,
                            "postal_code": null,
                            "country": null,
                            "latitude": null,
                            "longitude": null
                          },
                          "resource_uri": "https://www.eventbriteapi.com/v3/venues/3003/",
                          "id": "3003",
                          "latitude": "49.28497549999999",
                          "longitude": "123.11082529999999"
                        },
                        "format_id": null,
                        "format": {
                          "id": "2",
                          "name": "Seminar or Talk",
                          "name_localized": "Seminar or Talk",
                          "short_name": "Seminar",
                          "short_name_localized": "Seminar",
                          "resource_uri": "https://www.eventbriteapi.com/v3/formats/2/"
                        },
                        "category": {
                          "id": "103",
                          "resource_uri": "https://www.eventbriteapi.com/v3/categories/103/",
                          "name": "Music",
                          "name_localized": "Music",
                          "short_name": "Music",
                          "short_name_localized": "Music",
                          "subcategories": [
                            {
                              "id": "3003",
                              "resource_uri": "https://www.eventbriteapi.com/v3/subcategories/3003/",
                              "name": "Classical",
                              "parent_category": {}
                            }
                          ]
                        },
                        "subcategory": {
                          "id": "3003",
                          "resource_uri": "https://www.eventbriteapi.com/v3/subcategories/3003/",
                          "name": "Classical",
                          "parent_category": {
                            "id": "103",
                            "resource_uri": "https://www.eventbriteapi.com/v3/categories/103/",
                            "name": "Music",
                            "name_localized": "Music",
                            "short_name": "Music",
                            "short_name_localized": "Music",
                            "subcategories": [
                              {}
                            ]
                          }
                        },
                        "music_properties": {
                          "age_restriction": null,
                          "presented_by": null,
                          "door_time": "2019-05-12T-19:00:00Z"
                        },
                        "bookmark_info": {
                          "bookmarked": false
                        },
                        "ticket_availability": {
                          "has_available_tickets": false,
                          "minimum_ticket_price": {
                            "currency": "USD",
                            "value": 432,
                            "major_value": "4.32",
                            "display": "4.32 USD"
                          },
                          "maximum_ticket_price": {
                            "currency": "USD",
                            "value": 432,
                            "major_value": "4.32",
                            "display": "4.32 USD"
                          },
                          "is_sold_out": true,
                          "start_sales_date": {
                            "timezone": "America/Los_Angeles",
                            "utc": "2018-05-12T02:00:00Z",
                            "local": "2018-05-11T19:00:00"
                          },
                          "waitlist_available": false
                        },
                        "listed": false,
                        "shareable": false,
                        "invite_only": false,
                        "show_remaining": true,
                        "password": "12345",
                        "capacity": 100,
                        "capacity_is_custom": true,
                        "tx_time_limit": "12345",
                        "hide_start_date": true,
                        "hide_end_date": true,
                        "locale": "en_US",
                        "is_locked": true,
                        "privacy_setting": "unlocked",
                        "is_externally_ticketed": false,
                        "external_ticketing": {
                          "external_url": "",
                          "ticketing_provider_name": "",
                          "is_free": false,
                          "minimum_ticket_price": {
                            "currency": "USD",
                            "value": 432,
                            "major_value": "4.32",
                            "display": "4.32 USD"
                          },
                          "maximum_ticket_price": {
                            "currency": "USD",
                            "value": 432,
                            "major_value": "4.32",
                            "display": "4.32 USD"
                          },
                          "sales_start": "",
                          "sales_end": ""
                        },
                        "is_series": true,
                        "is_series_parent": true,
                        "series_id": "56321",
                        "is_reserved_seating": true,
                        "show_pick_a_seat": true,
                        "show_seatmap_thumbnail": true,
                        "show_colors_in_seatmap_thumbnail": true,
                        "is_free": true,
                        "source": "api",
                        "version": "null",
                        "resource_uri": "https://www.eventbriteapi.com/v3/events/1234/",
                        "event_sales_status": {
                          "sales_status": "text",
                          "start_sales_date": {
                            "timezone": "America/Los_Angeles",
                            "utc": "2018-05-12T02:00:00Z",
                            "local": "2018-05-11T19:00:00"
                          }
                        },
                        "checkout_settings": {
                          "created": "2018-01-31T13:00:00Z",
                          "changed": "2018-01-31T13:00:00Z",
                          "country_code": "",
                          "currency_code": "",
                          "checkout_method": "paypal",
                          "offline_settings": [
                            {
                              "payment_method": "CASH",
                              "instructions": ""
                            }
                          ],
                          "user_instrument_vault_id": ""
                        }
                      },
                      "attendees": [
                        {
                          "id": "12345",
                          "created": "2018-05-12T02:00:00Z",
                          "changed": "2018-05-12T02:00:00Z",
                          "ticket_class_id": "12345",
                          "ticket_class_name": "General Admission",
                          "profile": {
                            "name": "John Smith",
                            "email": "jhon.smith@example.com",
                            "first_name": "John",
                            "last_name": "Smith",
                            "prefix": "Mr.",
                            "suffix": "Sr",
                            "age": 33,
                            "job_title": "Software Enginner",
                            "company": "Eventbrite",
                            "website": "https://mysite.com",
                            "blog": "https://mysite.com",
                            "gender": "male",
                            "birth_date": "1984-12-06",
                            "cell_phone": "555 555-1234",
                            "work_phone": "555 555-1234",
                            "addresses": {
                              "home": {
                                "address_1": null,
                                "address_2": null,
                                "city": null,
                                "region": null,
                                "postal_code": null,
                                "country": null,
                                "latitude": null,
                                "longitude": null,
                                "localized_address_display": "",
                                "localized_area_display": "",
                                "localized_multi_line_address_display": []
                              },
                              "ship": {
                                "address_1": null,
                                "address_2": null,
                                "city": null,
                                "region": null,
                                "postal_code": null,
                                "country": null,
                                "latitude": null,
                                "longitude": null,
                                "localized_address_display": "",
                                "localized_area_display": "",
                                "localized_multi_line_address_display": []
                              },
                              "work": {
                                "address_1": null,
                                "address_2": null,
                                "city": null,
                                "region": null,
                                "postal_code": null,
                                "country": null,
                                "latitude": null,
                                "longitude": null,
                                "localized_address_display": "",
                                "localized_area_display": "",
                                "localized_multi_line_address_display": []
                              },
                              "bill": {
                                "address_1": null,
                                "address_2": null,
                                "city": null,
                                "region": null,
                                "postal_code": null,
                                "country": null,
                                "latitude": null,
                                "longitude": null,
                                "localized_address_display": "",
                                "localized_area_display": "",
                                "localized_multi_line_address_display": []
                              }
                            }
                          },
                          "questions": [
                            {
                              "id": "20090892",
                              "label": "What's your question?",
                              "type": "text",
                              "required": false
                            }
                          ],
                          "answers": [
                            {
                              "question_id": "20090892",
                              "attendee_id": "1009831492",
                              "question": "What's your question?",
                              "type": "text",
                              "answer": "This is my answer"
                            }
                          ],
                          "barcodes": [
                            {
                              "barcode": "1234093511009831492001",
                              "status": "unused",
                              "created": "2018-08-18T22:24:03Z",
                              "changed": "2018-08-18T22:24:03Z",
                              "checkin_type": 0,
                              "is_printed": false
                            }
                          ],
                          "team": {
                            "id": "12345",
                            "name": "Great Team!",
                            "date_joined": "2018-05-12T02:00:00Z",
                            "event_id": "12345"
                          },
                          "affiliate": "affiliate_code",
                          "checked_in": false,
                          "cancelled": false,
                          "refunded": false,
                          "costs": {
                            "base_price": {
                              "currency": "USD",
                              "value": 432,
                              "major_value": "4.32",
                              "display": "4.32 USD"
                            },
                            "gross": {
                              "currency": "USD",
                              "value": 432,
                              "major_value": "4.32",
                              "display": "4.32 USD"
                            },
                            "eventbrite_fee": {
                              "currency": "USD",
                              "value": 432,
                              "major_value": "4.32",
                              "display": "4.32 USD"
                            },
                            "payment_fee": {
                              "currency": "USD",
                              "value": 432,
                              "major_value": "4.32",
                              "display": "4.32 USD"
                            },
                            "tax": {
                              "currency": "USD",
                              "value": 432,
                              "major_value": "4.32",
                              "display": "4.32 USD"
                            }
                          },
                          "status": "",
                          "event_id": "12345",
                          "event": {
                            "id": "12345",
                            "name": {
                              "text": "Some text",
                              "html": "<p>Some text</p>"
                            },
                            "description": {
                              "text": "Some text",
                              "html": "<p>Some text</p>"
                            },
                            "start": {
                              "timezone": "America/Los_Angeles",
                              "utc": "2018-05-12T02:00:00Z",
                              "local": "2018-05-11T19:00:00"
                            },
                            "end": {
                              "timezone": "America/Los_Angeles",
                              "utc": "2018-05-12T02:00:00Z",
                              "local": "2018-05-11T19:00:00"
                            },
                            "url": "https://www.eventbrite.com/e/45263283700",
                            "vanity_url": "https://testevent.eventbrite.com",
                            "created": "2017-02-19T20:28:14Z",
                            "changed": "2017-02-19T20:28:14Z",
                            "published": "2017-02-19T20:28:14Z",
                            "status": "live",
                            "currency": "USD",
                            "online_event": false,
                            "organization_id": "",
                            "organizer_id": "",
                            "organizer": {
                              "name": "",
                              "description": {
                                "text": "Some text",
                                "html": "<p>Some text</p>"
                              },
                              "long_description": {
                                "text": "Some text",
                                "html": "<p>Some text</p>"
                              },
                              "logo_id": null,
                              "logo": {
                                "id": "12345",
                                "url": "https://image.com",
                                "crop_mask": {
                                  "top_left": {
                                    "y": 15,
                                    "x": 15
                                  },
                                  "width": 15,
                                  "height": 15
                                },
                                "original": {
                                  "url": "https://image.com",
                                  "width": 800,
                                  "height": 400
                                },
                                "aspect_ratio": "2",
                                "edge_color": "#6a7c8b",
                                "edge_color_set": true
                              },
                              "resource_uri": "https://www.eventbriteapi.com/v3/organizers/12345/",
                              "id": "12345",
                              "url": "https://www.eventbrite.com/o/12345/",
                              "num_past_events": 5,
                              "num_future_events": 1,
                              "twitter": "@abc",
                              "facebook": "abc"
                            },
                            "logo_id": null,
                            "logo": {
                              "id": "12345",
                              "url": "https://image.com",
                              "crop_mask": {
                                "top_left": {
                                  "y": 15,
                                  "x": 15
                                },
                                "width": 15,
                                "height": 15
                              },
                              "original": {
                                "url": "https://image.com",
                                "width": 800,
                                "height": 400
                              },
                              "aspect_ratio": "2",
                              "edge_color": "#6a7c8b",
                              "edge_color_set": true
                            },
                            "venue": {
                              "name": "Great Venue",
                              "age_restriction": null,
                              "capacity": 100,
                              "address": {
                                "address_1": null,
                                "address_2": null,
                                "city": null,
                                "region": null,
                                "postal_code": null,
                                "country": null,
                                "latitude": null,
                                "longitude": null
                              },
                              "resource_uri": "https://www.eventbriteapi.com/v3/venues/3003/",
                              "id": "3003",
                              "latitude": "49.28497549999999",
                              "longitude": "123.11082529999999"
                            },
                            "format_id": null,
                            "format": {
                              "id": "2",
                              "name": "Seminar or Talk",
                              "name_localized": "Seminar or Talk",
                              "short_name": "Seminar",
                              "short_name_localized": "Seminar",
                              "resource_uri": "https://www.eventbriteapi.com/v3/formats/2/"
                            },
                            "category": {
                              "id": "103",
                              "resource_uri": "https://www.eventbriteapi.com/v3/categories/103/",
                              "name": "Music",
                              "name_localized": "Music",
                              "short_name": "Music",
                              "short_name_localized": "Music",
                              "subcategories": [
                                {
                                  "id": "3003",
                                  "resource_uri": "https://www.eventbriteapi.com/v3/subcategories/3003/",
                                  "name": "Classical",
                                  "parent_category": {}
                                }
                              ]
                            },
                            "subcategory": {
                              "id": "3003",
                              "resource_uri": "https://www.eventbriteapi.com/v3/subcategories/3003/",
                              "name": "Classical",
                              "parent_category": {
                                "id": "103",
                                "resource_uri": "https://www.eventbriteapi.com/v3/categories/103/",
                                "name": "Music",
                                "name_localized": "Music",
                                "short_name": "Music",
                                "short_name_localized": "Music",
                                "subcategories": [
                                  {}
                                ]
                              }
                            },
                            "music_properties": {
                              "age_restriction": null,
                              "presented_by": null,
                              "door_time": "2019-05-12T-19:00:00Z"
                            },
                            "bookmark_info": {
                              "bookmarked": false
                            },
                            "ticket_availability": {
                              "has_available_tickets": false,
                              "minimum_ticket_price": {
                                "currency": "USD",
                                "value": 432,
                                "major_value": "4.32",
                                "display": "4.32 USD"
                              },
                              "maximum_ticket_price": {
                                "currency": "USD",
                                "value": 432,
                                "major_value": "4.32",
                                "display": "4.32 USD"
                              },
                              "is_sold_out": true,
                              "start_sales_date": {
                                "timezone": "America/Los_Angeles",
                                "utc": "2018-05-12T02:00:00Z",
                                "local": "2018-05-11T19:00:00"
                              },
                              "waitlist_available": false
                            },
                            "listed": false,
                            "shareable": false,
                            "invite_only": false,
                            "show_remaining": true,
                            "password": "12345",
                            "capacity": 100,
                            "capacity_is_custom": true,
                            "tx_time_limit": "12345",
                            "hide_start_date": true,
                            "hide_end_date": true,
                            "locale": "en_US",
                            "is_locked": true,
                            "privacy_setting": "unlocked",
                            "is_externally_ticketed": false,
                            "external_ticketing": {
                              "external_url": "",
                              "ticketing_provider_name": "",
                              "is_free": false,
                              "minimum_ticket_price": {
                                "currency": "USD",
                                "value": 432,
                                "major_value": "4.32",
                                "display": "4.32 USD"
                              },
                              "maximum_ticket_price": {
                                "currency": "USD",
                                "value": 432,
                                "major_value": "4.32",
                                "display": "4.32 USD"
                              },
                              "sales_start": "",
                              "sales_end": ""
                            },
                            "is_series": true,
                            "is_series_parent": true,
                            "series_id": "56321",
                            "is_reserved_seating": true,
                            "show_pick_a_seat": true,
                            "show_seatmap_thumbnail": true,
                            "show_colors_in_seatmap_thumbnail": true,
                            "is_free": true,
                            "source": "api",
                            "version": "null",
                            "resource_uri": "https://www.eventbriteapi.com/v3/events/1234/",
                            "event_sales_status": {
                              "sales_status": "text",
                              "start_sales_date": {
                                "timezone": "America/Los_Angeles",
                                "utc": "2018-05-12T02:00:00Z",
                                "local": "2018-05-11T19:00:00"
                              }
                            },
                            "checkout_settings": {
                              "created": "2018-01-31T13:00:00Z",
                              "changed": "2018-01-31T13:00:00Z",
                              "country_code": "",
                              "currency_code": "",
                              "checkout_method": "paypal",
                              "offline_settings": [
                                {
                                  "payment_method": "CASH",
                                  "instructions": ""
                                }
                              ],
                              "user_instrument_vault_id": ""
                            }
                          },
                          "order_id": "12345",
                          "guestlist_id": null,
                          "invited_by": null,
                          "assigned_unit": {
                            "unit_id": "18-1:2",
                            "description": "Some description",
                            "location_image": {
                              "url": "",
                              "x": 0,
                              "y": 0
                            },
                            "labels": [
                              "100",
                              "A",
                              "23"
                            ],
                            "titles": [
                              "Area",
                              "Row",
                              "Seat"
                            ]
                          },
                          "delivery_method": "electronic",
                          "variant_id": null,
                          "contact_list_preferences": {
                            "has_contact_list": true,
                            "has_opted_in": true,
                            "_type": "attendee_contact_list_preferences"
                          },
                          "resource_uri": ""
                        }
                      ],
                      "time_remaining": 100,
                      "resource_uri": "https://www.eventbriteapi.com/v3/orders/1234/",
                      "status": "placed",
                      "ticket_buyer_settings": {
                        "confirmation_message": {
                          "text": "Some text",
                          "html": "<p>Some text</p>"
                        },
                        "instructions": {
                          "text": "Some text",
                          "html": "<p>Some text</p>"
                        },
                        "event_id": "3003",
                        "refund_request_enabled": false,
                        "ticket_class_confirmation_settings": [
                          {
                            "ticket_class_id": "1023",
                            "event_id": "3003",
                            "confirmation_message": {
                              "text": "Some text",
                              "html": "<p>Some text</p>"
                            }
                          }
                        ]
                      },
                      "contact_list_preferences": {
                        "has_contact_list": true,
                        "has_opted_in": true,
                        "_type": "order_contact_list_preferences"
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/organizations/{organization_id}/members/": {
      "get": {
        "tags": [
          "Organizations Members"
        ],
        "summary": "List Members of an Organization",
        "description": "List an Organization's Members by Organization ID. Returns a paginated response.",
        "operationId": "ListMembersofanOrganization",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "Organization ID.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "12345"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false
      }
    },
    "/organizations/{organization_id}/roles/": {
      "get": {
        "tags": [
          "Organization Roles"
        ],
        "summary": "List Roles by Organization",
        "description": "List an Organization's Roles by Organization ID. Returns a paginated response.",
        "operationId": "ListRolesbyOrganization",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "Organization ID.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "12345"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListRolesbyOrganizationresponse"
                },
                "example": {
                  "pagination": {
                    "continuation": "dGhpcyBpcyBhIGNvbnRpbnVhdGlvbiB0b2tlbg",
                    "has_more_items": false
                  },
                  "roles": [
                    {
                      "id": "12345",
                      "name": "boxoffice",
                      "description": "Boxoffice Management on events",
                      "organization_id": "226753167503",
                      "permissions": [],
                      "immutable": false,
                      "grantable": true,
                      "deletable": true,
                      "permission_type": "user"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/users/me/organizations/": {
      "get": {
        "tags": [
          "Organization"
        ],
        "summary": "List your Organizations",
        "description": "List the Organizations to which you are a Member. Returns a paginated response.",
        "operationId": "ListyourOrganizations",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListyourOrganizationsresponse"
                },
                "example": {
                  "pagination": {
                    "object_count": 1,
                    "page_number": 1,
                    "page_size": 1,
                    "page_count": 1,
                    "continuation": "dGhpcyBpcyBhIGNvbnRpbnVhdGlvbiB0b2tlbg",
                    "has_more_items": false
                  },
                  "organizations": [
                    {
                      "name": "Awesome Org",
                      "vertical": "default",
                      "image_id": "12345",
                      "id": "12345"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/users/{user_id}/organizations/": {
      "get": {
        "tags": [
          "Organization"
        ],
        "summary": "List Organizations by User",
        "description": "List Organizations by User ID. Returns a paginated response.",
        "operationId": "ListOrganizationsbyUser",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "User ID.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "12345"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOrganizationsbyUserresponse"
                },
                "example": {
                  "pagination": {
                    "object_count": 1,
                    "page_number": 1,
                    "page_size": 1,
                    "page_count": 1,
                    "continuation": "dGhpcyBpcyBhIGNvbnRpbnVhdGlvbiB0b2tlbg",
                    "has_more_items": false
                  },
                  "organizations": [
                    {
                      "name": "Awesome Org",
                      "vertical": "default",
                      "image_id": "12345",
                      "id": "12345"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/pricing/calculate_price_for_item/": {
      "post": {
        "tags": [
          "Pricing"
        ],
        "summary": "Calculate Items",
        "description": "Calculates the Fees that Eventbrite would charge for a given price as itâ€™s shown on the ticket authoring flow. This price would be hypothetical, as the pricing calculation would be based on the passed parameters instead of facts as it happens when an order is created.\n\nThis price is a simplified view. The price reported canâ€™t be used to calculate the price of an order. Its used to get fees, taxes and total price depending from scope parameter. The scope can be as one of the members: `organization`, `event`, `ticket_class` or `assortment_plan`.\n\nDepending on the scope type, the scope identifier has different meanings:\nFor scope.type ``organization`` scope.identifier represents an organization id.\nFor scope.type ``event`` scope.identifier represents an event id.\nFor scope.type ``ticket_class`` scope.identifier represents a ticket class id.\nFor scope.type ``assortment_plan`` scope.identifier can take a value of either 'package1' or 'package2'\n\nReturns a `item_pricing` according to the provided base price and scope.",
        "operationId": "CalculateItems",
        "parameters": [],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CalculateItemsrequest"
              },
              "example": {
                "base_price": "USD,1000",
                "country": "US",
                "scope": {
                  "type": "organization",
                  "identifier": "4028"
                },
                "absorb_fees": false,
                "absorb_taxes": false,
                "payment_type": "eventbrite",
                "channel": "web"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CalculateItemsresponse"
                },
                "example": {
                  "item_pricing": {
                    "organizer_share": {
                      "currency": "USD",
                      "value": 432,
                      "major_value": "4.32",
                      "display": "4.32 USD"
                    },
                    "total_fees": {
                      "currency": "USD",
                      "value": 432,
                      "major_value": "4.32",
                      "display": "4.32 USD"
                    },
                    "total_taxes": {
                      "currency": "USD",
                      "value": 432,
                      "major_value": "4.32",
                      "display": "4.32 USD"
                    },
                    "total_price": {
                      "currency": "USD",
                      "value": 432,
                      "major_value": "4.32",
                      "display": "4.32 USD"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CalculateItemsresponse1"
                },
                "example": {
                  "error_description": "",
                  "error_detail": {},
                  "status_code": 0,
                  "error": "PRICING_MODEL_NOT_SUPPORTED"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/pricing/fee_rates": {
      "get": {
        "tags": [
          "Pricing"
        ],
        "summary": "List Pricing",
        "description": "List all available Pricing rates. Returns a paginated response.",
        "operationId": "ListPricing",
        "parameters": [
          {
            "name": "country",
            "in": "query",
            "description": "Filter Fee Rates by country ISO 3166 alpha-2 code.",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "US"
            }
          },
          {
            "name": "currency",
            "in": "query",
            "description": "Filter Fee Rates by currency ISO 4217 3-character code.",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "USD"
            }
          },
          {
            "name": "plan",
            "in": "query",
            "description": "Filter Fee Rates by Assortment package name. If itâ€™s not provided, or the value is â€˜anyâ€™, all the existing variants will be returned.",
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/plan1"
            }
          },
          {
            "name": "payment_type",
            "in": "query",
            "description": "Filter Fee Rates by the payment type. If itâ€™s not provided, or the value is â€˜anyâ€™, all the existing variants will be returned.",
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/payment_type4"
            }
          },
          {
            "name": "channel",
            "in": "query",
            "description": "Filter Fee Rates by the sales channel. If itâ€™s not provided, or the value is â€˜anyâ€™, all the existing variants will be returned.",
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/channel3"
            }
          },
          {
            "name": "item_type",
            "in": "query",
            "description": "Filter Fee Rates by the item type. If itâ€™s not provided, or the value is â€˜anyâ€™, all the existing variants will be returned.",
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/item_type2"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/json"
              ],
              "type": "string",
              "example": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListPricingresponse"
                },
                "example": {
                  "pagination": {
                    "object_count": 1,
                    "page_number": 1,
                    "page_size": 1,
                    "page_count": 1,
                    "continuation": "dGhpcyBpcyBhIGNvbnRpbnVhdGlvbiB0b2tlbg",
                    "has_more_items": false
                  },
                  "fee_rates": [
                    {
                      "fixed": {
                        "currency": "USD",
                        "value": 432,
                        "major_value": "4.32",
                        "display": "4.32 USD"
                      },
                      "maximum": {
                        "currency": "USD",
                        "value": 432,
                        "major_value": "4.32",
                        "display": "4.32 USD"
                      },
                      "minimum": {
                        "currency": "USD",
                        "value": 432,
                        "major_value": "4.32",
                        "display": "4.32 USD"
                      },
                      "country": "US",
                      "currency": "USD",
                      "fee_name: payment_fee": "payment_fee",
                      "plan": "package1",
                      "payment_type": "any",
                      "channel": "any",
                      "item_type": "any",
                      "percent": "2.50"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListPricingresponse1"
                },
                "example": {
                  "error_description": "",
                  "error_detail": {},
                  "status_code": 0,
                  "error": "INVALID_CURRENCY_COUNTRY_COMBINATION"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/events/{event_id}/canned_questions/": {
      "get": {
        "tags": [
          "Questions"
        ],
        "summary": "List Default Questions by Event",
        "description": "List default Questions by Event ID. Returns a paginated response.",
        "operationId": "ListDefaultQuestionsbyEvent",
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "description": "Event ID.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "12345"
            }
          },
          {
            "name": "include_all",
            "in": "query",
            "description": "Return the whole list of canned included or not",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean",
              "example": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListDefaultQuestionsbyEventresponse"
                },
                "example": {
                  "pagination": {
                    "object_count": 1,
                    "page_number": 1,
                    "page_size": 1,
                    "page_count": 1,
                    "continuation": "dGhpcyBpcyBhIGNvbnRpbnVhdGlvbiB0b2tlbg",
                    "has_more_items": false
                  },
                  "questions": [
                    {
                      "resource_uri": "https://www.eventbriteapi.com/v3/events/12345/canned_questions/job_title/",
                      "id": "job_title",
                      "question": {
                        "text": "Job Title",
                        "html": "Job Title"
                      },
                      "type": "text",
                      "required": false,
                      "include": true,
                      "editable": true,
                      "choices": [],
                      "ticket_classes": [],
                      "group_id": "work_information",
                      "group_display_header": "Work Info",
                      "respondent": "ticket_buyer",
                      "default_value": null
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "Questions"
        ],
        "summary": "Create a Default Question for an Event",
        "description": "Create a default Question for an Event. Returns the result as a `question` array.",
        "operationId": "CreateaDefaultQuestionforanEvent",
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "description": "Event ID.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "12345"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateaDefaultQuestionforanEventrequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CannedQuestion"
                },
                "example": {
                  "resource_uri": "https://www.eventbriteapi.com/v3/events/12345/canned_questions/job_title/",
                  "id": "job_title",
                  "question": {
                    "text": "Job Title",
                    "html": "Job Title"
                  },
                  "type": "text",
                  "required": false,
                  "include": true,
                  "editable": true,
                  "choices": [],
                  "ticket_classes": [],
                  "group_id": "work_information",
                  "group_display_header": "Work Info",
                  "respondent": "ticket_buyer",
                  "default_value": null
                }
              }
            }
          },
          "400": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateaDefaultQuestionforanEventresponse"
                },
                "example": {
                  "error_description": "",
                  "error_detail": {},
                  "status_code": 0,
                  "error": "INSUFFICIENT_PACKAGE"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/event/{event_id}/canned_questions/{question_id}": {
      "get": {
        "tags": [
          "Questions"
        ],
        "summary": "Get Default Question by Id",
        "description": "Retrieve a Canned Question by Event and Question ID.",
        "operationId": "GetDefaultQuestionbyId",
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "description": "Event ID.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "12345"
            }
          },
          {
            "name": "question_id",
            "in": "path",
            "description": "Canned Question ID.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "email"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDefaultQuestionbyIdresponse"
                },
                "example": {
                  "question": {
                    "resource_uri": "https://www.eventbriteapi.com/v3/events/12345/canned_questions/job_title/",
                    "id": "job_title",
                    "question": {
                      "text": "Job Title",
                      "html": "Job Title"
                    },
                    "type": "text",
                    "required": false,
                    "include": true,
                    "editable": true,
                    "choices": [],
                    "ticket_classes": [],
                    "group_id": "work_information",
                    "group_display_header": "Work Info",
                    "respondent": "ticket_buyer",
                    "default_value": null
                  }
                }
              }
            }
          },
          "404": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDefaultQuestionbyIdresponse1"
                },
                "example": {
                  "status_code": 404,
                  "error_description": "The event you requested does not exist",
                  "error": "NOT_FOUND"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "Questions"
        ],
        "summary": "Update Default Question by Id",
        "description": "Modify details of the canned question of the event",
        "operationId": "UpdateDefaultQuestionbyId",
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "description": "Event ID.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "12345"
            }
          },
          {
            "name": "question_id",
            "in": "path",
            "description": "Canned Question ID.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "email"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDefaultQuestionbyIdrequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateDefaultQuestionbyIdresponse"
                },
                "example": {
                  "question": {
                    "resource_uri": "https://www.eventbriteapi.com/v3/events/12345/canned_questions/job_title/",
                    "id": "job_title",
                    "question": {
                      "text": "Job Title",
                      "html": "Job Title"
                    },
                    "type": "text",
                    "required": false,
                    "include": true,
                    "editable": true,
                    "choices": [],
                    "ticket_classes": [],
                    "group_id": "work_information",
                    "group_display_header": "Work Info",
                    "respondent": "ticket_buyer",
                    "default_value": null
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateDefaultQuestionbyIdresponse1"
                },
                "example": {
                  "status_code": 400,
                  "error_description": "There are errors with your arguments: question.require3d",
                  "error": "ARGUMENTS_ERROR"
                }
              }
            }
          },
          "404": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateDefaultQuestionbyIdresponse3"
                },
                "example": {
                  "status_code": 404,
                  "error_description": "The event you requested does not exist",
                  "error": "NOT_FOUND"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "Questions"
        ],
        "summary": "Delete Default Question by Id",
        "description": "Deactivate a canned question for the event",
        "operationId": "DeleteDefaultQuestionbyId",
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "description": "Event ID.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "12345"
            }
          },
          {
            "name": "question_id",
            "in": "path",
            "description": "Canned Question ID.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "email"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteDefaultQuestionbyIdresponse"
                },
                "example": {
                  "deleted": true
                }
              }
            }
          },
          "404": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteDefaultQuestionbyIdresponse1"
                },
                "example": {
                  "status_code": 404,
                  "error_description": "The event you requested does not exist",
                  "error": "NOT_FOUND"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/events/{event_id}/questions/": {
      "get": {
        "tags": [
          "Questions"
        ],
        "summary": "List Custom Questions by Event",
        "description": "List custom Questions by Event ID. Returns a paginated response, with a `question` array.",
        "operationId": "ListCustomQuestionsbyEvent",
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "description": "Event ID.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "12345"
            }
          },
          {
            "name": "as_owner",
            "in": "query",
            "description": "Return private Events and fields.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListCustomQuestionsbyEventresponse"
                },
                "example": {
                  "pagination": {
                    "object_count": 1,
                    "page_number": 1,
                    "page_size": 1,
                    "page_count": 1,
                    "continuation": "dGhpcyBpcyBhIGNvbnRpbnVhdGlvbiB0b2tlbg",
                    "has_more_items": false
                  },
                  "questions": [
                    {
                      "resource_uri": "https://www.eventbriteapi.com/v3/events/12345/questions/123456789/",
                      "id": "123456789",
                      "question": {
                        "text": "Custom Question Title",
                        "html": "Question Title"
                      },
                      "required": true,
                      "display_answer_on_order": true,
                      "type": "checkbox",
                      "respondent": "ticket_buyer",
                      "choices": [
                        {
                          "answer": {
                            "text": "Choice 1",
                            "html": "Choice 1"
                          },
                          "quantity_available": 250,
                          "quantity_sold": 5,
                          "low_stock": 250,
                          "id": "123456",
                          "subquestion_ids": []
                        }
                      ],
                      "ticket_classes": [
                        {
                          "id": "1234",
                          "name": "Ticket class name"
                        }
                      ],
                      "parent_id": "24038723",
                      "parent_choice_id": "66915463",
                      "sorting": 5
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListCustomQuestionsbyEventresponse1"
                },
                "example": {
                  "status_code": 404,
                  "error_description": "The event you requested does not exist",
                  "error": "NOT_FOUND"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "Questions"
        ],
        "summary": "Create a Custom question for an Event",
        "description": "Create a custom Question for an Event. Returns the result as a `question` array.",
        "operationId": "CreateaCustomquestionforanEvent",
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "description": "Event ID.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "12345"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateaCustomquestionforanEventrequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseQuestion"
                },
                "example": {
                  "resource_uri": "https://www.eventbriteapi.com/v3/events/12345/questions/123456789/",
                  "id": "123456789",
                  "question": {
                    "text": "Custom Question Title",
                    "html": "Question Title"
                  },
                  "required": true,
                  "display_answer_on_order": true,
                  "type": "checkbox",
                  "respondent": "ticket_buyer",
                  "choices": [
                    {
                      "answer": {
                        "text": "Choice 1",
                        "html": "Choice 1"
                      },
                      "quantity_available": 250,
                      "quantity_sold": 5,
                      "low_stock": 250,
                      "id": "123456",
                      "subquestion_ids": []
                    }
                  ],
                  "ticket_classes": [
                    {
                      "id": "1234",
                      "name": "Ticket class name"
                    }
                  ],
                  "parent_id": "24038723",
                  "parent_choice_id": "66915463",
                  "sorting": 5
                }
              }
            }
          },
          "400": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateaCustomquestionforanEventresponse"
                },
                "example": {
                  "error_description": "",
                  "error_detail": {},
                  "status_code": 0,
                  "error": "INSUFFICIENT_PACKAGE"
                }
              }
            }
          },
          "403": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateaCustomquestionforanEventresponse2"
                },
                "example": {
                  "status_code": 403,
                  "error_description": "You do not have permission to access the resource you requested.",
                  "error": "NOT_AUTHORIZED"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/events/{event_id}/questions/{question_id}/": {
      "get": {
        "tags": [
          "Questions"
        ],
        "summary": "Get Custom Question by Id",
        "description": "Retrieve a Custom Question by Event and Question ID.",
        "operationId": "GetCustomQuestionbyId",
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "description": "Event ID.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "12345"
            }
          },
          {
            "name": "question_id",
            "in": "path",
            "description": "Custom Question ID.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "642123456"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseQuestion"
                },
                "example": {
                  "resource_uri": "https://www.eventbriteapi.com/v3/events/12345/questions/123456789/",
                  "id": "123456789",
                  "question": {
                    "text": "Custom Question Title",
                    "html": "Question Title"
                  },
                  "required": true,
                  "display_answer_on_order": true,
                  "type": "checkbox",
                  "respondent": "ticket_buyer",
                  "choices": [
                    {
                      "answer": {
                        "text": "Choice 1",
                        "html": "Choice 1"
                      },
                      "quantity_available": 250,
                      "quantity_sold": 5,
                      "low_stock": 250,
                      "id": "123456",
                      "subquestion_ids": []
                    }
                  ],
                  "ticket_classes": [
                    {
                      "id": "1234",
                      "name": "Ticket class name"
                    }
                  ],
                  "parent_id": "24038723",
                  "parent_choice_id": "66915463",
                  "sorting": 5
                }
              }
            }
          },
          "404": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCustomQuestionbyIdresponse"
                },
                "example": {
                  "status_code": 404,
                  "error_description": "The question you requested does not exist",
                  "error": "NOT_FOUND"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "Questions"
        ],
        "summary": "Delete a Custom Question for an Event",
        "description": "Delete a custom Question by Event and Question ID.",
        "operationId": "DeleteaCustomQuestionforanEvent",
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "description": "Event ID.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "12345"
            }
          },
          {
            "name": "question_id",
            "in": "path",
            "description": "Custom Question ID.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "642123456"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteaCustomQuestionforanEventresponse"
                },
                "example": {
                  "deleted": true
                }
              }
            }
          },
          "404": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteaCustomQuestionforanEventresponse1"
                },
                "example": {
                  "status_code": 404,
                  "error_description": "The question you requested does not exist",
                  "error": "NOT_FOUND"
                }
              }
            }
          },
          "403": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteaCustomQuestionforanEventresponse1"
                },
                "example": {
                  "status_code": 403,
                  "error_description": "You do not have permission to access the resource you requested.",
                  "error": "NOT_AUTHORIZED"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/reports/sales/": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Retrieve a Sales Report",
        "description": "Retrieve a sales Report by Event ID or Event status.",
        "operationId": "RetrieveaSalesReport",
        "parameters": [
          {
            "name": "event_ids",
            "in": "query",
            "description": "Event ID.",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "event_status",
            "in": "query",
            "description": "Event status.",
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/event_status"
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "description": "Event start date.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "description": "Event end date.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter_by (string, optional) - Further filter report by Ticket ID and currency. {â€œticket_idsâ€",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "[1234, 5678], â€œcurrenciesâ€: [â€œUSDâ€],...}"
            }
          },
          {
            "name": "group_by",
            "in": "query",
            "description": "Group response by specified parameter.",
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/group_by"
            }
          },
          {
            "name": "period",
            "in": "query",
            "description": "Time period in units of the selected `date_facet`. For example, if date_facet=hour, then period=3 returns 3 hours worth of data from the current time in the Event timezone.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "date_facet",
            "in": "query",
            "description": "Date period. Day is the default choice. Monthly aggregation is represented by the first of the month. Weekly aggregation is represented by the ending Sunday of the week, where a week is defined as Monday-Sunday.",
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/date_facet"
            }
          },
          {
            "name": "timezone",
            "in": "query",
            "description": "Timezone. If unspecified, by default the value is the timezone of the first Event.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "America/Los_Angeles"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportResponseSales"
                },
                "example": {
                  "timezone": "America/Los_Angeles",
                  "event_ids": [
                    "12345"
                  ],
                  "data": [
                    {
                      "date": "2017-02-19T20:28:14Z",
                      "topics": "``",
                      "date_localized": "2017-02-19T20:28:14Z",
                      "totals": {
                        "currency": "USD",
                        "gross": 0.0,
                        "net": 0.0,
                        "quantity": 1,
                        "fees": 0.0,
                        "royalty": 0.0
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetrieveaSalesReportresponse"
                },
                "example": {
                  "error_description": "",
                  "error_detail": {},
                  "status_code": 0,
                  "error": "ARGUMENTS_ERROR"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/reports/attendees/": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Retrieve a Attendee Report",
        "description": "Retrieve an Attendee Report by Event ID or Event status.",
        "operationId": "RetrieveaAttendeeReport",
        "parameters": [
          {
            "name": "event_ids",
            "in": "query",
            "description": "Event ID.",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "event_status",
            "in": "query",
            "description": "Event status.",
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/event_status"
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "description": "Start date.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "description": "End date.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter_by (string, optional) - Further filter report by Ticket ID and currency.{â€œticket_idsâ€",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "[1234, 5678], â€œcurrenciesâ€: [â€œUSDâ€],...}"
            }
          },
          {
            "name": "group_by",
            "in": "query",
            "description": "Group response by specified parameter.",
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/group_by"
            }
          },
          {
            "name": "period",
            "in": "query",
            "description": "Time period in units of the selected `date_facet`. For example, if date_facet=hour, then period=3 returns 3 hours worth of data from the current time in the Event timezone.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "date_facet",
            "in": "query",
            "description": "Date period. Day is the default choice. Monthly aggregation is represented by the first of the month. Weekly aggregation is represented by the ending Sunday of the week, where a week is defined as Monday-Sunday.",
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/date_facet"
            }
          },
          {
            "name": "timezone",
            "in": "query",
            "description": "Timezone. If unspecified, by default the value is the timezone of the first Event.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "America/Los_Angeles"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportResponseAttendees"
                },
                "example": {
                  "timezone": "America/Los_Angeles",
                  "event_ids": [
                    "12345"
                  ],
                  "data": [
                    {
                      "date": "2017-02-19T20:28:14Z",
                      "topics": "``",
                      "date_localized": "2017-02-19T20:28:14Z",
                      "totals": {
                        "num_attendees": 1,
                        "num_orders": 10
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetrieveaAttendeeReportresponse"
                },
                "example": {
                  "error_description": "",
                  "error_detail": {},
                  "status_code": 0,
                  "error": "ARGUMENTS_ERROR"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/organizations/{organization_id}/seatmaps/": {
      "get": {
        "tags": [
          "Seat Map"
        ],
        "summary": "List Seat Maps by Organization",
        "description": "List Seat Maps of an Organization.\n\n>**Warning:** Response is not paginated yet, but will be paginated soon.",
        "operationId": "ListSeatMapsbyOrganization",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "Organization ID.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "12345"
            }
          },
          {
            "name": "venue_id",
            "in": "query",
            "description": "Filter Seat Maps by a venue.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "12345"
            }
          },
          {
            "name": "venue_name_filter",
            "in": "query",
            "description": "Filter Seat Maps by sub-string match venue name.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListSeatMapsbyOrganizationresponse"
                },
                "example": {
                  "seatmaps": [
                    {
                      "name": "Tier 1",
                      "event_id": "5678",
                      "venue_id": "5678",
                      "capacity": 1,
                      "thumbnail_url": null
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/events/{event_id}/seatmaps/": {
      "post": {
        "tags": [
          "Seat Map"
        ],
        "summary": "Create Seat Map For Event",
        "description": "Create a Seat Map for a new reserved seating event by copying an existing seat map.\nEvent must be a new reserved seating.  Once a seat map is already created for the event,\nthis endpoint will return error.   [List Seat Maps by Organization](#list_seat_maps_for_organization)\ncan be used to find source seat maps and their IDs.",
        "operationId": "CreateSeatMapForEvent",
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "description": "Event Id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "1"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSeatMapForEventrequest"
              },
              "example": {
                "source_seatmap_id": "E12345"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SeatMap"
                },
                "example": {
                  "name": "Tier 1",
                  "event_id": "5678",
                  "venue_id": "5678",
                  "capacity": 1,
                  "thumbnail_url": null
                }
              }
            }
          },
          "403": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateSeatMapForEventresponse"
                },
                "example": {
                  "error_description": "",
                  "error_detail": {},
                  "status_code": 0,
                  "error": "NOT_AUTHORIZED"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/events/{id}/structured_content/": {
      "get": {
        "tags": [
          "Structured Content"
        ],
        "summary": "Retrieve Latest Published Version of Structured Content by Event Id",
        "description": "Retrieve a paginated response of structured content for the given event `id`. This will retrieve the latest\n`published` version of the structured content. Therefore you must publish a version of the content before\nusing this endpoint - aka send in `publish=true` with current set of modules to [Set Structured Content](#set-structured-content-by-event-id-and-version) endpoint.\nIt will default to getting the structured content of the event listing page if no purpose is provided.",
        "operationId": "RetrieveLatestPublishedVersionofStructuredContentbyEventId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Event Id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "1234"
            }
          },
          {
            "name": "purpose",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "listing"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StructuredContentPage"
                },
                "example": {
                  "access_type": "private",
                  "modules": [
                    {
                      "id": "",
                      "data": {
                        "body": {
                          "alignment": "left",
                          "text": ""
                        }
                      },
                      "layout": "image_left",
                      "timed_display": {
                        "absolute_start_utc": "",
                        "absolute_end_utc": "",
                        "relative_start (number) - Minutes to which a module is relatively shown. Either absolute_start_utc/absolute_end_utc OR relative_start/relative_end should be provided": "",
                        "relative_end (number) - Minutes to which a module is relatively hidden. Optional - if relative_end is provided, then relative_start must be provided with it.": ""
                      },
                      "resource_uris": {},
                      "semantic_purpose": "",
                      "type": "text"
                    },
                    {
                      "id": "",
                      "data": {
                        "image": {
                          "image_id": "",
                          "display_size": "small",
                          "corner_style": "rounded",
                          "alt": ""
                        },
                        "caption": {
                          "body": {
                            "alignment": "left",
                            "text": ""
                          }
                        },
                        "id": ""
                      },
                      "layout": "image_left",
                      "timed_display": {
                        "absolute_start_utc": "",
                        "absolute_end_utc": "",
                        "relative_start (number) - Minutes to which a module is relatively shown. Either absolute_start_utc/absolute_end_utc OR relative_start/relative_end should be provided": "",
                        "relative_end (number) - Minutes to which a module is relatively hidden. Optional - if relative_end is provided, then relative_start must be provided with it.": ""
                      },
                      "resource_uris": {},
                      "semantic_purpose": "",
                      "type": "image"
                    },
                    {
                      "id": "",
                      "data": {
                        "video": {
                          "display_size": "",
                          "embed_url": "",
                          "thumbnail_url": "",
                          "url": ""
                        },
                        "caption": {
                          "body": {
                            "alignment": "left",
                            "text": ""
                          }
                        }
                      },
                      "layout": "image_left",
                      "timed_display": {
                        "absolute_start_utc": "",
                        "absolute_end_utc": "",
                        "relative_start (number) - Minutes to which a module is relatively shown. Either absolute_start_utc/absolute_end_utc OR relative_start/relative_end should be provided": "",
                        "relative_end (number) - Minutes to which a module is relatively hidden. Optional - if relative_end is provided, then relative_start must be provided with it.": ""
                      },
                      "resource_uris": {},
                      "semantic_purpose": "",
                      "type": "video"
                    }
                  ],
                  "page_version_number": "",
                  "pagination": {
                    "object_count": 1,
                    "page_number": 1,
                    "page_size": 1,
                    "page_count": 1,
                    "continuation": "dGhpcyBpcyBhIGNvbnRpbnVhdGlvbiB0b2tlbg",
                    "has_more_items": false
                  },
                  "purpose": "listing",
                  "resource_uris": {
                    "add_module": "",
                    "preview_module": "",
                    "publish": "",
                    "self": ""
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetrieveLatestPublishedVersionofStructuredContentbyEventIdresponse"
                },
                "example": {
                  "error": "NOT_AUTHORIZED"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/events/{id}/structured_content/edit/": {
      "get": {
        "tags": [
          "Structured Content"
        ],
        "summary": "Retrieve Latest Working Version of Structured Content by Event Id",
        "description": "Retrieve a paginated response of structured content for the given event\n`id`. This will retrieve the latest `working` version of the\nstructured content - this means latest version that is either published or unpublished. It will default to getting the\nstructured content of the event listing page if no purpose is provided.",
        "operationId": "RetrieveLatestWorkingVersionofStructuredContentbyEventId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Event Id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "1234"
            }
          },
          {
            "name": "purpose",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "listing"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StructuredContentPage"
                },
                "example": {
                  "access_type": "private",
                  "modules": [
                    {
                      "id": "",
                      "data": {
                        "body": {
                          "alignment": "left",
                          "text": ""
                        }
                      },
                      "layout": "image_left",
                      "timed_display": {
                        "absolute_start_utc": "",
                        "absolute_end_utc": "",
                        "relative_start (number) - Minutes to which a module is relatively shown. Either absolute_start_utc/absolute_end_utc OR relative_start/relative_end should be provided": "",
                        "relative_end (number) - Minutes to which a module is relatively hidden. Optional - if relative_end is provided, then relative_start must be provided with it.": ""
                      },
                      "resource_uris": {},
                      "semantic_purpose": "",
                      "type": "text"
                    },
                    {
                      "id": "",
                      "data": {
                        "image": {
                          "image_id": "",
                          "display_size": "small",
                          "corner_style": "rounded",
                          "alt": ""
                        },
                        "caption": {
                          "body": {
                            "alignment": "left",
                            "text": ""
                          }
                        },
                        "id": ""
                      },
                      "layout": "image_left",
                      "timed_display": {
                        "absolute_start_utc": "",
                        "absolute_end_utc": "",
                        "relative_start (number) - Minutes to which a module is relatively shown. Either absolute_start_utc/absolute_end_utc OR relative_start/relative_end should be provided": "",
                        "relative_end (number) - Minutes to which a module is relatively hidden. Optional - if relative_end is provided, then relative_start must be provided with it.": ""
                      },
                      "resource_uris": {},
                      "semantic_purpose": "",
                      "type": "image"
                    },
                    {
                      "id": "",
                      "data": {
                        "video": {
                          "display_size": "",
                          "embed_url": "",
                          "thumbnail_url": "",
                          "url": ""
                        },
                        "caption": {
                          "body": {
                            "alignment": "left",
                            "text": ""
                          }
                        }
                      },
                      "layout": "image_left",
                      "timed_display": {
                        "absolute_start_utc": "",
                        "absolute_end_utc": "",
                        "relative_start (number) - Minutes to which a module is relatively shown. Either absolute_start_utc/absolute_end_utc OR relative_start/relative_end should be provided": "",
                        "relative_end (number) - Minutes to which a module is relatively hidden. Optional - if relative_end is provided, then relative_start must be provided with it.": ""
                      },
                      "resource_uris": {},
                      "semantic_purpose": "",
                      "type": "video"
                    }
                  ],
                  "page_version_number": "",
                  "pagination": {
                    "object_count": 1,
                    "page_number": 1,
                    "page_size": 1,
                    "page_count": 1,
                    "continuation": "dGhpcyBpcyBhIGNvbnRpbnVhdGlvbiB0b2tlbg",
                    "has_more_items": false
                  },
                  "purpose": "listing",
                  "resource_uris": {
                    "add_module": "",
                    "preview_module": "",
                    "publish": "",
                    "self": ""
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetrieveLatestWorkingVersionofStructuredContentbyEventIdresponse"
                },
                "example": {
                  "error": "NOT_AUTHORIZED"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/events/{id}/structured_content/{version}/": {
      "post": {
        "tags": [
          "Structured Content"
        ],
        "summary": "Set Structured Content by Event Id and Version",
        "description": "Add new structured content to the event `id` for a specific\n`version` of structured content.  This endpoint encapsulates both create and update for structured content.\nIt will default to creating/updating the structured content for the listing page if no purpose is provided.\n\nMake sure to send in `publish=true` with current\\* set of modules.  If you do not publish your structured content,\nthen your most updated  structured content will not be visible to public users looking at your event listing page -\nit will only be visible to you.  From a technical perspective, [Get Latest Working Version of Structured Content by Event Id](#get-latest-working-version-of-structured-content-by-event-id) will return your most recent modules (published or\nunpublished), but [Get Latest Published Version of Structured Content by Event Id](#get-latest-publish-version-of-structured-content-by-event-id)\nwill return only the latest structured content that has been published.\n\n\\* If you ONLY send in `publish=true` without the current set of modules, it will not work - modules will return as empty.  Make sure to send in your most current modules AND `publish=true`.",
        "operationId": "SetStructuredContentbyEventIdandVersion",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Event Id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "21321"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "Structured Content Version",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "2"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetStructuredContentbyEventIdandVersionrequest"
              },
              "example": {
                "access_type": "private",
                "modules": [
                  {
                    "data": {
                      "body": {
                        "alignment": "left",
                        "text": ""
                      }
                    },
                    "layout": "image_left",
                    "timed_display": {
                      "absolute_start_utc": "",
                      "absolute_end_utc": "",
                      "relative_start (number) - Minutes to which a module is relatively shown. Either absolute_start_utc/absolute_end_utc OR relative_start/relative_end should be provided": "",
                      "relative_end (number) - Minutes to which a module is relatively hidden. Optional - if relative_end is provided, then relative_start must be provided with it.": ""
                    },
                    "type": "text"
                  },
                  {
                    "data": {
                      "image": {
                        "image_id (string) - the image_id provided by uploading an image through Eventbrite media upload.": ""
                      },
                      "caption": {
                        "body": {
                          "alignment": "left",
                          "text": ""
                        }
                      }
                    },
                    "layout": "image_left",
                    "timed_display": {
                      "absolute_start_utc": "",
                      "absolute_end_utc": "",
                      "relative_start (number) - Minutes to which a module is relatively shown. Either absolute_start_utc/absolute_end_utc OR relative_start/relative_end should be provided": "",
                      "relative_end (number) - Minutes to which a module is relatively hidden. Optional - if relative_end is provided, then relative_start must be provided with it.": ""
                    },
                    "type": "image"
                  },
                  {
                    "data": {
                      "video": {
                        "display_size": "",
                        "url": ""
                      },
                      "caption": {
                        "body": {
                          "alignment": "left",
                          "text": ""
                        }
                      }
                    },
                    "layout": "image_left",
                    "timed_display": {
                      "absolute_start_utc": "",
                      "absolute_end_utc": "",
                      "relative_start (number) - Minutes to which a module is relatively shown. Either absolute_start_utc/absolute_end_utc OR relative_start/relative_end should be provided": "",
                      "relative_end (number) - Minutes to which a module is relatively hidden. Optional - if relative_end is provided, then relative_start must be provided with it.": ""
                    },
                    "type": "video"
                  }
                ],
                "purpose": "listing"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StructuredContentPage"
                },
                "example": {
                  "access_type": "private",
                  "modules": [
                    {
                      "id": "",
                      "data": {
                        "body": {
                          "alignment": "left",
                          "text": ""
                        }
                      },
                      "layout": "image_left",
                      "timed_display": {
                        "absolute_start_utc": "",
                        "absolute_end_utc": "",
                        "relative_start (number) - Minutes to which a module is relatively shown. Either absolute_start_utc/absolute_end_utc OR relative_start/relative_end should be provided": "",
                        "relative_end (number) - Minutes to which a module is relatively hidden. Optional - if relative_end is provided, then relative_start must be provided with it.": ""
                      },
                      "resource_uris": {},
                      "semantic_purpose": "",
                      "type": "text"
                    },
                    {
                      "id": "",
                      "data": {
                        "image": {
                          "image_id": "",
                          "display_size": "small",
                          "corner_style": "rounded",
                          "alt": ""
                        },
                        "caption": {
                          "body": {
                            "alignment": "left",
                            "text": ""
                          }
                        },
                        "id": ""
                      },
                      "layout": "image_left",
                      "timed_display": {
                        "absolute_start_utc": "",
                        "absolute_end_utc": "",
                        "relative_start (number) - Minutes to which a module is relatively shown. Either absolute_start_utc/absolute_end_utc OR relative_start/relative_end should be provided": "",
                        "relative_end (number) - Minutes to which a module is relatively hidden. Optional - if relative_end is provided, then relative_start must be provided with it.": ""
                      },
                      "resource_uris": {},
                      "semantic_purpose": "",
                      "type": "image"
                    },
                    {
                      "id": "",
                      "data": {
                        "video": {
                          "display_size": "",
                          "embed_url": "",
                          "thumbnail_url": "",
                          "url": ""
                        },
                        "caption": {
                          "body": {
                            "alignment": "left",
                            "text": ""
                          }
                        }
                      },
                      "layout": "image_left",
                      "timed_display": {
                        "absolute_start_utc": "",
                        "absolute_end_utc": "",
                        "relative_start (number) - Minutes to which a module is relatively shown. Either absolute_start_utc/absolute_end_utc OR relative_start/relative_end should be provided": "",
                        "relative_end (number) - Minutes to which a module is relatively hidden. Optional - if relative_end is provided, then relative_start must be provided with it.": ""
                      },
                      "resource_uris": {},
                      "semantic_purpose": "",
                      "type": "video"
                    }
                  ],
                  "page_version_number": "",
                  "pagination": {
                    "object_count": 1,
                    "page_number": 1,
                    "page_size": 1,
                    "page_count": 1,
                    "continuation": "dGhpcyBpcyBhIGNvbnRpbnVhdGlvbiB0b2tlbg",
                    "has_more_items": false
                  },
                  "purpose": "listing",
                  "resource_uris": {
                    "add_module": "",
                    "preview_module": "",
                    "publish": "",
                    "self": ""
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SetStructuredContentbyEventIdandVersionresponse"
                },
                "example": {
                  "error": "NOT_AUTHORIZED"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/organizations/{organization_id}/text_overrides/": {
      "get": {
        "tags": [
          "Texts Overrides"
        ],
        "summary": "Retrieve Text Overrides",
        "description": "Retrieve the Text Overrides for the selected locale for an organization, with options to filter by Venue or Event",
        "operationId": "RetrieveTextOverrides",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "Organization Id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "123"
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "The Locale for which you want the strings.",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "en_US"
            }
          },
          {
            "name": "venue_id",
            "in": "query",
            "description": "Venue ID.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "12345"
            }
          },
          {
            "name": "event_id",
            "in": "query",
            "description": "Event ID.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "12345"
            }
          },
          {
            "name": "text_codes",
            "in": "query",
            "description": "List of text codes to retrieve",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/text_codes"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TextOverridesResponseContent"
                },
                "example": {
                  "text_code": "tickets_not_yet_on_sale",
                  "message": "Tickets will be online soon",
                  "default_message": "Sales Ended",
                  "message_type": "default"
                }
              }
            }
          },
          "400": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetrieveTextOverridesresponse"
                },
                "example": {
                  "error_description": "",
                  "error_detail": {},
                  "status_code": 0,
                  "error": "MISSING"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "Texts Overrides"
        ],
        "summary": "Create Text Overrides",
        "description": "Create the Text Overrides for an organization, Venue, or Event.\nMessages will be internationalized using the `locale` parameter if it's specified.\nIn case we don't send the locale we have 2 scenarios:\n\n* If event_id is provided the event's locale will be used\n\n* For other cases default locale will be used.",
        "operationId": "CreateTextOverrides",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "Organization Id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "123"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTextOverridesrequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TextOverridesResponseContent"
                },
                "example": {
                  "text_code": "tickets_not_yet_on_sale",
                  "message": "Tickets will be online soon",
                  "default_message": "Sales Ended",
                  "message_type": "default"
                }
              }
            }
          },
          "400": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateTextOverridesresponse"
                },
                "example": {
                  "error_description": "",
                  "error_detail": {},
                  "status_code": 0,
                  "error": "MISSING"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/events/{event_id}/ticket_buyer_settings/": {
      "get": {
        "tags": [
          "Ticket Buyer Settings"
        ],
        "summary": "Retrieve Ticket Buyer Settings by Event",
        "description": "Retrieve Ticket Buyer Settings by Event ID.\n\nExample:\n\n```json\n{\n    \"confirmation_message\": {\n        \"text\": \"<H1>Confirmation Message</H1>\",\n        \"html\": \"Confirmation Message\"\n    },\n    \"instructions\": {\n        \"text\": \"<H1>Instructions</H1>\",\n        \"html\": \"Instructions\"\n    },\n    \"sales_ended_message\": {\n        \"text\": \"<H1>Sales Ended Message</H1>\",\n        \"html\": \"Sales Ended Message\"\n    },\n     \"survey_info\": {\n        \"text\": \"<b>Filling in this survey is required to attend the event</b>\",\n        \"html\": \"Filling in this survey is required to attend the event\"\n    },\n    \"event_id\": \"43253626762\",\n    \"survey_name\": \"Registration Page Title\",\n    \"refund_request_enabled\": true,\n    \"allow_attendee_update\": true,\n    \"survey_time_limit\": 15,\n    \"redirect_url\": null,\n    \"survey_respondent\": \"attendee\",\n    \"survey_ticket_classes\": [\"125\", \"374\"]\n}\n```",
        "operationId": "RetrieveTicketBuyerSettingsbyEvent",
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "description": "Event ID.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "1234"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TicketBuyerSettings"
                },
                "example": {
                  "confirmation_message": {
                    "html": "<H1>Confirmation Message</H1>",
                    "text": "Confirmation Message"
                  },
                  "instructions": {
                    "html": "<H1>Instructions</H1>",
                    "text": "Instructions"
                  },
                  "event_id": "43253626762",
                  "refund_request_enabled": true,
                  "redirect_url": null,
                  "sales_ended_message": {
                    "html": "<H1>Sales Ended Message</H1>",
                    "text": "Sales Ended Message"
                  },
                  "allow_attendee_update": true,
                  "survey_name": "Registration Page",
                  "survey_info": {
                    "html": "<b>Filling in this survey is required to attend the event</b>",
                    "text": "Filling in this survey is required to attend the event"
                  },
                  "survey_time_limit": 15,
                  "survey_respondent": "ticket_buyer",
                  "survey_ticket_classes": []
                }
              }
            }
          },
          "400": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetrieveTicketBuyerSettingsbyEventresponse"
                },
                "example": {
                  "error_description": "",
                  "error_detail": {},
                  "status_code": 0,
                  "error": "FIELD_INVALID"
                }
              }
            }
          },
          "403": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetrieveTicketBuyerSettingsbyEventresponse2"
                },
                "example": {
                  "error_description": "",
                  "error_detail": {},
                  "status_code": 0,
                  "error": "NOT_AUTHORIZED"
                }
              }
            }
          },
          "404": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetrieveTicketBuyerSettingsbyEventresponse4"
                },
                "example": {
                  "error_description": "",
                  "error_detail": {},
                  "status_code": 0,
                  "error": "NOT_FOUND"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "Ticket Buyer Settings"
        ],
        "summary": "Update Ticket Buyer Settings for an Event",
        "description": "Update Ticket Buyer Settings by Event ID.\n\nExample:\n\n```json\n{\n    \"ticket_buyer_settings\": {\n        \"confirmation_message\": {\n            \"text\": \"<H1>Confirmation Message</H1>\",\n            \"html\": \"Confirmation Message\"\n        },\n        \"instructions\": {\n            \"text\": \"<H1>Instructions</H1>\",\n            \"html\": \"Instructions\"\n        },\n        \"sales_ended_message\": {\n            \"text\": \"<H1>Sales Ended Message</H1>\",\n            \"html\": \"Sales Ended Message\"\n        },\n        \"survey_info\": {\n            \"text\": \"<b>Filling in this survey is required to attend the event</b>\",\n            \"html\": \"Filling in this survey is required to attend the event\"\n        },\n        \"event_id\": \"43253626762\",\n        \"survey_name\": \"Registration Page Title\",\n        \"refund_request_enabled\": true,\n        \"allow_attendee_update\": true,\n        \"survey_time_limit\": 15,\n        \"redirect_url\": null,\n        \"survey_respondent\": \"attendee\",\n        \"survey_ticket_classes\": [\"125\", \"374\"]\n    }\n}\n```",
        "operationId": "UpdateTicketBuyerSettingsforanEvent",
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "description": "Event ID.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "1234"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTicketBuyerSettingsforanEventrequest"
              },
              "example": {
                "ticket_buyer_settings": {
                  "confirmation_message": {
                    "html": "<H1>Confirmation Message</H1>"
                  },
                  "instructions": {
                    "html": "<H1>Instructions</H1>"
                  },
                  "refund_request_enabled": true,
                  "redirect_url": null,
                  "sales_ended_message": {
                    "html": "<H1>Sales Ended Message</H1>"
                  },
                  "allow_attendee_update": true,
                  "survey_name": "Registration Page",
                  "survey_info": {
                    "html": "<b>Filling in this survey is required to attend the event</b>"
                  },
                  "survey_time_limit": 15,
                  "survey_respondent": [
                    "ticket_buyer",
                    "ticket_buyer",
                    "attendee"
                  ],
                  "survey_ticket_classes": []
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TicketBuyerSettings"
                },
                "example": {
                  "confirmation_message": {
                    "html": "<H1>Confirmation Message</H1>",
                    "text": "Confirmation Message"
                  },
                  "instructions": {
                    "html": "<H1>Instructions</H1>",
                    "text": "Instructions"
                  },
                  "event_id": "43253626762",
                  "refund_request_enabled": true,
                  "redirect_url": null,
                  "sales_ended_message": {
                    "html": "<H1>Sales Ended Message</H1>",
                    "text": "Sales Ended Message"
                  },
                  "allow_attendee_update": true,
                  "survey_name": "Registration Page",
                  "survey_info": {
                    "html": "<b>Filling in this survey is required to attend the event</b>",
                    "text": "Filling in this survey is required to attend the event"
                  },
                  "survey_time_limit": 15,
                  "survey_respondent": "ticket_buyer",
                  "survey_ticket_classes": []
                }
              }
            }
          },
          "400": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateTicketBuyerSettingsforanEventresponse"
                },
                "example": {
                  "error_description": "",
                  "error_detail": {},
                  "status_code": 0,
                  "error": "FIELD_INVALID"
                }
              }
            }
          },
          "403": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateTicketBuyerSettingsforanEventresponse2"
                },
                "example": {
                  "error_description": "",
                  "error_detail": {},
                  "status_code": 0,
                  "error": "NOT_AUTHORIZED"
                }
              }
            }
          },
          "404": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateTicketBuyerSettingsforanEventresponse4"
                },
                "example": {
                  "error_description": "",
                  "error_detail": {},
                  "status_code": 0,
                  "error": "NOT_FOUND"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/events/{event_id}/ticket_classes/{ticket_class_id}/": {
      "get": {
        "tags": [
          "Ticket Class"
        ],
        "summary": "Retrieve a Ticket Class",
        "description": "Retrieve a Ticket Class by Ticket Class ID.",
        "operationId": "RetrieveaTicketClass",
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "description": "Event ID.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "12345"
            }
          },
          {
            "name": "ticket_class_id",
            "in": "path",
            "description": "Ticket Class ID.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "12345"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TicketClass"
                },
                "example": {
                  "description": "General Admission",
                  "donation": false,
                  "free": false,
                  "minimum_quantity": 1,
                  "maximum_quantity": 10,
                  "delivery_methods": [
                    "electronic",
                    "will_call",
                    "standard_shipping",
                    "third_party_shipping"
                  ],
                  "cost": {
                    "actual_cost": {
                      "currency": "USD",
                      "value": 432,
                      "major_value": "4.32",
                      "display": "4.32 USD"
                    },
                    "actual_fee": {
                      "currency": "USD",
                      "value": 432,
                      "major_value": "4.32",
                      "display": "4.32 USD"
                    },
                    "cost": {
                      "currency": "USD",
                      "value": 432,
                      "major_value": "4.32",
                      "display": "4.32 USD"
                    },
                    "fee": {
                      "currency": "USD",
                      "value": 432,
                      "major_value": "4.32",
                      "display": "4.32 USD"
                    },
                    "tax": {
                      "currency": "USD",
                      "value": 432,
                      "major_value": "4.32",
                      "display": "4.32 USD"
                    }
                  },
                  "resource_uri": "https://www.eventbriteapi.com/v3/events/1234/ticket_classes/12345/",
                  "image_id": "1234",
                  "name": "GA",
                  "display_name": "Gold GA",
                  "sorting": 2,
                  "capacity": 100,
                  "quantity_total": 1000,
                  "quantity_sold": 20,
                  "sales_start": null,
                  "sales_end": null,
                  "hidden": false,
                  "include_fee": false,
                  "split_fee": false,
                  "hide_description": false,
                  "hide_sale_dates": false,
                  "auto_hide": false,
                  "auto_hide_before": null,
                  "auto_hide_after": null,
                  "sales_start_after": null,
                  "order_confirmation_message": "Success!",
                  "sales_channels": [
                    "online",
                    "atd"
                  ],
                  "inventory_tier_id": null,
                  "secondary_assignment_enabled": false
                }
              }
            }
          },
          "400": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetrieveaTicketClassresponse"
                },
                "example": {
                  "error_description": "",
                  "error_detail": {},
                  "status_code": 0,
                  "error": "AUTO_HIDE_NOT_SET"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "Ticket Class"
        ],
        "summary": "Update a Ticket Class",
        "description": "Update Ticket Class by Ticket Class ID.",
        "operationId": "UpdateaTicketClass",
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "description": "Event ID.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "12345"
            }
          },
          {
            "name": "ticket_class_id",
            "in": "path",
            "description": "Ticket Class ID.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "12345"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateaTicketClassrequest"
              },
              "example": {
                "ticket_class": {
                  "cost": {
                    "currency": "USD",
                    "value": 432,
                    "major_value": "4.32",
                    "display": "4.32 USD"
                  },
                  "resource_uri": "https://www.eventbriteapi.com/v3/events/1234/ticket_classes/12345/",
                  "image_id": "1234",
                  "display_name": "Gold GA",
                  "quantity_sold": 20,
                  "sales_start": "",
                  "sales_end": "",
                  "hide_sale_dates": false,
                  "auto_hide_before": "",
                  "auto_hide_after": "",
                  "secondary_assignment_enabled": false,
                  "sales_end_relative": {
                    "relative_to_event": "start_time",
                    "offset": 0
                  },
                  "ticket_classes (array[object], optional) - Internal use only.A list of ticket types formatted as: [{â€œidâ€: â€œ1234â€, â€œnameâ€: â€œTicket Nameâ€, â€œcostâ€: â€œUSD,25â€, â€œquantity_totalâ€": [
                    "4",
                    "...}",
                    "{...] where â€œidâ€ is required for updating a ticket."
                  ]
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TicketClass"
                },
                "example": {
                  "description": "General Admission",
                  "donation": false,
                  "free": false,
                  "minimum_quantity": 1,
                  "maximum_quantity": 10,
                  "delivery_methods": [
                    "electronic",
                    "will_call",
                    "standard_shipping",
                    "third_party_shipping"
                  ],
                  "cost": {
                    "actual_cost": {
                      "currency": "USD",
                      "value": 432,
                      "major_value": "4.32",
                      "display": "4.32 USD"
                    },
                    "actual_fee": {
                      "currency": "USD",
                      "value": 432,
                      "major_value": "4.32",
                      "display": "4.32 USD"
                    },
                    "cost": {
                      "currency": "USD",
                      "value": 432,
                      "major_value": "4.32",
                      "display": "4.32 USD"
                    },
                    "fee": {
                      "currency": "USD",
                      "value": 432,
                      "major_value": "4.32",
                      "display": "4.32 USD"
                    },
                    "tax": {
                      "currency": "USD",
                      "value": 432,
                      "major_value": "4.32",
                      "display": "4.32 USD"
                    }
                  },
                  "resource_uri": "https://www.eventbriteapi.com/v3/events/1234/ticket_classes/12345/",
                  "image_id": "1234",
                  "name": "GA",
                  "display_name": "Gold GA",
                  "sorting": 2,
                  "capacity": 100,
                  "quantity_total": 1000,
                  "quantity_sold": 20,
                  "sales_start": null,
                  "sales_end": null,
                  "hidden": false,
                  "include_fee": false,
                  "split_fee": false,
                  "hide_description": false,
                  "hide_sale_dates": false,
                  "auto_hide": false,
                  "auto_hide_before": null,
                  "auto_hide_after": null,
                  "sales_start_after": null,
                  "order_confirmation_message": "Success!",
                  "sales_channels": [
                    "online",
                    "atd"
                  ],
                  "inventory_tier_id": null,
                  "secondary_assignment_enabled": false
                }
              }
            }
          },
          "400": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateaTicketClassresponse"
                },
                "example": {
                  "error_description": "",
                  "error_detail": {},
                  "status_code": 0,
                  "error": "AUTO_HIDE_NOT_SET"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/events/{event_id}/ticket_classes/": {
      "post": {
        "tags": [
          "Ticket Class"
        ],
        "summary": "Create a Ticket Class",
        "description": "Create a new Ticket Class.\n\n> **Note:** After **May 7, 2020**, we will require you to provide an **inventory_tier_id** as part of your request for any **ticket_classes** you are creating or updating for a tiered event. For more information refer to our [changelog](https://www.eventbrite.com/platform/docs/changelog).\n\n> **Add-On creation:** First you will need to create an [Add-On Inventory Tier](https://www.eventbrite.com/platform/api#/reference/inventory-tiers/create-an-inventory-tier) with **count_against_event_capacity** set to false and then provide the **inventory_tier_id** of the Add-On Inventory Tier when creating a new Ticket Class as part of your request.",
        "operationId": "CreateaTicketClass",
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "description": "Event ID",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "12345"
            }
          },
          {
            "name": "ticket_class_id",
            "in": "query",
            "description": "Ticket Class ID",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "1234"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateaTicketClassrequest"
              },
              "example": {
                "ticket_class": {
                  "maximum_quantity": 0,
                  "cost": "USD,4500",
                  "resource_uri": "https://www.eventbriteapi.com/v3/events/1234/ticket_classes/12345/",
                  "image_id": "1234",
                  "display_name": "Gold GA",
                  "quantity_sold": 20,
                  "sales_start": "",
                  "sales_end": "",
                  "hide_sale_dates": false,
                  "auto_hide_before": "",
                  "auto_hide_after": "",
                  "secondary_assignment_enabled": false,
                  "sales_end_relative": {
                    "relative_to_event": "start_time",
                    "offset": 0
                  },
                  "ticket_classes (array[object], optional) - Internal use only.A list of ticket types formatted as: [{â€œidâ€: â€œ1234â€, â€œnameâ€: â€œTicket Nameâ€, â€œcostâ€: â€œUSD,25â€, â€œquantity_totalâ€": [
                    "4",
                    "...}",
                    "{...] where â€œidâ€ is required for updating a ticket."
                  ]
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TicketClassResponse"
                },
                "example": {
                  "description": "General Admission",
                  "donation": false,
                  "free": false,
                  "minimum_quantity": 1,
                  "maximum_quantity": 10,
                  "delivery_methods": [
                    "electronic",
                    "will_call",
                    "standard_shipping",
                    "third_party_shipping"
                  ],
                  "cost": {
                    "actual_cost": {
                      "currency": "USD",
                      "value": 432,
                      "major_value": "4.32",
                      "display": "4.32 USD"
                    },
                    "actual_fee": {
                      "currency": "USD",
                      "value": 432,
                      "major_value": "4.32",
                      "display": "4.32 USD"
                    },
                    "cost": {
                      "currency": "USD",
                      "value": 432,
                      "major_value": "4.32",
                      "display": "4.32 USD"
                    },
                    "fee": {
                      "currency": "USD",
                      "value": 432,
                      "major_value": "4.32",
                      "display": "4.32 USD"
                    },
                    "tax": {
                      "currency": "USD",
                      "value": 432,
                      "major_value": "4.32",
                      "display": "4.32 USD"
                    }
                  },
                  "resource_uri": "https://www.eventbriteapi.com/v3/events/1234/ticket_classes/12345/",
                  "image_id": "1234",
                  "name": "GA",
                  "display_name": "Gold GA",
                  "sorting": 2,
                  "capacity": 100,
                  "quantity_total": 1000,
                  "quantity_sold": 20,
                  "sales_start": null,
                  "sales_end": null,
                  "hidden": false,
                  "include_fee": false,
                  "split_fee": false,
                  "hide_description": false,
                  "hide_sale_dates": false,
                  "auto_hide": false,
                  "auto_hide_before": null,
                  "auto_hide_after": null,
                  "sales_start_after": null,
                  "order_confirmation_message": "Success!",
                  "sales_channels": [
                    "online",
                    "atd"
                  ],
                  "inventory_tier_id": null,
                  "secondary_assignment_enabled": false,
                  "category": "admission"
                }
              }
            }
          },
          "400": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateaTicketClassresponse"
                },
                "example": {
                  "error_description": "",
                  "error_detail": {},
                  "status_code": 0,
                  "error": "AUTO_HIDE_NOT_SET"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "get": {
        "tags": [
          "Ticket Class"
        ],
        "summary": "List Ticket Classes by Event",
        "description": "List Ticket Classes by Event ID. Returns a paginated response.",
        "operationId": "ListTicketClassesbyEvent",
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "description": "Event ID.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "12345"
            }
          },
          {
            "name": "pos",
            "in": "query",
            "description": "Only return ticket classes valid for the given point of sale",
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/pos"
            }
          },
          {
            "name": "category",
            "in": "query",
            "description": "Filter Ticket Classes by Category",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/category4"
              }
            }
          },
          {
            "name": "include_holds",
            "in": "query",
            "description": "Boolean for whether or not to include hold ticket classes in response",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListTicketClassesbyEventresponse"
                },
                "example": {
                  "pagination": {
                    "object_count": 1,
                    "page_number": 1,
                    "page_size": 1,
                    "page_count": 1,
                    "continuation": "dGhpcyBpcyBhIGNvbnRpbnVhdGlvbiB0b2tlbg",
                    "has_more_items": false
                  },
                  "ticket_classes": [
                    {
                      "description": "General Admission",
                      "donation": false,
                      "free": false,
                      "minimum_quantity": 1,
                      "maximum_quantity": 10,
                      "delivery_methods": [
                        "electronic",
                        "will_call",
                        "standard_shipping",
                        "third_party_shipping"
                      ],
                      "cost": {
                        "actual_cost": {
                          "currency": "USD",
                          "value": 432,
                          "major_value": "4.32",
                          "display": "4.32 USD"
                        },
                        "actual_fee": {
                          "currency": "USD",
                          "value": 432,
                          "major_value": "4.32",
                          "display": "4.32 USD"
                        },
                        "cost": {
                          "currency": "USD",
                          "value": 432,
                          "major_value": "4.32",
                          "display": "4.32 USD"
                        },
                        "fee": {
                          "currency": "USD",
                          "value": 432,
                          "major_value": "4.32",
                          "display": "4.32 USD"
                        },
                        "tax": {
                          "currency": "USD",
                          "value": 432,
                          "major_value": "4.32",
                          "display": "4.32 USD"
                        }
                      },
                      "resource_uri": "https://www.eventbriteapi.com/v3/events/1234/ticket_classes/12345/",
                      "image_id": "1234",
                      "name": "GA",
                      "display_name": "Gold GA",
                      "sorting": 2,
                      "capacity": 100,
                      "quantity_total": 1000,
                      "quantity_sold": 20,
                      "sales_start": null,
                      "sales_end": null,
                      "hidden": false,
                      "include_fee": false,
                      "split_fee": false,
                      "hide_description": false,
                      "hide_sale_dates": false,
                      "auto_hide": false,
                      "auto_hide_before": null,
                      "auto_hide_after": null,
                      "sales_start_after": null,
                      "order_confirmation_message": "Success!",
                      "sales_channels": [
                        "online",
                        "atd"
                      ],
                      "inventory_tier_id": null,
                      "secondary_assignment_enabled": false
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/events/{event_id}/ticket_classes/for_sale/": {
      "get": {
        "tags": [
          "Ticket Class"
        ],
        "summary": "List Ticket Classes Available For Sale by Event",
        "description": "List Ticket Classes available for sale by Event ID for use in the purchase flow. Returns a paginated response.",
        "operationId": "ListTicketClassesAvailableForSalebyEvent",
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "description": "Event ID.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "12345"
            }
          },
          {
            "name": "pos",
            "in": "query",
            "description": "Only return ticket classes valid for the given point of sale. If unspecified, `online` is the default value.",
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/pos"
            }
          },
          {
            "name": "code",
            "in": "query",
            "description": "Only return ticket classes associated with this promo code. A promo code may apply discount, unlock hidden tickets, or change availability/remaining quantity of the tickets.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hold_id",
            "in": "query",
            "description": "Only return ticket classes associated with this composite hold id.  Requesting user must have event permissions to sell from holds.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListTicketClassesAvailableForSalebyEventresponse"
                },
                "example": {
                  "pagination": {
                    "object_count": 1,
                    "page_number": 1,
                    "page_size": 1,
                    "page_count": 1,
                    "continuation": "dGhpcyBpcyBhIGNvbnRpbnVhdGlvbiB0b2tlbg",
                    "has_more_items": false
                  },
                  "ticket_classes": [
                    {
                      "description": "General Admission",
                      "donation": false,
                      "free": false,
                      "minimum_quantity": 1,
                      "maximum_quantity": 10,
                      "delivery_methods": [
                        "electronic",
                        "will_call",
                        "standard_shipping",
                        "third_party_shipping"
                      ],
                      "cost": {
                        "actual_cost": {
                          "currency": "USD",
                          "value": 432,
                          "major_value": "4.32",
                          "display": "4.32 USD"
                        },
                        "actual_fee": {
                          "currency": "USD",
                          "value": 432,
                          "major_value": "4.32",
                          "display": "4.32 USD"
                        },
                        "cost": {
                          "currency": "USD",
                          "value": 432,
                          "major_value": "4.32",
                          "display": "4.32 USD"
                        },
                        "fee": {
                          "currency": "USD",
                          "value": 432,
                          "major_value": "4.32",
                          "display": "4.32 USD"
                        },
                        "tax": {
                          "currency": "USD",
                          "value": 432,
                          "major_value": "4.32",
                          "display": "4.32 USD"
                        }
                      },
                      "resource_uri": "https://www.eventbriteapi.com/v3/events/1234/ticket_classes/12345/",
                      "image_id": "1234",
                      "name": "Gold GA",
                      "sales_start": null,
                      "sales_end": null,
                      "include_fee": false,
                      "on_sale_status": "UNKNOWN",
                      "variant_input_type": "one",
                      "variants": [
                        {
                          "id": "T12345",
                          "category": "admission",
                          "primary": true,
                          "code": null,
                          "name": "Admission",
                          "display_name": "Orchestra Admission",
                          "description": "Full price admission ticket",
                          "free": false,
                          "cost": {
                            "currency": "USD",
                            "value": 432,
                            "major_value": "4.32",
                            "display": "4.32 USD"
                          },
                          "total_cost": {
                            "currency": "USD",
                            "value": 432,
                            "major_value": "4.32",
                            "display": "4.32 USD"
                          },
                          "fee": {
                            "currency": "USD",
                            "value": 432,
                            "major_value": "4.32",
                            "display": "4.32 USD"
                          },
                          "tax": {
                            "currency": "USD",
                            "value": 432,
                            "major_value": "4.32",
                            "display": "4.32 USD"
                          },
                          "tax_and_fee": {
                            "currency": "USD",
                            "value": 432,
                            "major_value": "4.32",
                            "display": "4.32 USD"
                          },
                          "original_cost": {
                            "currency": "USD",
                            "value": 432,
                            "major_value": "4.32",
                            "display": "4.32 USD"
                          },
                          "original_total_cost": {
                            "currency": "USD",
                            "value": 432,
                            "major_value": "4.32",
                            "display": "4.32 USD"
                          },
                          "original_fee": {
                            "currency": "USD",
                            "value": 432,
                            "major_value": "4.32",
                            "display": "4.32 USD"
                          },
                          "original_tax": {
                            "currency": "USD",
                            "value": 432,
                            "major_value": "4.32",
                            "display": "4.32 USD"
                          },
                          "on_sale_status": "UNKNOWN",
                          "amount_off": {
                            "currency": "USD",
                            "value": 432,
                            "major_value": "4.32",
                            "display": "4.32 USD"
                          },
                          "percent_off": "25.0",
                          "color": "#fac114",
                          "image_id": "1234"
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListTicketClassesAvailableForSalebyEventresponse1"
                },
                "example": {
                  "error_description": "",
                  "error_detail": {},
                  "status_code": 0,
                  "error": "ARGUMENTS_ERROR"
                }
              }
            }
          },
          "403": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListTicketClassesAvailableForSalebyEventresponse3"
                },
                "example": {
                  "error_description": "",
                  "error_detail": {},
                  "status_code": 0,
                  "error": "NOT_AUTHORIZED"
                }
              }
            }
          },
          "404": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListTicketClassesAvailableForSalebyEventresponse5"
                },
                "example": {
                  "error_description": "",
                  "error_detail": {},
                  "status_code": 0,
                  "error": "NOT_FOUND"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/ticket_groups/{ticket_group_id}/": {
      "get": {
        "tags": [
          "Ticket Group"
        ],
        "summary": "Retrieve a Ticket Group",
        "description": "Retrieve a Ticket Group by Ticket Group ID.",
        "operationId": "RetrieveaTicketGroup",
        "parameters": [
          {
            "name": "ticket_group_id",
            "in": "path",
            "description": "Ticket Group ID.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "1"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TicketGroup"
                },
                "example": {
                  "name": "Ticket Group Example",
                  "status": "live",
                  "event_ticket_ids": "{\"1\": [\"12345\"]}",
                  "tickets": {}
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "Ticket Group"
        ],
        "summary": "Update a Ticket Group",
        "description": "Update Ticket Group by Ticket Group ID.",
        "operationId": "UpdateaTicketGroup",
        "parameters": [
          {
            "name": "ticket_group_id",
            "in": "path",
            "description": "Ticket Group ID.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "1"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateaTicketGrouprequest"
              },
              "example": {
                "ticket_group": {
                  "name": "Ticket Group Example",
                  "status": "live",
                  "event_ticket_ids": "{\"1\": [\"12345\"]}"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TicketGroup"
                },
                "example": {
                  "name": "Ticket Group Example",
                  "status": "live",
                  "event_ticket_ids": "{\"1\": [\"12345\"]}",
                  "tickets": {}
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "Ticket Group"
        ],
        "summary": "Delete a Ticket Group",
        "description": "Delete a Ticket Group. The status of the Ticket Group is changed to `deleted`.",
        "operationId": "DeleteaTicketGroup",
        "parameters": [
          {
            "name": "ticket_group_id",
            "in": "path",
            "description": "Ticket Group ID.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "1"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteaTicketGroupresponse"
                },
                "example": {
                  "deleted": true
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/organizations/{organization_id}/ticket_groups/": {
      "post": {
        "tags": [
          "Ticket Group"
        ],
        "summary": "Create a Ticket Group",
        "description": "Create a new Ticket Group for an [Organization](#organization_object).\n\nMaximum number of 300 live Ticket Groups per Organization; archived or deleted Ticket Classes are not included in this limitation.",
        "operationId": "CreateaTicketGroup",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "Organization ID.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "1"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateaTicketGrouprequest"
              },
              "example": {
                "ticket_group": {
                  "name": "Ticket Group Example",
                  "status": "live",
                  "event_ticket_ids": "{\"1\": [\"12345\"]}"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TicketGroup"
                },
                "example": {
                  "name": "Ticket Group Example",
                  "status": "live",
                  "event_ticket_ids": "{\"1\": [\"12345\"]}",
                  "tickets": {}
                }
              }
            }
          },
          "400": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateaTicketGroupresponse"
                },
                "example": {
                  "error_description": "",
                  "error_detail": {},
                  "status_code": 0,
                  "error": "EXCEEDS_LIMIT"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "get": {
        "tags": [
          "Ticket Group"
        ],
        "summary": "List Ticket Groups by Organization",
        "description": "List Ticket Groups by Organization ID. Returns a paginated response.\n\nTo include the Ticket Class name and sales channel in the response, add the Ticket Class expansion parameter.",
        "operationId": "ListTicketGroupsbyOrganization",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "Organization ID.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "1"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Filter Ticket Groups by status. This can be `live`, `archived`, `deleted`, or `all`.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListTicketGroupsbyOrganizationresponse"
                },
                "example": {
                  "ticket_groups": [
                    {
                      "name": "Ticket Group Example",
                      "status": "live",
                      "event_ticket_ids": "{\"1\": [\"12345\"]}",
                      "tickets": {}
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/organizations/{organization_id}/events/{event_id}/ticket_classes/{ticket_class_id}/ticket_groups/": {
      "post": {
        "tags": [
          "Ticket Group"
        ],
        "summary": "Add a Ticket Class to  Ticket Groups",
        "description": "Add a Ticket Class to Ticket Groups by Organization ID and Event ID.\n\nTo remove a Ticket Class from every Ticket Group owned by an Organization, leave the Ticket Group ID empty.",
        "operationId": "AddaTicketClasstoTicketGroups",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "ID of the Organization that owns the Ticket Group.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "1"
            }
          },
          {
            "name": "event_id",
            "in": "path",
            "description": "ID of the Event that owns the Ticket Class.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "123"
            }
          },
          {
            "name": "ticket_class_id",
            "in": "path",
            "description": "ID of the Ticket Class to add to the Ticket Group.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "12345"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddaTicketClasstoTicketGroupsrequest"
              },
              "example": {
                "ticket_group_ids": []
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false
      }
    },
    "/users/{user_id}/": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Retrieve Information about a User Account",
        "description": "Returns a user for the specified `user` as user. If you want to get details about the currently authenticated user, use /users/me/.\nTo include the Userâ€™s assortment package in the response, add the assortment expansion parameter: /users/me/?expand=assortment",
        "operationId": "RetrieveInformationaboutaUserAccount",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "User ID.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number",
              "format": "double",
              "example": 12345
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetrieveInformationaboutaUserAccountresponse"
                },
                "example": {
                  "user": {
                    "name": "John Smith",
                    "first_name": "John",
                    "last_name": "Smith",
                    "is_public": false,
                    "image_id": "12345",
                    "emails": [
                      {
                        "email": "john@smith.com",
                        "verified": true
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/users/me/": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Retrieve Information About Your User Account",
        "description": "Retrieve your User account information.",
        "operationId": "RetrieveInformationAboutYourUserAccount",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                },
                "example": {
                  "name": "John Smith",
                  "first_name": "John",
                  "last_name": "Smith",
                  "is_public": false,
                  "image_id": "12345",
                  "emails": [
                    {
                      "email": "john@smith.com",
                      "verified": true
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/venues/{venue_id}/": {
      "get": {
        "tags": [
          "Venue"
        ],
        "summary": "Retrieve a Venue",
        "description": "Retrieve a Venue by Venue ID.",
        "operationId": "RetrieveaVenue",
        "parameters": [
          {
            "name": "venue_id",
            "in": "path",
            "description": "Venue ID.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "12345"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VenueResponse"
                },
                "example": {
                  "name": "Great Venue",
                  "age_restriction": null,
                  "capacity": 100,
                  "address": {
                    "address_1": null,
                    "address_2": null,
                    "city": null,
                    "region": null,
                    "postal_code": null,
                    "country": null,
                    "latitude": null,
                    "longitude": null
                  },
                  "resource_uri": "https://www.eventbriteapi.com/v3/venues/3003/",
                  "id": "3003",
                  "latitude": "49.28497549999999",
                  "longitude": "123.11082529999999"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "Venue"
        ],
        "summary": "Update a Venue",
        "description": "Update a Venue by Venue ID.",
        "operationId": "UpdateaVenue",
        "parameters": [
          {
            "name": "venue_id",
            "in": "path",
            "description": "Venue ID.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "12345"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateaVenuerequest"
              },
              "example": {
                "venue": {
                  "name": "Great Venue",
                  "capacity": 100,
                  "address": {}
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VenueResponse"
                },
                "example": {
                  "name": "Great Venue",
                  "age_restriction": null,
                  "capacity": 100,
                  "address": {
                    "address_1": null,
                    "address_2": null,
                    "city": null,
                    "region": null,
                    "postal_code": null,
                    "country": null,
                    "latitude": null,
                    "longitude": null
                  },
                  "resource_uri": "https://www.eventbriteapi.com/v3/venues/3003/",
                  "id": "3003",
                  "latitude": "49.28497549999999",
                  "longitude": "123.11082529999999"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/organizations/{organization_id}/venues/": {
      "post": {
        "tags": [
          "Venue"
        ],
        "summary": "Create a Venue",
        "description": "Create new Venue under an Organization.",
        "operationId": "CreateaVenue",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "Organization ID.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "12345"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateaVenuerequest"
              },
              "example": {
                "venue": {
                  "name": "Great Venue",
                  "capacity": 100,
                  "address": {}
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VenueResponse"
                },
                "example": {
                  "name": "Great Venue",
                  "age_restriction": null,
                  "capacity": 100,
                  "address": {
                    "address_1": null,
                    "address_2": null,
                    "city": null,
                    "region": null,
                    "postal_code": null,
                    "country": null,
                    "latitude": null,
                    "longitude": null
                  },
                  "resource_uri": "https://www.eventbriteapi.com/v3/venues/3003/",
                  "id": "3003",
                  "latitude": "49.28497549999999",
                  "longitude": "123.11082529999999"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "get": {
        "tags": [
          "Venue"
        ],
        "summary": "List Venues by Organization",
        "description": "List Venues by Organization ID. Returns a paginated response.",
        "operationId": "ListVenuesbyOrganization",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "Organization ID.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "12345"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListVenuesbyOrganizationresponse"
                },
                "example": {
                  "pagination": {
                    "object_count": 1,
                    "page_number": 1,
                    "page_size": 1,
                    "page_count": 1,
                    "continuation": "dGhpcyBpcyBhIGNvbnRpbnVhdGlvbiB0b2tlbg",
                    "has_more_items": false
                  },
                  "venues": [
                    {
                      "name": "Great Venue",
                      "age_restriction": null,
                      "capacity": 100,
                      "address": {
                        "address_1": null,
                        "address_2": null,
                        "city": null,
                        "region": null,
                        "postal_code": null,
                        "country": null,
                        "latitude": null,
                        "longitude": null
                      },
                      "resource_uri": "https://www.eventbriteapi.com/v3/venues/3003/",
                      "id": "3003",
                      "latitude": "49.28497549999999",
                      "longitude": "123.11082529999999"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/organizations/{organization_id}/webhooks/": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "summary": "Create Webhooks by Organization ID",
        "description": "Create a Webhook by Organization ID.",
        "operationId": "CreateWebhooksbyOrganizationID",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "Organization ID",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "389957889113"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateWebhook"
              },
              "example": {
                "endpoint_url": "https://c3e123a02a37497897e08927816bb0c920c9de23c77804f.example.com",
                "actions": "event.created,event.published,order.placed",
                "event_id": "62541733007"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Webhook"
                },
                "example": {
                  "endpoint_url": "https://c3e123a02a37497897e08927816bb0c920c9de23c77804f.example.com",
                  "actions": [
                    "event.created",
                    "event.published",
                    "order.placed"
                  ],
                  "event_id": "62541733007",
                  "id": "2006536",
                  "resource_uri": "https://www.eventbriteapi.com/v3/webhooks/1990496/",
                  "created": "2020-03-03T18:09:37Z",
                  "user_id": "308733706151"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "get": {
        "tags": [
          "Webhooks"
        ],
        "summary": "List Webhook by Organization ID",
        "description": "List Webhooks by Organization ID.",
        "operationId": "ListWebhookbyOrganizationID",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "389957889113"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListWebhookbyOrganizationIDresponse"
                },
                "example": {
                  "pagination": {
                    "object_count": 1,
                    "page_number": 1,
                    "page_size": 1,
                    "page_count": 1,
                    "continuation": "dGhpcyBpcyBhIGNvbnRpbnVhdGlvbiB0b2tlbg",
                    "has_more_items": false
                  },
                  "webhooks": {
                    "endpoint_url": "https://c3e123a02a37497897e08927816bb0c920c9de23c77804f.example.com",
                    "actions": [
                      "event.created",
                      "event.published",
                      "order.placed"
                    ],
                    "event_id": "62541733007",
                    "id": "2006536",
                    "resource_uri": "https://www.eventbriteapi.com/v3/webhooks/1990496/",
                    "created": "2020-03-03T18:09:37Z",
                    "user_id": "308733706151"
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "error_description": "",
                  "error_detail": {},
                  "status_code": 0
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/webhooks/": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "summary": "Create Webhooks - deprecated",
        "description": "Create a Webhook.\n\n> Warning: Access to this API will be no longer usable on June 1st, 2020.\n\nFor more information regarding deprecated APIs, refer to our [changelog](https://www.eventbrite.com/platform/docs/changelog).",
        "operationId": "CreateWebhooks-deprecated",
        "parameters": [
          {
            "name": "organization_id",
            "in": "query",
            "description": "Organization ID",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "389957889113"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateWebhook"
              },
              "example": {
                "endpoint_url": "https://c3e123a02a37497897e08927816bb0c920c9de23c77804f.example.com",
                "actions": "event.created,event.published,order.placed",
                "event_id": "62541733007"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Webhook"
                },
                "example": {
                  "endpoint_url": "https://c3e123a02a37497897e08927816bb0c920c9de23c77804f.example.com",
                  "actions": [
                    "event.created",
                    "event.published",
                    "order.placed"
                  ],
                  "event_id": "62541733007",
                  "id": "2006536",
                  "resource_uri": "https://www.eventbriteapi.com/v3/webhooks/1990496/",
                  "created": "2020-03-03T18:09:37Z",
                  "user_id": "308733706151"
                }
              }
            }
          },
          "403": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateWebhooks-deprecatedresponse"
                },
                "example": {
                  "error_description": "This user is not able to use legacy user endpoints, please use the organization equivalent.",
                  "status_code": "403",
                  "error": "NOT_AUTHORIZED"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "get": {
        "tags": [
          "Webhooks"
        ],
        "summary": "List of Webhooks - deprecation",
        "description": "List Webhooks.\n\n> Warning: Access to this API will be no longer usable on June 1st, 2020.\n\nFor more information regarding deprecated APIs, refer to our [changelog](https://www.eventbrite.com/platform/docs/changelog).",
        "operationId": "ListofWebhooks-deprecation",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListofWebhooks-deprecationresponse"
                },
                "example": {
                  "pagination": {
                    "object_count": 1,
                    "page_number": 1,
                    "page_size": 1,
                    "page_count": 1,
                    "continuation": "dGhpcyBpcyBhIGNvbnRpbnVhdGlvbiB0b2tlbg",
                    "has_more_items": false
                  },
                  "webhooks": {
                    "endpoint_url": "https://c3e123a02a37497897e08927816bb0c920c9de23c77804f.example.com",
                    "actions": [
                      "event.created",
                      "event.published",
                      "order.placed"
                    ],
                    "event_id": "62541733007",
                    "id": "2006536",
                    "resource_uri": "https://www.eventbriteapi.com/v3/webhooks/1990496/",
                    "created": "2020-03-03T18:09:37Z",
                    "user_id": "308733706151"
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "error_description": "",
                  "error_detail": {},
                  "status_code": 0
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/webhooks/{id}/": {
      "delete": {
        "tags": [
          "Webhooks"
        ],
        "summary": "Delete Webhook by ID",
        "description": "Delete a Webhook by ID.",
        "operationId": "DeleteWebhookbyID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Webhook ID.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "1990496"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {}
                },
                "example": {}
              }
            }
          },
          "400": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "error_description": "",
                  "error_detail": {},
                  "status_code": 0
                }
              }
            }
          },
          "403": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteWebhookbyIDresponse"
                },
                "example": {
                  "error_description": "This user is not able to use legacy user endpoints, please use the organization equivalent.",
                  "status_code": "403",
                  "error": "NOT_AUTHORIZED"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    }
  },
  "components": {
    "schemas": {
      "Address": {
        "title": "Address",
        "allOf": [
          {
            "$ref": "#/components/schemas/AddressResponse"
          },
          {
            "type": "object",
            "properties": {
              "localized_address_display": {
                "type": "string",
                "description": "Format of the address display localized to the address country"
              },
              "localized_area_display": {
                "type": "string",
                "description": "Format of the address area display localized to the address country"
              },
              "localized_multi_line_address_display": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "The multi-line format order of the address display localized to the address country, where each line is an item in the list"
              }
            }
          }
        ]
      },
      "AddressRequest": {
        "title": "AddressRequest",
        "type": "object",
        "properties": {
          "address_1": {
            "type": "string",
            "description": "The street/location address (part 1)"
          },
          "address_2": {
            "type": "string",
            "description": "The street/location address (part 2)"
          },
          "city": {
            "type": "string",
            "description": "City"
          },
          "region": {
            "type": "string",
            "description": "ISO 3166-2 2- or 3-character region code for the state, province, region, or district"
          },
          "postal_code": {
            "type": "string",
            "description": "Postal code"
          },
          "country": {
            "type": "string",
            "description": "ISO 3166-1 2-character international code for the country"
          },
          "latitude": {
            "type": "string",
            "description": "Latitude portion of the address coordinates"
          },
          "longitude": {
            "type": "string",
            "description": "Longitude portion of the address coordinates"
          }
        }
      },
      "AddressResponse": {
        "title": "AddressResponse",
        "type": "object",
        "properties": {
          "address_1": {
            "type": "string",
            "description": "The street/location address (part 1)",
            "nullable": true
          },
          "address_2": {
            "type": "string",
            "description": "The street/location address (part 2)",
            "nullable": true
          },
          "city": {
            "type": "string",
            "description": "City",
            "nullable": true
          },
          "region": {
            "type": "string",
            "description": "ISO 3166-2 2- or 3-character region code for the state, province, region, or district",
            "nullable": true
          },
          "postal_code": {
            "type": "string",
            "description": "Postal code",
            "nullable": true
          },
          "country": {
            "type": "string",
            "description": "ISO 3166-1 2-character international code for the country",
            "nullable": true
          },
          "latitude": {
            "type": "string",
            "description": "Latitude portion of the address coordinates",
            "nullable": true
          },
          "longitude": {
            "type": "string",
            "description": "Longitude portion of the address coordinates",
            "nullable": true
          }
        }
      },
      "Answer": {
        "title": "Answer",
        "type": "object",
        "properties": {
          "question_id": {
            "type": "string",
            "description": "The ID of the custom question",
            "example": "20090892"
          },
          "attendee_id": {
            "type": "string",
            "description": "The ID of the attendee",
            "example": "1009831492"
          },
          "question": {
            "type": "string",
            "description": "The text of the custom question",
            "example": "What's your question?"
          },
          "type": {
            "$ref": "#/components/schemas/type"
          },
          "answer": {
            "type": "string",
            "description": "Type varies based on the question type. Most types have a string answer, except for the following with object answers:",
            "example": "This is my answer"
          }
        }
      },
      "Attendee": {
        "title": "Attendee",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Attendee ID",
            "example": "12345"
          },
          "created": {
            "type": "string"
          },
          "changed": {
            "type": "string"
          },
          "ticket_class_id": {
            "type": "string",
            "description": "The ticket_class that the attendee registered with",
            "example": "12345"
          },
          "ticket_class_name": {
            "type": "string",
            "description": "The name of the ticket_class at the time of registration",
            "example": "General Admission"
          },
          "profile": {
            "$ref": "#/components/schemas/AttendeeProfile"
          },
          "questions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Question"
            },
            "description": "The per-attendee custom questions"
          },
          "answers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Answer"
            },
            "description": "The attendeeâ€™s answers to any custom questions"
          },
          "barcodes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttendeeBarcode"
            },
            "description": "The attendeeâ€™s entry barcode information"
          },
          "team": {
            "$ref": "#/components/schemas/AttendeeTeam"
          },
          "affiliate": {
            "type": "string",
            "description": "The attendee's affiliate code",
            "nullable": true,
            "example": "affiliate_code"
          },
          "checked_in": {
            "type": "boolean",
            "description": "If the attendee is checked in",
            "example": false
          },
          "cancelled": {
            "type": "boolean",
            "description": "If the attendee is cancelled",
            "example": false
          },
          "refunded": {
            "type": "boolean",
            "description": "If the attendee is refunded",
            "example": false
          },
          "costs": {
            "$ref": "#/components/schemas/CostSummary"
          },
          "status": {
            "type": "string",
            "description": "The status of the attendee (scheduled to be deprecated)"
          },
          "event_id": {
            "type": "string",
            "description": "The event id that this attendee is attending",
            "example": "12345"
          },
          "event": {
            "$ref": "#/components/schemas/Event"
          },
          "order_id": {
            "type": "string",
            "description": "The order id this attendee is part of",
            "example": "12345"
          },
          "order": {
            "$ref": "#/components/schemas/Order"
          },
          "guestlist_id": {
            "type": "string",
            "description": "The guestlist id for this attendee. If this is null it means that this is not a guest.",
            "nullable": true
          },
          "invited_by": {
            "type": "string",
            "description": "The name of the person that invited the attendee. If this is null it means that this is not a guest.",
            "nullable": true
          },
          "assigned_unit": {
            "$ref": "#/components/schemas/AttendeeAssignedUnit"
          },
          "delivery_method": {
            "$ref": "#/components/schemas/delivery_method"
          },
          "variant_id": {
            "type": "string",
            "description": "A composite id with the format T12345-D12345 where the T12345 is the ticket_class id and D12345 is the discount id applied to this attendee",
            "nullable": true
          },
          "contact_list_preferences": {
            "$ref": "#/components/schemas/ContactListPreferences"
          },
          "survey_responses": {
            "type": "object",
            "description": "Object representing survey responses associated with the attendee. Keys are `question_ids` and values are the answers to those questions. Available through the use of `survey_responses` expansion."
          },
          "resource_uri": {
            "type": "string",
            "description": "The resource URI"
          }
        }
      },
      "AttendeeAddress": {
        "title": "AttendeeAddress",
        "type": "object",
        "properties": {
          "home": {
            "$ref": "#/components/schemas/Address"
          },
          "ship": {
            "$ref": "#/components/schemas/Address"
          },
          "work": {
            "$ref": "#/components/schemas/Address"
          },
          "bill": {
            "$ref": "#/components/schemas/Address"
          }
        }
      },
      "AttendeeAssignedUnit": {
        "title": "AttendeeAssignedUnit",
        "type": "object",
        "properties": {
          "unit_id": {
            "type": "string",
            "description": "The seating assignment's ID. This value can never be null.",
            "example": "18-1:2"
          },
          "description": {
            "type": "string",
            "description": "Detailed description for the seating assignment. This is calculated from title and strings of this seating assignment. This value can never be null.",
            "example": "Some description"
          },
          "location_image": {
            "$ref": "#/components/schemas/UnitLocationImage"
          },
          "labels": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of label strings of this seating assignment. This value can never be null."
          },
          "titles": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of title strings of this seating assignment. This value can never be null. Number of titles are always equal or more than number of labels. If seat locations are displayed in the grid view, api client is expected to group assigned locations by titles and use a separate grid for each unique titles."
          }
        }
      },
      "AttendeeBarcode": {
        "title": "AttendeeBarcode",
        "type": "object",
        "properties": {
          "barcode": {
            "type": "string",
            "description": "The barcode contents. *Note that when viewed by the attendee, if the event organizer has turned off printable tickets, or if the organizer has method of delivery and the attendee method of delivery is not electronic, this field will be null in order to prevent exposing the barcode value. When viewed by the organizer with `event.orders:read` permission, the barcode will always be provided.*",
            "example": "1234093511009831492001"
          },
          "status": {
            "$ref": "#/components/schemas/status"
          },
          "created": {
            "type": "string"
          },
          "changed": {
            "type": "string"
          },
          "checkin_type": {
            "$ref": "#/components/schemas/checkin_type"
          },
          "is_printed": {
            "type": "boolean",
            "description": "True if ticket has been printed",
            "example": false
          }
        }
      },
      "AttendeeProfile": {
        "title": "AttendeeProfile",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The attendee's name. Use this in preference to first_name/last_name/etc. if possible for forward compatibility with non-Western names.",
            "example": "John Smith"
          },
          "email": {
            "type": "string",
            "description": "The attendee's email address",
            "example": "jhon.smith@example.com"
          },
          "first_name": {
            "type": "string",
            "description": "The attendee's first name",
            "example": "John"
          },
          "last_name": {
            "type": "string",
            "description": "The attendee's last name",
            "example": "Smith"
          },
          "prefix": {
            "type": "string",
            "description": "The title or honoraria used in front of the name (Mr., Mrs., etc.)",
            "example": "Mr."
          },
          "suffix": {
            "type": "string",
            "description": "The suffix at the end of the name (e.g. Jr, Sr)",
            "example": "Sr"
          },
          "age": {
            "type": "number",
            "description": "The attendee's age",
            "example": 33
          },
          "job_title": {
            "type": "string",
            "description": "The attendee's job title",
            "example": "Software Enginner"
          },
          "company": {
            "type": "string",
            "description": "The attendee's company name",
            "example": "Eventbrite"
          },
          "website": {
            "type": "string",
            "description": "The attendee's website address",
            "example": "https://mysite.com"
          },
          "blog": {
            "type": "string",
            "description": "The attendee's blog address",
            "example": "https://mysite.com"
          },
          "gender": {
            "$ref": "#/components/schemas/gender"
          },
          "birth_date": {
            "type": "string",
            "description": "The attendee's birth date",
            "example": "1984-12-06"
          },
          "cell_phone": {
            "type": "string",
            "description": "The attendee's cell/mobile phone number, as formatted by them",
            "example": "555 555-1234"
          },
          "work_phone": {
            "type": "string",
            "description": "The attendee's cell/mobile work phone number, as formatted by them",
            "example": "555 555-1234"
          },
          "addresses": {
            "$ref": "#/components/schemas/AttendeeAddress"
          }
        }
      },
      "AttendeeTeam": {
        "title": "AttendeeTeam",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The team's ID",
            "example": "12345"
          },
          "name": {
            "type": "string",
            "description": "The team's name",
            "example": "Great Team!"
          },
          "date_joined": {
            "type": "string"
          },
          "event_id": {
            "type": "string",
            "description": "The event the team is part of",
            "example": "12345"
          }
        }
      },
      "EmailConfiguration": {
        "title": "EmailConfiguration",
        "type": "object",
        "properties": {
          "disable_new_user_email": {
            "type": "boolean",
            "description": "If new users will receive welcome email",
            "example": false
          },
          "disable_confirmation_email": {
            "type": "boolean",
            "description": "If the ticket buyer will receive confirmation email",
            "example": false
          },
          "disable_pdf_ticket": {
            "type": "boolean",
            "description": "If the ticket buyer will receive PDF ticket in confirmation email",
            "example": false
          },
          "receipt_only": {
            "type": "boolean",
            "description": "If the ticket buyer will receive a receipt email instead of confirmation email",
            "example": false
          },
          "disable_newsletter_email": {
            "type": "boolean",
            "description": "Used for new users to send them newsletters emails",
            "example": true
          },
          "disable_attendee_news_email": {
            "type": "boolean",
            "description": "Used for new users to send news emails",
            "example": true
          },
          "disable_email_bcc": {
            "type": "boolean",
            "description": "If the organizer will receive confirmation email",
            "example": false
          }
        }
      },
      "Category": {
        "title": "Category",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Category ID",
            "example": "103"
          },
          "resource_uri": {
            "type": "string",
            "example": "https://www.eventbriteapi.com/v3/categories/103/"
          },
          "name": {
            "type": "string",
            "description": "Category name",
            "example": "Music"
          },
          "name_localized": {
            "type": "string",
            "description": "Translated category name",
            "example": "Music"
          },
          "short_name": {
            "type": "string",
            "description": "Shorter category name for display in sidebars and other small spaces",
            "example": "Music"
          },
          "short_name_localized": {
            "type": "string",
            "description": "Translated short category name",
            "example": "Music"
          },
          "subcategories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Subcategory"
            },
            "description": "List of subcategories (only shown on some endpoints)"
          }
        }
      },
      "Collection": {
        "title": "Collection",
        "type": "object",
        "properties": {
          "created  `2018-05-12T02:00:00Z`": {
            "$ref": "#/components/schemas/datetime-tz-utc"
          },
          "id": {
            "type": "string",
            "description": "Collection ID",
            "example": "12345"
          },
          "organization_id": {
            "type": "string",
            "description": "Public Organization ID",
            "example": "12345"
          },
          "organizer_id": {
            "type": "string",
            "description": "Public Organizer ID",
            "example": "12345"
          },
          "image_id": {
            "type": "string",
            "description": "Image ID",
            "example": "12345"
          },
          "name": {
            "type": "string",
            "description": "Collection name"
          },
          "slug": {
            "type": "string",
            "description": "The name portion of the url path that links to the collection page on Eventbrite.",
            "example": "name-of-slug"
          },
          "relative_url": {
            "type": "string",
            "description": "The relative url path that links to the collection page on Eventbrite.  Format is `/cc/{name-of-slug}-{id}`.",
            "example": "/cc/name-of-slug-111"
          },
          "absolute_url": {
            "type": "string",
            "description": "The absolute url that links to the collection page on Eventbrite.    Format is `{eventbrite-domain}/cc/{name-of-slug}-{id}`.",
            "example": "https://www.eventbrite.com/cc/name-of-slug-111"
          },
          "summary": {
            "type": "string",
            "description": "Collection summary/description. This is a plaintext field and will have any supplied HTML removed from it. Maximum of 255 characters."
          },
          "status": {
            "$ref": "#/components/schemas/status4"
          }
        }
      },
      "CostSummary": {
        "title": "CostSummary",
        "type": "object",
        "properties": {
          "base_price": {
            "$ref": "#/components/schemas/CurrencyCost"
          },
          "gross": {
            "$ref": "#/components/schemas/CurrencyCost"
          },
          "eventbrite_fee": {
            "$ref": "#/components/schemas/CurrencyCost"
          },
          "payment_fee": {
            "$ref": "#/components/schemas/CurrencyCost"
          },
          "tax": {
            "$ref": "#/components/schemas/CurrencyCost"
          }
        }
      },
      "Cost": {
        "title": "Cost",
        "type": "object",
        "properties": {
          "base_price": {
            "$ref": "#/components/schemas/CurrencyCost"
          },
          "display_price": {
            "$ref": "#/components/schemas/CurrencyCost"
          },
          "display_fee": {
            "$ref": "#/components/schemas/CurrencyCost"
          },
          "gross": {
            "$ref": "#/components/schemas/CurrencyCost"
          },
          "eventbrite_fee": {
            "$ref": "#/components/schemas/CurrencyCost"
          },
          "payment_fee": {
            "$ref": "#/components/schemas/CurrencyCost"
          },
          "tax": {
            "$ref": "#/components/schemas/CurrencyCost"
          },
          "display_tax": {
            "$ref": "#/components/schemas/CurrencyCost"
          },
          "price_before_discount": {
            "$ref": "#/components/schemas/CurrencyCost"
          },
          "discount_amount": {
            "$ref": "#/components/schemas/CurrencyCost"
          },
          "discount_type": {
            "$ref": "#/components/schemas/discount_type"
          },
          "fee_components": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CostComponent"
            },
            "description": "List of price costs components that belong to the fee display group."
          },
          "tax_components": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CostComponent"
            },
            "description": "List of price costs components that belong to the tax display group."
          },
          "shipping_components": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CostComponent"
            },
            "description": "List of price costs components that belong to the shipping display group."
          },
          "has_gts_tax": {
            "type": "boolean",
            "description": "Indicates if any of the tax_components is a gts tax.",
            "example": false
          },
          "tax_name": {
            "type": "string",
            "description": "The name of the Organizer-to-Attendee tax that applies, if any.",
            "example": "VAT"
          }
        }
      },
      "CostComponent": {
        "title": "CostComponent",
        "type": "object",
        "properties": {
          "intermediate": {
            "type": "boolean",
            "description": "Indicates whether this is a price component that affects the final item price (if `False`), or just intermediate metadata (if `True`).",
            "example": false
          },
          "name": {
            "$ref": "#/components/schemas/name"
          },
          "internal_name": {
            "type": "string",
            "description": "Name of the fee within the group (organizer facing).",
            "example": "service fee"
          },
          "group_name": {
            "type": "string",
            "description": "Display name of the fee group (attendee facing).",
            "example": "service fee"
          },
          "value": {
            "type": "number",
            "description": "The amount of the component represented in minor units. E.g. 725 means 7.25.",
            "example": 200
          },
          "discount": {
            "$ref": "#/components/schemas/CostComponentDiscount"
          },
          "rule": {
            "$ref": "#/components/schemas/CostComponentRule"
          },
          "base": {
            "$ref": "#/components/schemas/base"
          },
          "bucket": {
            "$ref": "#/components/schemas/bucket"
          },
          "recipient": {
            "$ref": "#/components/schemas/recipient"
          },
          "payer": {
            "$ref": "#/components/schemas/payer"
          }
        }
      },
      "CostComponentDiscount": {
        "title": "CostComponentDiscount",
        "type": "object",
        "properties": {
          "amount": {
            "$ref": "#/components/schemas/CurrencyCost"
          },
          "reason": {
            "type": "string",
            "description": "The reason why a discount is applied to a specific cost component.",
            "example": "TOGGLED_OFF_FEE"
          }
        }
      },
      "CostComponentRule": {
        "title": "CostComponentRule",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Fee Rule ID of a specific cost component.",
            "example": "95"
          }
        }
      },
      "CropMask": {
        "title": "CropMask",
        "type": "object",
        "properties": {
          "top_left": {
            "$ref": "#/components/schemas/CropMaskCoordinate"
          },
          "width": {
            "type": "number",
            "description": "Crop mask width",
            "example": 15
          },
          "height": {
            "type": "number",
            "description": "Crop mask height",
            "example": 15
          }
        }
      },
      "CropMaskCoordinate": {
        "title": "CropMaskCoordinate",
        "type": "object",
        "properties": {
          "y": {
            "type": "number",
            "description": "Y coordinate for top-left corner of crop mask",
            "example": 15
          },
          "x": {
            "type": "number",
            "description": "X coordinate for top-left corner of crop mask",
            "example": 15
          }
        }
      },
      "CurrencyCost": {
        "title": "CurrencyCost",
        "required": [
          "currency",
          "value",
          "major_value",
          "display"
        ],
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "description": "The ISO 4217 3-character code of a currency",
            "example": "USD"
          },
          "value": {
            "type": "number",
            "description": "The integer value of units of the minor unit of the currency (e.g. cents for US dollars)",
            "example": 432
          },
          "major_value": {
            "type": "string",
            "description": "You can get a value in the currency's major unit - for example, dollars or pound sterling - by taking the integer value provided and shifting the decimal point left by the exponent value for that currency as defined in ISO 4217",
            "example": "4.32"
          },
          "display": {
            "type": "string",
            "description": "Provided for your convenience; its formatting may change depending on the locale you query the API with (for example, commas for decimal separators in European locales).",
            "example": "4.32 USD"
          }
        }
      },
      "Event": {
        "title": "Event",
        "required": [
          "created",
          "changed"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Event ID",
            "example": "12345"
          },
          "name": {
            "$ref": "#/components/schemas/multipart-text"
          },
          "summary": {
            "type": "string",
            "description": "Event summary. This is a plaintext field and will have any supplied HTML removed from it. Maximum of 140 characters, mutually exclusive with `description`."
          },
          "description": {
            "$ref": "#/components/schemas/multipart-text"
          },
          "start": {
            "$ref": "#/components/schemas/datetime-tz"
          },
          "end": {
            "$ref": "#/components/schemas/datetime-tz"
          },
          "url": {
            "type": "string",
            "description": "The URL to the event page for this event on Eventbrite",
            "example": "https://www.eventbrite.com/e/45263283700"
          },
          "vanity_url": {
            "type": "string",
            "description": "The vanity URL to the event page for this event on Eventbrite",
            "example": "https://testevent.eventbrite.com"
          },
          "created": {
            "type": "string"
          },
          "changed": {
            "type": "string"
          },
          "published": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/status1"
          },
          "currency": {
            "type": "string",
            "description": "The ISO 4217 currency code for this event",
            "example": "USD"
          },
          "online_event": {
            "type": "boolean",
            "description": "If this event doesnâ€™t have a venue and is only held online",
            "example": false
          },
          "organization_id": {
            "type": "string",
            "description": "Organization owning the event"
          },
          "organizer_id": {
            "type": "string",
            "description": "ID of the event organizer"
          },
          "organizer": {
            "$ref": "#/components/schemas/Organizer"
          },
          "logo_id": {
            "type": "string",
            "description": "Image ID of the event logo",
            "nullable": true
          },
          "logo": {
            "$ref": "#/components/schemas/eventbrite-image"
          },
          "venue_id": {
            "type": "string",
            "description": "Event venue ID"
          },
          "venue": {
            "$ref": "#/components/schemas/VenueResponse"
          },
          "format_id": {
            "type": "string",
            "description": "Event format (Expansion: `format`)",
            "nullable": true
          },
          "format": {
            "$ref": "#/components/schemas/Format"
          },
          "category_id": {
            "type": "string",
            "description": "Event category (Expansion: `category`)",
            "nullable": true
          },
          "category": {
            "$ref": "#/components/schemas/Category"
          },
          "subcategory_id": {
            "type": "string",
            "description": "Event subcategory (Expansion: `subcategory`)",
            "nullable": true
          },
          "subcategory": {
            "$ref": "#/components/schemas/Subcategory"
          },
          "music_properties": {
            "$ref": "#/components/schemas/MusicProperties"
          },
          "bookmark_info": {
            "$ref": "#/components/schemas/BookmarkInfo"
          },
          "refund_policy": {
            "type": "string",
            "description": "(Expansion)"
          },
          "ticket_availability": {
            "$ref": "#/components/schemas/TicketAvailability"
          },
          "listed": {
            "type": "boolean",
            "description": "Is this event publicly searchable on Eventbrite?",
            "example": false
          },
          "shareable": {
            "type": "boolean",
            "description": "Can this event show social sharing buttons?",
            "example": false
          },
          "invite_only": {
            "type": "boolean",
            "description": "Can only people with invites see the event page?",
            "example": false
          },
          "show_remaining": {
            "type": "boolean",
            "description": "Should the event page show the number of tickets left?",
            "example": true
          },
          "password": {
            "type": "string",
            "description": "Event password",
            "example": "12345"
          },
          "capacity": {
            "type": "number",
            "description": "Maximum number of people who can attend.",
            "example": 100
          },
          "capacity_is_custom": {
            "type": "boolean",
            "description": "If True, the value of capacity is a custom-set value; if False, it's a calculated value of the total of all ticket capacities.",
            "example": true
          },
          "tx_time_limit": {
            "type": "string",
            "description": "Maximum duration (in seconds) of a transaction",
            "example": "12345"
          },
          "hide_start_date": {
            "type": "boolean",
            "description": "Shows when event starts",
            "example": true
          },
          "hide_end_date": {
            "type": "boolean",
            "description": "Hide when event starts",
            "example": true
          },
          "locale": {
            "type": "string",
            "description": "The event Locale",
            "example": "en_US"
          },
          "is_locked": {
            "type": "boolean",
            "example": true
          },
          "privacy_setting": {
            "type": "string",
            "example": "unlocked"
          },
          "is_externally_ticketed": {
            "type": "boolean",
            "description": "true, if the Event is externally ticketed",
            "example": false
          },
          "external_ticketing": {
            "$ref": "#/components/schemas/ExternalTicketing"
          },
          "is_series": {
            "type": "boolean",
            "description": "If the event is part of a series",
            "example": true
          },
          "is_series_parent": {
            "type": "boolean",
            "description": "If the event is part of a series and is the series parent",
            "example": true
          },
          "series_id": {
            "type": "string",
            "description": "If the event is part of a series, this is the event id of the series parent. If the event is not part of a series, this field is omitted.",
            "nullable": true,
            "example": "56321"
          },
          "is_reserved_seating": {
            "type": "boolean",
            "description": "If the events has been set to have reserved seatings",
            "example": true
          },
          "show_pick_a_seat": {
            "type": "boolean",
            "description": "Enables to show pick a seat option",
            "example": true
          },
          "show_seatmap_thumbnail": {
            "type": "boolean",
            "description": "Enables to show seat map thumbnail",
            "example": true
          },
          "show_colors_in_seatmap_thumbnail": {
            "type": "boolean",
            "description": "For reserved seating event, if venue map thumbnail should have colors on the event page.",
            "example": true
          },
          "is_free": {
            "type": "boolean",
            "description": "Allows to set a free event",
            "example": true
          },
          "source": {
            "type": "string",
            "description": "Source of the event (defaults to API)",
            "example": "api"
          },
          "version": {
            "type": "string",
            "example": "null"
          },
          "resource_uri": {
            "type": "string",
            "description": "Is an absolute URL to the API endpoint that will return you the canonical representation of the event.",
            "example": "https://www.eventbriteapi.com/v3/events/1234/"
          },
          "event_sales_status": {
            "$ref": "#/components/schemas/EventSalesStatus"
          },
          "checkout_settings": {
            "$ref": "#/components/schemas/CheckoutSettings"
          }
        }
      },
      "EventSimilarities": {
        "title": "EventSimilarities",
        "type": "object",
        "properties": {
          "event_id": {
            "type": "string",
            "description": "The event id."
          },
          "event_title": {
            "type": "string",
            "description": "The title of the event."
          },
          "similarity_scores": {
            "type": "number",
            "description": "The similarity score."
          }
        }
      },
      "ExternalTicketing": {
        "title": "ExternalTicketing",
        "required": [
          "external_url",
          "ticketing_provider_name",
          "is_free",
          "minimum_ticket_price",
          "maximum_ticket_price",
          "sales_start",
          "sales_end"
        ],
        "type": "object",
        "properties": {
          "external_url": {
            "type": "string",
            "description": "The URL clients can follow to purchase tickets."
          },
          "ticketing_provider_name": {
            "type": "string",
            "description": "The name of the ticketing provider."
          },
          "is_free": {
            "type": "boolean",
            "description": "Whether this is a free event. Mutually exclusive with ticket price range."
          },
          "minimum_ticket_price": {
            "$ref": "#/components/schemas/CurrencyCost"
          },
          "maximum_ticket_price": {
            "$ref": "#/components/schemas/CurrencyCost"
          },
          "sales_start": {
            "type": "string",
            "nullable": true
          },
          "sales_end": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "UpdateExternalTicketing": {
        "title": "UpdateExternalTicketing",
        "type": "object",
        "properties": {
          "external_url": {
            "type": "string",
            "description": "The URL clients can follow to purchase tickets."
          },
          "ticketing_provider_name": {
            "type": "string",
            "description": "The name of the ticketing provider."
          },
          "is_free": {
            "type": "boolean",
            "description": "Whether this is a free event. Mutually exclusive with ticket price range."
          },
          "minimum_ticket_price": {
            "$ref": "#/components/schemas/CurrencyCost"
          },
          "maximum_ticket_price": {
            "$ref": "#/components/schemas/CurrencyCost"
          },
          "sales_start": {
            "type": "string",
            "nullable": true
          },
          "sales_end": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "MusicProperties": {
        "title": "MusicProperties",
        "type": "object",
        "properties": {
          "age_restriction": {
            "$ref": "#/components/schemas/age_restriction"
          },
          "presented_by": {
            "type": "string",
            "description": "Main music event sponsor.",
            "nullable": true
          },
          "door_time": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Format": {
        "title": "Format",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Format ID",
            "example": "2"
          },
          "name": {
            "type": "string",
            "description": "Format name",
            "example": "Seminar or Talk"
          },
          "name_localized": {
            "type": "string",
            "description": "Localized format name",
            "example": "Seminar or Talk"
          },
          "short_name": {
            "type": "string",
            "description": "Short name for a format",
            "example": "Seminar"
          },
          "short_name_localized": {
            "type": "string",
            "description": "Localized short name for a format",
            "example": "Seminar"
          },
          "resource_uri": {
            "type": "string",
            "description": "Is an absolute URL to the API endpoint that will return you the canonical representation of the format.",
            "example": "https://www.eventbriteapi.com/v3/formats/2/"
          }
        }
      },
      "Image": {
        "title": "Image",
        "required": [
          "id",
          "url"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The imageâ€™s ID",
            "example": "12345"
          },
          "url": {
            "type": "string",
            "description": "The URL of the image",
            "example": "https://image.com"
          }
        }
      },
      "ContactListPreferences": {
        "title": "ContactListPreferences",
        "type": "object",
        "properties": {
          "has_contact_list": {
            "type": "boolean",
            "description": "Email address is in at least one contact list for Organization that owns this Event.",
            "example": true
          },
          "has_opted_in": {
            "type": "boolean",
            "description": "Email address is opt-in to receive marketing communication from the Organization that owns this Event.",
            "example": true
          }
        }
      },
      "Order": {
        "title": "Order",
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The Id of the order",
            "example": "442719216"
          },
          "created": {
            "type": "string",
            "nullable": true
          },
          "changed": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "The ticket buyerâ€™s name. Use this in preference to first_name/last_name if possible for forward compatibility with non-Western names.",
            "example": "John Smith"
          },
          "first_name": {
            "type": "string",
            "description": "The ticket buyerâ€™s first name",
            "example": "John"
          },
          "last_name": {
            "type": "string",
            "description": "The ticket buyerâ€™s last name",
            "example": "Smith"
          },
          "email": {
            "type": "string",
            "description": "The ticket buyerâ€™s email address",
            "example": "john.smith@example.com"
          },
          "costs": {
            "$ref": "#/components/schemas/Cost"
          },
          "event_id": {
            "type": "string",
            "description": "The event id this order is against",
            "example": "17937020110"
          },
          "event": {
            "$ref": "#/components/schemas/Event"
          },
          "attendees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Attendee1"
            },
            "description": "The list of attendees that belong to this order (requires the `attendees` expansion)"
          },
          "time_remaining": {
            "type": "number",
            "description": "The time remaining to complete this order (in seconds)",
            "nullable": true,
            "example": 100
          },
          "resource_uri": {
            "type": "string",
            "description": "Is an absolute URL to the API endpoint that will return you the canonical representation of the order.",
            "example": "https://www.eventbriteapi.com/v3/orders/1234/"
          },
          "status": {
            "$ref": "#/components/schemas/status2"
          },
          "ticket_buyer_settings": {
            "$ref": "#/components/schemas/EventTicketBuyerSettings"
          },
          "contact_list_preferences": {
            "$ref": "#/components/schemas/ContactListPreferences"
          },
          "survey_responses": {
            "type": "object",
            "description": "Object representing survey responses associated with the order. Keys are `question_ids` and values are the answers to those questions. Available through the use of `survey_responses` expansion."
          }
        }
      },
      "OrderBalances": {
        "title": "OrderBalances",
        "type": "object",
        "properties": {
          "paid": {
            "$ref": "#/components/schemas/CurrencyCost"
          },
          "pending": {
            "$ref": "#/components/schemas/CurrencyCost"
          },
          "balance": {
            "$ref": "#/components/schemas/CurrencyCost"
          }
        }
      },
      "OrderCostDetails": {
        "title": "OrderCostDetails",
        "type": "object",
        "properties": {
          "display_price": {
            "$ref": "#/components/schemas/CurrencyCost"
          },
          "price": {
            "$ref": "#/components/schemas/CurrencyCost"
          },
          "cost_details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CostDetail"
            },
            "description": "List with cost components grouped by the specified criteria."
          }
        }
      },
      "CostDetail": {
        "title": "CostDetail",
        "type": "object",
        "properties": {
          "value": {
            "$ref": "#/components/schemas/CurrencyCost"
          },
          "group_name": {
            "type": "string",
            "description": "Display name of the fee group (attendee facing). Guaranteed to be present and non-null if the group_by array passed to the request contains group_name.",
            "example": "eventbrite.service_fee"
          },
          "internal_name": {
            "type": "string",
            "description": "Used to differentiate a fee within a group (organizer facing). Guaranteed to be present and non-null if the group_by array passed to the request contains internal_name.",
            "example": "eventbrite.service_fee"
          },
          "recipient": {
            "$ref": "#/components/schemas/recipient1"
          },
          "bucket": {
            "$ref": "#/components/schemas/bucket1"
          },
          "payer": {
            "$ref": "#/components/schemas/payer1"
          }
        }
      },
      "CheckoutDisqualification": {
        "title": "CheckoutDisqualification",
        "type": "object",
        "properties": {
          "ticket_class_id": {
            "type": "string",
            "description": "ID of the ticket class that is disqualifying a cart from completing checkout.",
            "example": "1234"
          },
          "reason": {
            "$ref": "#/components/schemas/reason"
          }
        }
      },
      "Organizer": {
        "title": "Organizer",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Organizer name."
          },
          "description": {
            "$ref": "#/components/schemas/multipart-text"
          },
          "long_description": {
            "$ref": "#/components/schemas/multipart-text"
          },
          "logo_id": {
            "type": "string",
            "description": "Image ID of the organizer logo",
            "nullable": true
          },
          "logo": {
            "$ref": "#/components/schemas/eventbrite-image"
          },
          "resource_uri": {
            "type": "string",
            "description": "Is an absolute URL to the API endpoint that will return you the organizer.",
            "example": "https://www.eventbriteapi.com/v3/organizers/12345/"
          },
          "id": {
            "type": "string",
            "description": "Id of the organizer",
            "example": "12345"
          },
          "url": {
            "type": "string",
            "description": "URL to the organizer's page on Eventbrite",
            "example": "https://www.eventbrite.com/o/12345/"
          },
          "num_past_events": {
            "type": "number",
            "description": "Number of past events the organizer has",
            "example": 5
          },
          "num_future_events": {
            "type": "number",
            "description": "Number of upcoming events the organizer has",
            "example": 1
          },
          "twitter": {
            "type": "string",
            "description": "Organizer's twitter handle",
            "example": "@abc"
          },
          "facebook": {
            "type": "string",
            "description": "Organizer's facebook page",
            "example": "abc"
          }
        }
      },
      "Question": {
        "title": "Question",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the custom question",
            "example": "20090892"
          },
          "label": {
            "type": "string",
            "description": "The label of the custom question",
            "example": "What's your question?"
          },
          "type": {
            "$ref": "#/components/schemas/type"
          },
          "required": {
            "type": "boolean",
            "description": "Whether or not an answer is required",
            "example": false
          }
        }
      },
      "ScheduleBase": {
        "title": "ScheduleBase",
        "type": "object",
        "properties": {
          "occurrence_duration": {
            "type": "number",
            "description": "The duration of each occurrence in seconds.",
            "example": 3600
          },
          "recurrence_rule": {
            "type": "string",
            "description": "The recurrence rule specifies how often the series occurrences should happen. The recurrence rule must follow the iCalendar RFC at https://tools.ietf.org/html/rfc5545#section-3.3.10. The DTSTART must always be passed in UTC.",
            "example": "DTSTART:20120201T023000Z\nRRULE:FREQ=MONTHLY;COUNT=5"
          }
        }
      },
      "Schedule": {
        "title": "Schedule",
        "allOf": [
          {
            "$ref": "#/components/schemas/ScheduleBase"
          },
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "The ID of the Schedule object",
                "example": "31"
              },
              "created_event_ids": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "A list containing the IDs of the series occurrences that were created by the POSTed schedule."
              }
            }
          }
        ]
      },
      "Subcategory": {
        "title": "Subcategory",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Subcategory ID",
            "example": "3003"
          },
          "resource_uri": {
            "type": "string",
            "example": "https://www.eventbriteapi.com/v3/subcategories/3003/"
          },
          "name": {
            "type": "string",
            "description": "Subcategory name",
            "example": "Classical"
          },
          "parent_category": {
            "$ref": "#/components/schemas/Category1"
          }
        }
      },
      "TicketAvailability": {
        "title": "TicketAvailability",
        "type": "object",
        "properties": {
          "has_available_tickets": {
            "type": "boolean",
            "description": "Whether this event has tickets available to purchase",
            "example": false
          },
          "minimum_ticket_price": {
            "$ref": "#/components/schemas/CurrencyCost"
          },
          "maximum_ticket_price": {
            "$ref": "#/components/schemas/CurrencyCost"
          },
          "is_sold_out": {
            "type": "boolean",
            "description": "Whether there is at least one ticket with availability",
            "example": true
          },
          "start_sales_date": {
            "$ref": "#/components/schemas/datetime-tz"
          },
          "waitlist_available": {
            "type": "boolean",
            "example": false
          }
        }
      },
      "UnitLocationImage": {
        "title": "UnitLocationImage",
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "description": "fully qualified url of the seat map image. Currently all seat map images are in 660x660 .png format. This value can never be null."
          },
          "x": {
            "type": "number",
            "description": "x coordinate of this seat's location within this seat map measured in % from the left edge of seat map. The value ranges from 0.0 between 100.0. This value can never be null."
          },
          "y": {
            "type": "number",
            "description": "y coordinate of this seat's location within this seat map measured in % from the top edge of seat map. The value ranges from 0.0 between 100.0. This value can never be null."
          }
        }
      },
      "VenueResponse": {
        "title": "VenueResponse",
        "allOf": [
          {
            "$ref": "#/components/schemas/VenueBase3"
          },
          {
            "type": "object",
            "properties": {
              "address": {
                "$ref": "#/components/schemas/AddressResponse"
              },
              "resource_uri": {
                "type": "string",
                "description": "Resource uri",
                "example": "https://www.eventbriteapi.com/v3/venues/3003/"
              },
              "id": {
                "type": "string",
                "description": "Venue ID",
                "example": "3003"
              },
              "latitude": {
                "type": "string",
                "description": "Latitude portion of the address coordinates of the venue",
                "example": "49.28497549999999"
              },
              "longitude": {
                "type": "string",
                "description": "Longitude portion of the address coordinates of the venue",
                "example": "123.11082529999999"
              }
            }
          }
        ]
      },
      "VenueBase": {
        "title": "VenueBase",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Venue name",
            "example": "Madison Square Garden"
          },
          "age_restriction": {
            "$ref": "#/components/schemas/age_restriction1"
          },
          "capacity": {
            "type": "number",
            "description": "Set specific capacity (if omitted, sums ticket capacities)",
            "example": 100
          }
        }
      },
      "BookmarkInfo": {
        "title": "BookmarkInfo",
        "type": "object",
        "properties": {
          "bookmarked": {
            "type": "boolean",
            "description": "User saved the event or not.",
            "example": false
          }
        }
      },
      "datetime-tz-utc": {
        "title": "datetime-tz-utc",
        "required": [
          "timezone",
          "utc"
        ],
        "type": "object",
        "properties": {
          "timezone": {
            "type": "string",
            "description": "The timezone",
            "example": "UTC"
          },
          "utc": {
            "type": "string",
            "description": "The time relative to UTC",
            "example": "2018-05-12T02:00:00Z"
          }
        }
      },
      "datetime-tz": {
        "title": "datetime-tz",
        "required": [
          "timezone",
          "utc",
          "local"
        ],
        "type": "object",
        "properties": {
          "timezone": {
            "type": "string",
            "description": "The timezone",
            "example": "America/Los_Angeles"
          },
          "utc": {
            "type": "string",
            "description": "The time relative to UTC",
            "example": "2018-05-12T02:00:00Z"
          },
          "local": {
            "type": "string",
            "description": "The time in the timezone of the event",
            "example": "2018-05-11T19:00:00"
          }
        }
      },
      "htmltext": {
        "title": "htmltext",
        "required": [
          "html"
        ],
        "type": "object",
        "properties": {
          "html": {
            "type": "string",
            "example": "<p>Some text</p>"
          }
        }
      },
      "eventbrite-image": {
        "title": "eventbrite-image",
        "allOf": [
          {
            "$ref": "#/components/schemas/Image"
          },
          {
            "type": "object",
            "properties": {
              "crop_mask": {
                "$ref": "#/components/schemas/CropMask"
              },
              "original": {
                "$ref": "#/components/schemas/original"
              },
              "aspect_ratio": {
                "type": "string",
                "description": "The aspect ratio of the cropped image",
                "example": "2"
              },
              "edge_color": {
                "type": "string",
                "description": "The edge color of the image in hexadecimal representation",
                "example": "#6a7c8b"
              },
              "edge_color_set": {
                "type": "boolean",
                "description": "True if the edge color has been set",
                "example": true
              }
            }
          }
        ]
      },
      "multipart-text": {
        "title": "multipart-text",
        "required": [
          "text",
          "html"
        ],
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "example": "Some text"
          },
          "html": {
            "type": "string",
            "example": "<p>Some text</p>"
          }
        }
      },
      "EventSalesStatus": {
        "title": "EventSalesStatus",
        "type": "object",
        "properties": {
          "sales_status": {
            "$ref": "#/components/schemas/sales_status"
          },
          "start_sales_date": {
            "$ref": "#/components/schemas/datetime-tz"
          },
          "message": {
            "type": "string",
            "description": "Custom message associated with the current event sales status."
          },
          "message_type": {
            "$ref": "#/components/schemas/message_type"
          },
          "message_code": {
            "$ref": "#/components/schemas/message_code"
          }
        }
      },
      "TicketClassConfirmationSettings": {
        "title": "TicketClassConfirmationSettings",
        "type": "object",
        "properties": {
          "ticket_class_id": {
            "type": "string",
            "description": "ID of the ticket class the confirmation settings apply to.",
            "example": "1023"
          },
          "event_id": {
            "type": "string",
            "description": "ID of the event this ticket class belongs to.",
            "example": "3003"
          },
          "confirmation_message": {
            "$ref": "#/components/schemas/multipart-text"
          }
        }
      },
      "EventTicketBuyerSettings": {
        "title": "EventTicketBuyerSettings",
        "type": "object",
        "properties": {
          "confirmation_message": {
            "$ref": "#/components/schemas/multipart-text"
          },
          "instructions": {
            "$ref": "#/components/schemas/multipart-text"
          },
          "event_id": {
            "type": "string",
            "description": "Public id of the event these ticket buyer settings come from.",
            "example": "3003"
          },
          "refund_request_enabled": {
            "type": "boolean",
            "description": "Are refund requests enabled for this event.",
            "example": false
          },
          "redirect_url": {
            "type": "string",
            "description": "URL to redirect the ticket buyer to for further purchase information."
          },
          "ticket_class_confirmation_settings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TicketClassConfirmationSettings"
            },
            "description": "List of confirmation messages per unique ticket class in the order."
          }
        }
      },
      "CheckoutSettings": {
        "title": "CheckoutSettings",
        "type": "object",
        "properties": {
          "created": {
            "type": "string",
            "nullable": true
          },
          "changed": {
            "type": "string",
            "nullable": true
          },
          "country_code": {
            "type": "string",
            "description": "The ISO 3166 alpha-2 code of the country within which these checkout settings can apply."
          },
          "currency_code": {
            "type": "string",
            "description": "The ISO 4217 3-character code of the currency for which these checkout settings can apply."
          },
          "checkout_method": {
            "$ref": "#/components/schemas/checkout_method"
          },
          "offline_settings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OfflineSettings"
            },
            "description": "A container for representing additional offline payment method checkout settings."
          },
          "user_instrument_vault_id": {
            "type": "string",
            "description": "The merchant account user instrument ID for the checkout method. Only specify this value for PayPal and Authorize.net checkout settings."
          }
        }
      },
      "OfflineSettings": {
        "title": "OfflineSettings",
        "type": "object",
        "properties": {
          "payment_method": {
            "$ref": "#/components/schemas/payment_method2"
          },
          "instructions": {
            "type": "string"
          }
        }
      },
      "ArtistExtendedData": {
        "title": "ArtistExtendedData",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The id for artist extended data."
          },
          "is_canonical": {
            "type": "boolean",
            "description": "True if the extended data is the original one, false otherwise."
          },
          "condition": {
            "$ref": "#/components/schemas/condition"
          },
          "biography": {
            "type": "string",
            "description": "The biography of the artist. It is a string of HTML (which should be sanitized and free from injected script, tags, etc. But as always, be careful what you put in your DOM)."
          },
          "genres": {
            "type": "array",
            "items": {},
            "description": "A list of genres for the artist."
          },
          "social_media_links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SocialMediaLink"
            },
            "description": "A list of social media links for an artist."
          },
          "images": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ArtistImageResponse"
            },
            "description": "A list of images for an artist."
          },
          "artist_id": {
            "type": "string",
            "description": "The artist that is represented.",
            "example": "2571667"
          },
          "name": {
            "type": "string",
            "description": "The artist's name.",
            "example": "Juan Quintero"
          },
          "name_slug": {
            "type": "string",
            "description": "Slugified name of the artist.",
            "example": "juan-quintero-2571667"
          }
        }
      },
      "SocialMediaLink": {
        "title": "SocialMediaLink",
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "description": "The proper url."
          },
          "link_type": {
            "$ref": "#/components/schemas/link_type"
          }
        }
      },
      "ArtistImageResponse": {
        "title": "ArtistImageResponse",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Image id from image_service."
          },
          "url": {
            "type": "string",
            "description": "The URL of the image."
          },
          "image_type": {
            "$ref": "#/components/schemas/image_type"
          },
          "width": {
            "type": "number",
            "description": "The width of the image in pixels."
          },
          "height": {
            "type": "number",
            "description": "The height of the image in pixels."
          },
          "thumb_url": {
            "type": "string",
            "description": "The URL of the thumb image."
          },
          "thumb_width": {
            "type": "number",
            "description": "The width of the thumb image in pixels."
          },
          "thumb_height": {
            "type": "number",
            "description": "The height of the thumb image in pixels."
          }
        }
      },
      "Performer": {
        "title": "Performer",
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "Id of the performer."
          },
          "display_name": {
            "type": "string",
            "description": "Performer's name. Defaults to the artist's name if not provided."
          },
          "role": {
            "$ref": "#/components/schemas/role1"
          },
          "sort_order": {
            "type": "number",
            "description": "Order within the event. Ascendant. Between 0-127. If needed, the `id` is the tiebreaker. Default: `0`."
          },
          "artist_id": {
            "type": "string",
            "description": "The artist that will be performing."
          },
          "hidden": {
            "type": "boolean",
            "description": "Performer's visibility."
          },
          "artist_extended_data_id": {
            "type": "string",
            "description": "The artist's representation."
          }
        }
      },
      "PerformerWithExpandedArtistExtendedData": {
        "title": "PerformerWithExpandedArtistExtendedData",
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "Id of the performer."
          },
          "display_name": {
            "type": "string",
            "description": "Performer's name. Defaults to the artist's name if not provided."
          },
          "role": {
            "$ref": "#/components/schemas/role1"
          },
          "sort_order": {
            "type": "number",
            "description": "Order within the event. Ascendant. Between 0-127. If needed, the `id` is the tiebreaker. Default: `0`."
          },
          "artist_id": {
            "type": "string",
            "description": "The artist that will be performing."
          },
          "hidden": {
            "type": "boolean",
            "description": "Performer's visibility."
          },
          "artist_extended_data_id": {
            "type": "string",
            "description": "The artist's representation."
          },
          "artist_extended_data": {
            "$ref": "#/components/schemas/ArtistExtendedData"
          }
        }
      },
      "ExternalIdentity": {
        "title": "ExternalIdentity",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The Id of the External Identity",
            "example": "1"
          },
          "user_id": {
            "type": "string",
            "description": "The Id of the Eventbrite's user.",
            "example": "1007"
          },
          "external_user_id": {
            "type": "string",
            "description": "The Id of the user at the external provider side.",
            "example": "12345"
          },
          "external_provider": {
            "$ref": "#/components/schemas/external_provider"
          }
        }
      },
      "EventTeamResponse": {
        "title": "EventTeamResponse",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Team ID",
            "example": "1"
          },
          "name": {
            "type": "string",
            "description": "Team name",
            "example": "Testing"
          },
          "creator": {
            "$ref": "#/components/schemas/creator"
          },
          "changed": {
            "type": "string",
            "nullable": true
          },
          "created": {
            "type": "string",
            "nullable": true
          },
          "attendee_count": {
            "type": "number",
            "description": "How many attendees the team have",
            "example": 2
          },
          "token": {
            "type": "string",
            "description": "Token"
          },
          "event_id": {
            "type": "string",
            "description": "The ID of the event this team is part of",
            "example": "12345"
          },
          "date_joined": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "EventTeamCreatorEmails": {
        "title": "EventTeamCreatorEmails",
        "type": "object",
        "properties": {
          "verified": {
            "type": "boolean",
            "description": "If the email is verified",
            "example": false
          },
          "primary": {
            "type": "boolean",
            "description": "If the email is the primary one",
            "example": true
          },
          "email": {
            "type": "string",
            "description": "The creator's email address",
            "example": "john@example.com"
          }
        }
      },
      "MediumLabels": {
        "title": "MediumLabels",
        "enum": [
          "email",
          "push_notification",
          "sms"
        ],
        "type": "string",
        "example": "email"
      },
      "ThemeType": {
        "title": "ThemeType",
        "enum": [
          "light",
          "dark"
        ],
        "type": "string",
        "example": "light"
      },
      "CampaignStats": {
        "title": "CampaignStats",
        "required": [
          "sent",
          "delivered",
          "open",
          "click",
          "unsubscribe",
          "spam",
          "bounce"
        ],
        "type": "object",
        "properties": {
          "sent": {
            "type": "number",
            "description": "The amount of campaigns sent.",
            "example": 0
          },
          "delivered": {
            "type": "number",
            "description": "The amount of campaigns delivered.",
            "example": 0
          },
          "open": {
            "type": "number",
            "description": "The amount of campaigns opened.",
            "example": 0
          },
          "click": {
            "type": "number",
            "description": "The amount of campaigns clicked on.",
            "example": 0
          },
          "unsubscribe": {
            "type": "number",
            "description": "The amount of contacts who've unsubscribed .",
            "example": 0
          },
          "spam": {
            "type": "number",
            "description": "The amount of campaigns marked as spam.",
            "example": 0
          },
          "bounce": {
            "type": "number",
            "description": "The amount of campaigns that have bounced while sending.",
            "example": 0
          }
        }
      },
      "Campaign": {
        "title": "Campaign",
        "required": [
          "id",
          "name",
          "subject",
          "reply_to",
          "from_name",
          "medium",
          "template_id",
          "theme_id",
          "organization_id",
          "organization_metadata_id",
          "creator_id",
          "created",
          "status",
          "stats"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the campaign.",
            "example": "12345"
          },
          "name": {
            "type": "string",
            "description": "The name of the campaign.",
            "example": "Alec's Campaign"
          },
          "subject": {
            "type": "string",
            "description": "The subject of the campaign.",
            "example": "World's Best campaign"
          },
          "reply_to": {
            "type": "string",
            "description": "The email reply to email for the campaign.",
            "example": "alec.richardson@eventbrite.com"
          },
          "from_name": {
            "type": "string",
            "description": "The name the campaign is from.",
            "example": "Alec Richardsin"
          },
          "time_to_send": {
            "type": "string",
            "nullable": true
          },
          "medium": {
            "$ref": "#/components/schemas/MediumLabels"
          },
          "body_message": {
            "type": "string",
            "description": "The body message of the campaign.",
            "nullable": true,
            "example": "null"
          },
          "template_id": {
            "type": "string",
            "description": "The ID of the campaigns template.",
            "example": "12345"
          },
          "theme_id": {
            "type": "string",
            "description": "The ID of the campaigns theme.",
            "example": "12345"
          },
          "organization_id": {
            "type": "string",
            "description": "The ID of the campagins organization.",
            "example": "12345"
          },
          "organization_metadata_id": {
            "type": "string",
            "description": "The ID of the campaigns organization metadata.",
            "example": "12345"
          },
          "creator_id": {
            "type": "string",
            "description": "The ID of the campaigns creator.",
            "example": "12345"
          },
          "created": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/status5"
          },
          "stats": {
            "$ref": "#/components/schemas/CampaignStats"
          }
        }
      },
      "CampaignEventUpdate": {
        "title": "CampaignEventUpdate",
        "required": [
          "id",
          "featured"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the campaign to add events.",
            "example": "12345"
          },
          "featured": {
            "type": "boolean",
            "description": "Whether or not the event should be featured.",
            "example": true
          }
        }
      },
      "EventCampaign": {
        "title": "EventCampaign",
        "type": "object",
        "properties": {
          "event_id": {
            "type": "string",
            "description": "ID of the event associated to the campaign",
            "example": "1234"
          },
          "campaign_id": {
            "type": "string",
            "description": "ID of the campaign associated to the event",
            "example": "9876"
          }
        }
      },
      "ThemeUpdate": {
        "title": "ThemeUpdate",
        "type": "object",
        "properties": {
          "background_color": {
            "type": "string",
            "description": "The hexadecimal value of the campaign background color.",
            "example": "#FFFFFF"
          },
          "primary_color": {
            "type": "string",
            "description": "The hexadecimal value of the campaign primary color.",
            "example": "#FFFFFF"
          },
          "header_image_id": {
            "type": "string",
            "description": "The ID of the campaigns header image.",
            "nullable": true,
            "example": "12345"
          },
          "header_image_link": {
            "type": "string",
            "description": "The URL of the header image's link.",
            "nullable": true,
            "example": "https://www.quarkworks.co"
          },
          "header_image_alt_text": {
            "type": "string",
            "description": "The hover text that displays on the header image link.",
            "nullable": true,
            "example": "QuarkWorks"
          },
          "theme_type": {
            "$ref": "#/components/schemas/ThemeType"
          },
          "background_image_id": {
            "type": "string",
            "description": "The ID of the campaigns background image.",
            "nullable": true,
            "example": "12345"
          }
        }
      },
      "CampaignTemplate": {
        "title": "CampaignTemplate",
        "required": [
          "id",
          "name",
          "organization",
          "creator_id",
          "body"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the campaign template.",
            "example": "12345"
          },
          "name": {
            "type": "string",
            "description": "The name of the campaign template.",
            "example": "My Template"
          },
          "organization": {
            "type": "string",
            "description": "The ID of the organization tied to a template.",
            "example": "12345"
          },
          "creator_id": {
            "type": "string",
            "description": "The ID of the creator of the campaign template.",
            "example": "12345"
          },
          "body": {
            "type": "string",
            "description": "The body of a campaign template."
          }
        }
      },
      "OrganizationMetadataUpdate": {
        "title": "OrganizationMetadataUpdate",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name tied to an organization.",
            "example": "Alec Richardson"
          },
          "events_url": {
            "type": "string",
            "description": "The event URL of an organization.",
            "example": "https://quarkworks.co"
          },
          "logo_id": {
            "type": "string",
            "description": "The logo ID of an organization.",
            "example": "12345"
          },
          "facebook_url": {
            "type": "string",
            "description": "The facebook URL of an organization.",
            "example": "https://www.facebook.com/quarkworks"
          },
          "instagram_url": {
            "type": "string",
            "description": "The instagram URL of an organization.",
            "example": "https://www.instagram.com/quarkworks"
          },
          "twitter_url": {
            "type": "string",
            "description": "The twitter URL of an organization.",
            "example": "https://www.twitter.com/quarkworks"
          }
        }
      },
      "OrganizationAddressUpdate": {
        "title": "OrganizationAddressUpdate",
        "type": "object",
        "properties": {
          "address_1": {
            "type": "string",
            "description": "The primary address of an organization.",
            "example": "4 S 9th st"
          },
          "address_2": {
            "type": "string",
            "description": "The secondary address of an organization.",
            "example": "Suite 202"
          },
          "city": {
            "type": "string",
            "description": "The city of an organization.",
            "example": "Columbia"
          },
          "region": {
            "type": "string",
            "description": "The region of an organization.",
            "example": "MO"
          },
          "postal_code": {
            "type": "string",
            "description": "The postal code of an organization.",
            "example": "65202"
          },
          "country": {
            "type": "string",
            "description": "The country of an organization.",
            "example": "United States"
          }
        }
      },
      "ContactListType": {
        "title": "ContactListType",
        "enum": [
          "Purchasers"
        ],
        "type": "string",
        "example": "Purchasers"
      },
      "Contact": {
        "title": "Contact",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The contactâ€™s name. Use this in preference to first_name/last_name if possible for forward compatability with non-Western names."
          },
          "first_name": {
            "type": "string",
            "description": "The contactâ€™s first name"
          },
          "last_name": {
            "type": "string",
            "description": "The contactâ€™s last name"
          },
          "email": {
            "type": "string",
            "description": "The contactâ€™s email address"
          },
          "created": {
            "type": "string",
            "description": "When this contact was created"
          }
        }
      },
      "ContactListShort": {
        "title": "ContactListShort",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the contact list"
          },
          "user_id": {
            "type": "string",
            "description": "The user who owns this contact list"
          }
        }
      },
      "ContactList": {
        "title": "ContactList",
        "required": [
          "id",
          "name",
          "medium",
          "organization_id",
          "creator_id",
          "subscriber_count"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the contact list item.",
            "example": "12345"
          },
          "name": {
            "type": "string",
            "description": "The contact list name.",
            "example": "ListName"
          },
          "medium": {
            "$ref": "#/components/schemas/MediumLabels"
          },
          "organization_id": {
            "type": "string",
            "description": "The ID of the organization the contact belongs too.",
            "example": "12345"
          },
          "creator_id": {
            "type": "string",
            "description": "The ID of the user who created the contact list.",
            "example": "12345"
          },
          "subscriber_count": {
            "type": "number",
            "description": "The amount of subscribed contacts in the list.",
            "example": 1000
          },
          "contact_list_type": {
            "$ref": "#/components/schemas/ContactListType"
          }
        }
      },
      "ContactListItemCreate": {
        "title": "ContactListItemCreate",
        "required": [
          "contact"
        ],
        "type": "object",
        "properties": {
          "first_name": {
            "type": "string",
            "description": "The first name of the contact list item.",
            "example": "Alec"
          },
          "last_name": {
            "type": "string",
            "description": "The last name of the contact list item.",
            "example": "Richardson"
          },
          "contact": {
            "type": "string",
            "description": "The email address of the contact list item.",
            "example": "alec.richardson@eventbrite.com"
          }
        }
      },
      "ContactListItem": {
        "title": "ContactListItem",
        "required": [
          "id",
          "contact",
          "contact_list_id",
          "contact_list_name",
          "medium"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the contact list item.",
            "example": "12345"
          },
          "contact": {
            "type": "string",
            "description": "The contact information of the contact.",
            "example": "alec.richardson@eventbrite.com"
          },
          "contact_list_id": {
            "type": "string",
            "description": "The ID of the contact list the item belongs to.",
            "example": "12345"
          },
          "contact_list_name": {
            "type": "string",
            "description": "The name of the contact list the item belongs too.",
            "example": "MyListName"
          },
          "first_name": {
            "type": "string",
            "description": "The first name of the contact list item.",
            "example": "Alec"
          },
          "last_name": {
            "type": "string",
            "description": "The last name of the contact list item.",
            "example": "Richardson"
          },
          "medium": {
            "$ref": "#/components/schemas/MediumLabels"
          },
          "when_opted_out": {
            "type": "string",
            "nullable": true
          },
          "deliverability": {
            "$ref": "#/components/schemas/deliverability"
          }
        }
      },
      "ItemType": {
        "title": "ItemType",
        "enum": [
          "s3_asset",
          "local_template"
        ],
        "type": "string",
        "example": "s3_asset"
      },
      "ScheduleItemStatus": {
        "title": "ScheduleItemStatus",
        "enum": [
          "queued",
          "sending",
          "sent",
          "cancelled",
          "incomplete"
        ],
        "type": "string",
        "example": "queued"
      },
      "SponsorOfferEmail": {
        "title": "SponsorOfferEmail",
        "required": [
          "offer_id",
          "organization_id",
          "event_id",
          "creator_id",
          "recipient_id",
          "package_type",
          "net_creator_value"
        ],
        "type": "object",
        "properties": {
          "offer_id": {
            "type": "string",
            "description": "The ID of the offer email.",
            "example": "12345"
          },
          "organization_id": {
            "type": "string",
            "description": "ID of the sponsor organization.",
            "example": "12345"
          },
          "event_id": {
            "type": "string",
            "description": "ID of the event being sponsored.",
            "example": "12345"
          },
          "creator_id": {
            "type": "string",
            "description": "The ID of the user who created the email.",
            "example": "12345"
          },
          "recipient_id": {
            "type": "string",
            "description": "The ID of the emails recipient.",
            "example": "12345"
          },
          "package_type": {
            "type": "string",
            "description": "Description of the type of package being offered.",
            "example": "test"
          },
          "package_image_id": {
            "type": "string",
            "description": "The ID of the package image.",
            "example": "12345"
          },
          "package_description": {
            "type": "string",
            "description": "The description of your package.",
            "example": "My description."
          },
          "net_creator_value": {
            "$ref": "#/components/schemas/CurrencyCost"
          },
          "decline_reason": {
            "type": "string",
            "description": "The reason why an offer is declined.",
            "example": "Not qualified."
          },
          "sponsoring_event_ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The event IDs to be used as assets in offers."
          },
          "dry_run": {
            "type": "boolean",
            "description": "True will only send the email to Eventbrite employees.",
            "example": false
          }
        }
      },
      "TemplateEmailScheduleItem": {
        "title": "TemplateEmailScheduleItem",
        "required": [
          "id",
          "organization_id",
          "creator_id",
          "medium",
          "item_type",
          "status",
          "filename",
          "context"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID of the sent item.",
            "example": "12345"
          },
          "organization_id": {
            "type": "string",
            "description": "ID of the organization.",
            "example": "12345"
          },
          "creator_id": {
            "type": "string",
            "description": "The ID of the user who created the email.",
            "example": "12345"
          },
          "medium": {
            "$ref": "#/components/schemas/MediumLabels"
          },
          "item_type": {
            "$ref": "#/components/schemas/ItemType"
          },
          "time_to_send": {
            "$ref": "#/components/schemas/datetime-tz"
          },
          "time_send_completed": {
            "$ref": "#/components/schemas/datetime-tz"
          },
          "status": {
            "$ref": "#/components/schemas/ScheduleItemStatus"
          },
          "filename": {
            "type": "string",
            "description": "The name of the file to be emailed.",
            "example": "MyFile"
          },
          "context": {
            "$ref": "#/components/schemas/context"
          }
        }
      },
      "S3EmailScheduleItemCreate": {
        "title": "S3EmailScheduleItemCreate",
        "required": [
          "filename",
          "timezone"
        ],
        "type": "object",
        "properties": {
          "filename": {
            "type": "string",
            "description": "The name of the file to be emailed.",
            "example": "MyFile"
          },
          "time_to_send": {
            "type": "string",
            "description": "01-31T13:00:00Z (datetime, required) - The time to send the email.",
            "example": "2019"
          },
          "timezone": {
            "type": "string",
            "description": "The timezone the email was scheduled to send in.",
            "example": "UTC"
          }
        }
      },
      "S3EmailScheduleItem": {
        "title": "S3EmailScheduleItem",
        "required": [
          "id",
          "filename",
          "medium",
          "item_type",
          "status"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The id of the schedule item.",
            "example": "12345"
          },
          "filename": {
            "type": "string",
            "description": "The name of the file to be emailed.",
            "example": "MyFile"
          },
          "medium": {
            "$ref": "#/components/schemas/MediumLabels"
          },
          "item_type": {
            "$ref": "#/components/schemas/ItemType"
          },
          "time_to_send": {
            "type": "string",
            "description": "01-31T13:00:00Z (datetime, nullable) - The time to send the email.",
            "example": "2019"
          },
          "time_send_started": {
            "type": "string",
            "description": "01-32T13:00:00Z (datetime, nullable) - The time the sending process started.",
            "example": "2019"
          },
          "time_send_completed": {
            "type": "string",
            "description": "01-31T15:35:00Z (datetime, nullable) - The time the sending process completed.",
            "example": "2019"
          },
          "status": {
            "$ref": "#/components/schemas/ScheduleItemStatus"
          },
          "organization_id": {
            "type": "string",
            "description": "The ID of the organization that the email was sent from.",
            "nullable": true,
            "example": "12345"
          },
          "creator_id": {
            "type": "string",
            "description": "The ID of the user who created the schedule item.",
            "nullable": true,
            "example": "12345"
          }
        }
      },
      "CrossEventDiscount": {
        "title": "CrossEventDiscount",
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Code used to activate discount.",
            "example": "summer2018"
          },
          "type": {
            "$ref": "#/components/schemas/type2"
          },
          "end_date": {
            "type": "string",
            "description": "01-01T10:00:00 (string) - The code will be usable until this date.",
            "example": "2018"
          },
          "end_date_relative": {
            "type": "number",
            "description": "The code will be usable until this amount of seconds before the event start."
          },
          "amount_off": {
            "type": "number",
            "description": "A fixed amount that is applied as a discount. It doesnâ€™t have a currency, it depends on the eventâ€™s currency from 0.01 to 99999.99. Only two decimals are allowed. Will be null for an access code."
          },
          "percent_off": {
            "type": "number",
            "description": "A percentage discount that will be applied on the ticket display price during the checkout, from 1.00 to 100.00. Only two decimals are allowed. Will be null for an access code.",
            "example": 15
          },
          "quantity_available": {
            "type": "number",
            "description": "The number of times this discount can be used, when 0 means â€œunlimitedâ€."
          },
          "quantity_sold": {
            "type": "number",
            "description": "The number of times the discount was used. This is a display only field, it cannot be written."
          },
          "start_date": {
            "type": "string",
            "description": "01-01T10:00:00 (string) - The code will be usable since this date.",
            "example": "2018"
          },
          "start_date_relative": {
            "type": "number",
            "description": "The code will be usable since this amount of seconds before the event start."
          },
          "ticket_class_ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "On single event discounts, the list of IDs of tickets that are part of event_id for which this discounts applies to. If empty, means â€œall the tickets of the eventâ€."
          },
          "event_id": {
            "type": "string",
            "description": "On single event discounts, the id of the Event this discount applies to. This is empty for cross event discounts.",
            "example": "3339494556677"
          },
          "ticket_group_id": {
            "type": "string",
            "description": "On cross event discounts, it is the id of the ticket group for which the discount applies to."
          },
          "hold_ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of hold IDs this discount can unlock. Null if this discount does not unlock a hold.",
            "nullable": true
          }
        }
      },
      "Error": {
        "title": "Error",
        "type": "object",
        "properties": {
          "error_description": {
            "type": "string",
            "description": "Description of the error"
          },
          "error_detail": {
            "type": "object"
          },
          "status_code": {
            "type": "number",
            "description": "HTTP status code of the error"
          }
        }
      },
      "ErrorWithoutDetail": {
        "title": "ErrorWithoutDetail",
        "type": "object",
        "properties": {
          "status_code": {
            "type": "number",
            "description": "HTTP status code of the error."
          },
          "error": {
            "type": "string",
            "description": "Error code."
          },
          "error_description": {
            "type": "string",
            "description": "Detailed description of the error."
          }
        }
      },
      "Pagination": {
        "title": "Pagination",
        "type": "object",
        "properties": {
          "object_count": {
            "type": "number",
            "description": "The total number of objects across all pages (optional)",
            "example": 1
          },
          "page_number": {
            "type": "number",
            "description": "The current page number (starts at 1)",
            "example": 1
          },
          "page_size": {
            "type": "number",
            "description": "The number of objects on each page (roughly)",
            "example": 1
          },
          "page_count": {
            "type": "number",
            "description": "The total number of pages (starting at 1) (optional)",
            "example": 1
          },
          "continuation": {
            "type": "string",
            "description": "A token to return to the server to get the next set of results (see â€œContinuated Responsesâ€ below)",
            "example": "dGhpcyBpcyBhIGNvbnRpbnVhdGlvbiB0b2tlbg"
          },
          "has_more_items": {
            "type": "boolean",
            "example": false
          }
        }
      },
      "FulfillmentSummary": {
        "title": "FulfillmentSummary",
        "type": "object",
        "properties": {
          "timezone": {
            "type": "string",
            "description": "Timezone"
          },
          "event_ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of public events IDs"
          },
          "data": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {}
            },
            "description": "A list of topics and totals."
          },
          "topics_totals": {
            "type": "array",
            "items": {
              "type": "number"
            },
            "description": "an array representing a list of aggregation topics to report data on."
          },
          "totals": {
            "$ref": "#/components/schemas/totals"
          }
        }
      },
      "ScheduledEmailReport": {
        "title": "ScheduledEmailReport",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Id of the report."
          },
          "report_name": {
            "type": "string",
            "description": "The name of the report. Max length: 100 characters. Will be truncated if more characters are sent."
          },
          "report_options": {
            "$ref": "#/components/schemas/report_options"
          },
          "schedule_frequency": {
            "$ref": "#/components/schemas/schedule_frequency"
          },
          "timezone": {
            "type": "string",
            "description": "Timezone in which to report in, IANA Timezone ID."
          },
          "report_status": {
            "$ref": "#/components/schemas/report_status"
          },
          "recipients": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The list of emails to send the report once is processed. The maximum length of recipient list is 10."
          }
        }
      },
      "ReportResponseAttendees": {
        "title": "ReportResponseAttendees",
        "type": "object",
        "properties": {
          "timezone": {
            "type": "string",
            "description": "Timezone.",
            "example": "America/Los_Angeles"
          },
          "event_ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of public event IDs."
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReportDataAttendees"
            },
            "description": ""
          }
        }
      },
      "ReportTotalsAttendees": {
        "title": "ReportTotalsAttendees",
        "type": "object",
        "properties": {
          "num_attendees": {
            "type": "number",
            "description": "Total of attendees",
            "example": 1
          },
          "num_orders": {
            "type": "number",
            "description": "Total of orders",
            "example": 10
          }
        }
      },
      "ReportResponseSales": {
        "title": "ReportResponseSales",
        "type": "object",
        "properties": {
          "timezone": {
            "type": "string",
            "description": "Timezone.",
            "example": "America/Los_Angeles"
          },
          "event_ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of public event IDs."
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReportDataSales"
            },
            "description": ""
          }
        }
      },
      "ReportDataSales": {
        "title": "ReportDataSales",
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "description": "When the event happens",
            "example": "2017-02-19T20:28:14Z"
          },
          "topics": {
            "type": "string",
            "example": "``"
          },
          "date_localized": {
            "type": "string",
            "description": "When the event happens with event Time Zone",
            "example": "2017-02-19T20:28:14Z"
          },
          "totals": {
            "$ref": "#/components/schemas/ReportTotalsSales"
          }
        }
      },
      "ReportTotalsSales": {
        "title": "ReportTotalsSales",
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "description": "ISO 4217 3-letter currency.",
            "example": "USD"
          },
          "gross": {
            "type": "number",
            "description": "The final price",
            "example": 0
          },
          "net": {
            "type": "number",
            "description": "Price without fees, taxes and royalties",
            "example": 0
          },
          "quantity": {
            "type": "number",
            "description": "Quantity",
            "example": 1
          },
          "fees": {
            "type": "number",
            "description": "The total amount fee",
            "example": 0
          },
          "royalty": {
            "type": "number",
            "description": "The total amount of royalties",
            "example": 0
          }
        }
      },
      "ReportDataAttendees": {
        "title": "ReportDataAttendees",
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "description": "When the event happens",
            "example": "2017-02-19T20:28:14Z"
          },
          "topics": {
            "type": "string",
            "example": "``"
          },
          "date_localized": {
            "type": "string",
            "description": "When the event happens with event Time Zone",
            "example": "2017-02-19T20:28:14Z"
          },
          "totals": {
            "$ref": "#/components/schemas/ReportTotalsAttendees"
          }
        }
      },
      "Timezone": {
        "title": "Timezone",
        "type": "object",
        "properties": {
          "timezone": {
            "type": "string",
            "description": "The timezone identifier as defined by the IANA Time Zone Database."
          },
          "label": {
            "type": "string",
            "description": "The localized name for the timezone"
          }
        }
      },
      "Region": {
        "title": "Region",
        "type": "object",
        "properties": {
          "country_code": {
            "type": "string",
            "description": "The associated country code to this region."
          },
          "code": {
            "type": "string",
            "description": "The region identifier as defined by the ISO 3166 standard."
          },
          "label": {
            "type": "string",
            "description": "The readable name of the region."
          }
        }
      },
      "Country": {
        "title": "Country",
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "The country identifier as defined by the ISO 3166 standard."
          },
          "label": {
            "type": "string",
            "description": "The readable name of the country."
          }
        }
      },
      "Paymentpublickey": {
        "title": "Paymentpublickey",
        "type": "object",
        "properties": {
          "hash": {
            "type": "string",
            "description": "Value that uniquely identifies the public key."
          },
          "pem": {
            "type": "string",
            "description": "Public key in PEM format."
          }
        }
      },
      "TrackingBeacon": {
        "title": "TrackingBeacon",
        "type": "object",
        "properties": {
          "event_id": {
            "type": "string",
            "description": "The id of the event where the tracking beacon will load your tracking pixel."
          },
          "user_id": {
            "type": "string",
            "description": "The id of the user where the tracking beacon will load this tracking pixel on all of their events."
          },
          "pixel_id": {
            "type": "string",
            "description": "The third party id that they have given you to fire on your event page."
          },
          "triggers": {
            "$ref": "#/components/schemas/Triggers"
          }
        }
      },
      "Triggers": {
        "title": "Triggers",
        "enum": [
          "event_listing",
          "event_register",
          "event_order_confirmation",
          "ticket_form_widget"
        ],
        "type": "string",
        "example": "event_listing"
      },
      "User": {
        "title": "User",
        "required": [
          "image_id"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Full name. Use this in preference to first_name/last_name if possible for forward compatibility with non-Western names.",
            "example": "John Smith"
          },
          "first_name": {
            "type": "string",
            "description": "First name",
            "example": "John"
          },
          "last_name": {
            "type": "string",
            "description": "Last name",
            "example": "Smith"
          },
          "is_public": {
            "type": "boolean",
            "description": "Is this user's profile public?",
            "example": false
          },
          "image_id": {
            "type": "string",
            "description": "The organization image id",
            "nullable": true,
            "example": "12345"
          },
          "emails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserEmail"
            },
            "description": "List of User Email objects"
          }
        }
      },
      "UserAddress": {
        "title": "UserAddress",
        "type": "object",
        "properties": {
          "address_1": {
            "type": "string",
            "example": "RepÃºblica del LÃ­bano"
          },
          "address_2": {
            "type": "string"
          },
          "city": {
            "type": "string",
            "example": "Mendoza"
          },
          "region": {
            "type": "string",
            "example": "Godoy Cruz"
          },
          "postal_code": {
            "type": "string",
            "example": "1234"
          },
          "country": {
            "type": "string",
            "description": "ISO 3166-1 2-character international code for the country",
            "example": "AR"
          },
          "phone": {
            "type": "string",
            "example": "1234"
          },
          "address_type": {
            "$ref": "#/components/schemas/address_type"
          },
          "asset_type: user_event_holder": {
            "$ref": "#/components/schemas/asset_typeuser_event_holder"
          }
        }
      },
      "UserEmail": {
        "title": "UserEmail",
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "Email address",
            "example": "john@smith.com"
          },
          "verified": {
            "type": "boolean",
            "description": "Has this email address been verified to belong to the user?",
            "example": true
          }
        }
      },
      "SeasonalBanner": {
        "title": "SeasonalBanner",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The unique name which indentifies the banner in the backend (It shouldn't be rendered)."
          },
          "banner_title": {
            "type": "string",
            "description": "Text of the banner title."
          },
          "banner_title_color_light": {
            "type": "string",
            "description": "Hex color code (without #) for the banner title in its light version.",
            "example": "A2B455"
          },
          "banner_title_color_dark": {
            "type": "string",
            "description": "Hex color code (without #) for the banner title in its dark version.",
            "example": "A2B455"
          },
          "banner_subtitle": {
            "type": "string",
            "description": "Text of the banner subtitle."
          },
          "banner_subtitle_color_light": {
            "type": "string",
            "description": "Hex color code (without #) for the banner subtitle in its light version.",
            "example": "A2B455"
          },
          "banner_subtitle_color_dark": {
            "type": "string",
            "description": "Hex color code (without #) for the banner subtitle in its dark version.",
            "example": "A2B455"
          },
          "background_color_light": {
            "type": "string",
            "description": "Hex color code (without #) for the background of the banner in its light version.",
            "example": "A2B455"
          },
          "background_color_dark": {
            "type": "string",
            "description": "Hex color code (without #) for the background of the banner in its dark version.",
            "example": "A2B455"
          },
          "web_image_url_light": {
            "type": "string",
            "description": "Url to get the banner image for web clients in its light version."
          },
          "web_image_url_dark": {
            "type": "string",
            "description": "Url to get the banner image for web clients in its light version."
          },
          "mobile_image_url_light": {
            "type": "string",
            "description": "Url to get the banner image for mobile clients in its light version."
          },
          "mobile_image_url_dark": {
            "type": "string",
            "description": "Url to get the banner image for mobile clients in its dark version."
          },
          "call_to_action_url": {
            "type": "string",
            "description": "Relative url (without www.eventbrite.com) of the collection or event to which this banner should redirect.",
            "example": "/c/abcd"
          },
          "button_text": {
            "type": "string",
            "description": "Text that will be rendered inside the banner button."
          },
          "button_text_color": {
            "type": "string",
            "description": "Hex color code (without #) for the text of the banner button.",
            "example": "A2B455"
          },
          "button_background_color": {
            "type": "string",
            "description": "Hex color code (without #) for the background of the banner button.",
            "example": "A2B455"
          }
        }
      },
      "CreateWebhook": {
        "title": "CreateWebhook",
        "required": [
          "endpoint_url"
        ],
        "type": "object",
        "properties": {
          "endpoint_url": {
            "type": "string",
            "description": "The URL that the webhook will send data to when triggered.",
            "example": "https://c3e123a02a37497897e08927816bb0c920c9de23c77804f.example.com"
          },
          "actions": {
            "$ref": "#/components/schemas/actions"
          },
          "event_id": {
            "type": "string",
            "description": "The Event ID that triggers this webhook. Leave blank for all events.",
            "example": "62541733007"
          }
        }
      },
      "Webhook": {
        "title": "Webhook",
        "allOf": [
          {
            "$ref": "#/components/schemas/CreateWebhook1"
          },
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "Webhook ID.",
                "example": "2006536"
              },
              "resource_uri": {
                "type": "string",
                "description": "The URI of the individual Webhook.",
                "example": "https://www.eventbriteapi.com/v3/webhooks/1990496/"
              },
              "created": {
                "type": "string",
                "nullable": true
              },
              "user_id": {
                "type": "string",
                "description": "The ID of the Organization that triggers this webhook.",
                "example": "308733706151"
              }
            }
          }
        ]
      },
      "Organization": {
        "title": "Organization",
        "required": [
          "name",
          "vertical",
          "image_id",
          "id"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The organization name",
            "example": "Awesome Org"
          },
          "vertical": {
            "type": "string",
            "description": "The organization vertical",
            "example": "default"
          },
          "image_id": {
            "type": "string",
            "description": "The organization image id",
            "nullable": true,
            "example": "12345"
          },
          "id": {
            "type": "string",
            "description": "The organization id",
            "example": "12345"
          }
        }
      },
      "Grant": {
        "title": "Grant",
        "required": [
          "id",
          "grantee_type",
          "user_id",
          "role_id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The grant id",
            "example": "12"
          },
          "grantee_type": {
            "enum": [
              "user"
            ],
            "type": "string",
            "description": "The name of the object to which the role is granted. Only â€˜userâ€™ is supported at the moment. In the future roles may be granted on more types of objects.",
            "example": "user"
          },
          "grantee_id":{
            "type": "string",
            "description": "The id of the object to which the role is granted. If grantee_type is â€˜userâ€™, then this field should have a user_id",
            "example": "226753143335"
          },
          "user_id": {
            "type": "string",
            "description": "The ID of the user to which the Role is granted on the Entity",
            "example": "226753143335"
          },
          "role_id": {
            "type": "string",
            "description": "The ID of the granted Role.",
            "example": "2"
          },
          "entity_type": {
            "$ref": "#/components/schemas/entity_type"
          },
          "entity_id: 789 (string, required) - The ID of the Entity on which the Role is granted (or NULL for \"global\"). DEPRECATED. Use specific `event_id` or `organization_id`": {
            "type": "string"
          },
          "event_id": {
            "type": "string",
            "description": "The ID of the event on which the Role is granted if entity type is event",
            "example": "789"
          },
          "organization_id": {
            "type": "string",
            "description": "The ID of the organization on which the Role is granted if entity type is user",
            "example": "254753143342"
          }
        }
      },
      "TextOverridesRequestContent": {
        "title": "TextOverridesRequestContent",
        "required": [
          "text_code"
        ],
        "type": "object",
        "properties": {
          "text_code": {
            "$ref": "#/components/schemas/text_code"
          },
          "message": {
            "type": "string",
            "description": "Custom message associated with the text code to override.",
            "example": "Event was postponed"
          },
          "message_code": {
            "$ref": "#/components/schemas/message_code1"
          }
        }
      },
      "TextOverridesResponseContent": {
        "title": "TextOverridesResponseContent",
        "required": [
          "text_code",
          "default_message",
          "message_type"
        ],
        "type": "object",
        "properties": {
          "text_code": {
            "$ref": "#/components/schemas/text_code"
          },
          "message": {
            "type": "string",
            "description": "Custom message associated with the text code to override.",
            "example": "Tickets will be online soon"
          },
          "message_code": {
            "$ref": "#/components/schemas/message_code1"
          },
          "default_message": {
            "type": "string",
            "description": "default internationalized message for the specified code",
            "example": "Sales Ended"
          },
          "message_type": {
            "$ref": "#/components/schemas/message_type1"
          }
        }
      },
      "VenueCreate": {
        "title": "VenueCreate",
        "allOf": [
          {
            "$ref": "#/components/schemas/VenueBase2"
          },
          {
            "type": "object",
            "properties": {
              "google_place_id": {
                "type": "string",
                "description": "The google place id for the venue"
              },
              "organizer_id": {
                "type": "string",
                "description": "The organizer this venue belongs to (optional - leave this off to use the default organizer)"
              },
              "address": {
                "$ref": "#/components/schemas/AddressRequest"
              }
            }
          }
        ]
      },
      "Discount": {
        "title": "Discount",
        "allOf": [
          {
            "$ref": "#/components/schemas/DiscountBase"
          },
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "Discount ID",
                "example": "12345"
              },
              "quantity_sold": {
                "type": "number",
                "description": "Number of discounts used during ticket sales",
                "example": 5
              }
            }
          }
        ]
      },
      "DiscountCreateError": {
        "title": "DiscountCreateError",
        "allOf": [
          {
            "$ref": "#/components/schemas/Error"
          },
          {
            "type": "object",
            "properties": {
              "error": {
                "$ref": "#/components/schemas/error1"
              }
            }
          }
        ]
      },
      "DiscountBase": {
        "title": "DiscountBase",
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/type3"
          },
          "code": {
            "type": "string",
            "description": "Code used to activate the discount",
            "example": "abcde"
          },
          "amount_off": {
            "type": "string",
            "description": "Fixed reduction amount. When creating access codes the default value is Null.",
            "example": "10"
          },
          "percent_off": {
            "type": "string",
            "description": "Percentage reduction. When creating access codes the default value is Null.",
            "example": "20"
          },
          "event_id": {
            "type": "string",
            "description": "ID of the event. Only used for single event discounts",
            "example": "12345"
          },
          "ticket_class_ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "IDs of the ticket classes to limit discount to"
          },
          "quantity_available": {
            "type": "number",
            "description": "Number of times the discount can be used",
            "example": 5
          },
          "start_date": {
            "type": "string",
            "description": "Allow use from this date. A datetime represented as a string in Naive Local ISO8601 date and time format, in the timezone of the event."
          },
          "start_date_relative": {
            "type": "number",
            "description": "Allow use from this number of seconds before the event starts. Greater than 59 and multiple of 60."
          },
          "end_date": {
            "type": "string",
            "description": "Allow use until this date. A datetime represented as a string in Naive Local ISO8601 date and time format, in the timezone of the event."
          },
          "end_date_relative": {
            "type": "number",
            "description": "Allow use until this number of seconds before the event starts. Greater than 59 and multiple of 60."
          },
          "ticket_group_id": {
            "type": "string",
            "description": "ID of the ticket group",
            "example": "12345"
          },
          "hold_ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of hold IDs this discount can unlock. Null if this discount does not unlock a hold."
          }
        }
      },
      "DisplaySettings": {
        "title": "DisplaySettings",
        "type": "object",
        "properties": {
          "show_start_date": {
            "type": "boolean",
            "description": "Whether to display the start date on the event listing",
            "example": true
          },
          "show_end_date": {
            "type": "boolean",
            "description": "Whether to display the end date on the event listing",
            "example": true
          },
          "show_start_end_time": {
            "type": "boolean",
            "description": "Whether to display event start and end time on the event listing",
            "example": true
          },
          "show_timezone": {
            "type": "boolean",
            "description": "Whether to display the event timezone on the event listing",
            "example": true
          },
          "show_map": {
            "type": "boolean",
            "description": "Whether to display a map to the venue on the event listing",
            "example": true
          },
          "show_remaining": {
            "type": "boolean",
            "description": "Whether to display the number of remaining tickets",
            "example": false
          },
          "show_organizer_facebook": {
            "type": "boolean",
            "description": "Whether to display a link to the organizerâ€™s Facebook profile",
            "example": false
          },
          "show_organizer_twitter": {
            "type": "boolean",
            "description": "Whether to display a link to the organizerâ€™s Twitter profile",
            "example": false
          },
          "show_facebook_friends_going": {
            "type": "boolean",
            "description": "Whether to display which of the userâ€™s Facebook friends are going",
            "example": false
          },
          "terminology": {
            "$ref": "#/components/schemas/terminology"
          }
        }
      },
      "local-datetime": {
        "title": "local-datetime",
        "required": [
          "local"
        ],
        "type": "object",
        "properties": {
          "local": {
            "type": "string",
            "description": "The time in the timezone of the event",
            "example": "2018-05-11T19:00:00"
          }
        }
      },
      "EventSeriesDate": {
        "title": "EventSeriesDate",
        "required": [
          "start",
          "end"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Event Series Id",
            "example": "12345"
          },
          "start": {
            "$ref": "#/components/schemas/datetime-tz"
          },
          "end": {
            "$ref": "#/components/schemas/datetime-tz"
          },
          "url": {
            "type": "string",
            "description": "The URL to the event page for this event on Eventbrite",
            "example": "https://www.eventbrite.com/e/45263283700"
          },
          "status": {
            "$ref": "#/components/schemas/status7"
          },
          "locale": {
            "type": "string",
            "description": "The event locale",
            "example": "en_US"
          }
        }
      },
      "EventTextsRequest": {
        "title": "EventTextsRequest",
        "type": "object",
        "properties": {
          "event_text_code": {
            "$ref": "#/components/schemas/EventTextsRequestContent"
          }
        }
      },
      "EventTextsRequestContent": {
        "title": "EventTextsRequestContent",
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Custom message associated to the event text code we want to override."
          },
          "message_code": {
            "$ref": "#/components/schemas/message_code3"
          }
        }
      },
      "EventTextsResponse": {
        "title": "EventTextsResponse",
        "type": "object",
        "properties": {
          "locale": {
            "type": "string",
            "example": "en_US"
          },
          "event_text_code": {
            "$ref": "#/components/schemas/EventTextsContent"
          }
        }
      },
      "EventTextsContent": {
        "title": "EventTextsContent",
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "message_type": {
            "$ref": "#/components/schemas/message_type2"
          },
          "message_code": {
            "$ref": "#/components/schemas/message_code4"
          },
          "default_message": {
            "type": "string",
            "description": "default internationalized message for the specified code"
          }
        }
      },
      "EventCopy": {
        "title": "EventCopy",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the new event"
          },
          "start_date": {
            "type": "string",
            "description": "01-31T13:00:00Z (datetime, optional) - The start time of the new event",
            "example": "2019"
          },
          "end_date": {
            "type": "string",
            "description": "01-31T13:00:00Z (datetime, optional) - The end time of the new event",
            "example": "2019"
          },
          "timezone": {
            "type": "string",
            "description": "Timezone for the new event (Olson format)"
          },
          "summary": {
            "type": "string",
            "description": "The summary of the new event"
          }
        }
      },
      "EventCreate": {
        "title": "EventCreate",
        "required": [
          "name",
          "start",
          "end",
          "currency"
        ],
        "type": "object",
        "properties": {
          "name": {
            "$ref": "#/components/schemas/htmltext"
          },
          "summary": {
            "type": "string",
            "description": "Event summary. This is a plaintext field and will have any supplied HTML removed from it. Maximum of 140 characters, mutually exclusive with `description`."
          },
          "description": {
            "$ref": "#/components/schemas/htmltext"
          },
          "start": {
            "$ref": "#/components/schemas/datetime-tz-utc"
          },
          "end": {
            "$ref": "#/components/schemas/datetime-tz-utc"
          },
          "hide_start_date": {
            "type": "boolean",
            "description": "Whether the start date should be hidden"
          },
          "hide_end_date": {
            "type": "boolean",
            "description": "Whether the end date should be hidden"
          },
          "currency": {
            "type": "string",
            "description": "The ISO 4217 currency code for this event",
            "example": "USD"
          },
          "online_event": {
            "type": "boolean",
            "description": "If this event doesn't have a venue and is only held online",
            "example": false
          },
          "organizer_id": {
            "type": "string",
            "description": "ID of the event organizer"
          },
          "logo_id": {
            "type": "string",
            "description": "Image ID of the event logo"
          },
          "venue_id": {
            "type": "string",
            "description": "Event venue ID"
          },
          "format_id": {
            "type": "string",
            "description": "Event format"
          },
          "category_id": {
            "type": "string",
            "description": "Event category"
          },
          "subcategory_id": {
            "type": "string",
            "description": "Event subcategory (US only)"
          },
          "listed": {
            "type": "boolean",
            "description": "Is this event publicly searchable on Eventbrite?",
            "example": false
          },
          "shareable": {
            "type": "boolean",
            "description": "Can this event show social sharing buttons?",
            "example": false
          },
          "invite_only": {
            "type": "boolean",
            "description": "Can only people with invites see the event page?",
            "example": false
          },
          "show_remaining": {
            "type": "boolean",
            "description": "If the remaining number of tickets is publicly visible on the event page",
            "example": true
          },
          "password": {
            "type": "string",
            "description": "Password needed to see the event in unlisted mode",
            "example": "12345"
          },
          "capacity": {
            "type": "number",
            "description": "Set specific capacity (if omitted, sums ticket capacities)",
            "example": 100
          },
          "is_reserved_seating": {
            "type": "boolean",
            "description": "If the event is reserved seating",
            "example": true
          },
          "is_series": {
            "type": "boolean",
            "description": "If the event is part of a series. Specifying this attribute as True during event creation will always designate the event as a series parent, never as a series occurrence. Series occurrences must be created through the `schedules` API and cannot be created using the `events` API.",
            "example": true
          },
          "show_pick_a_seat": {
            "type": "boolean",
            "description": "For reserved seating event, if attendees can pick their seats.",
            "example": true
          },
          "show_seatmap_thumbnail": {
            "type": "boolean",
            "description": "For reserved seating event, if venue map thumbnail visible on the event page.",
            "example": true
          },
          "show_colors_in_seatmap_thumbnail": {
            "type": "boolean",
            "description": "For reserved seating event, if venue map thumbnail should have colors on the event page.",
            "example": true
          },
          "source": {
            "type": "string",
            "description": "Source of the event (defaults to API)"
          },
          "locale": {
            "$ref": "#/components/schemas/Locale"
          }
        }
      },
      "Locale": {
        "title": "Locale",
        "enum": [
          "de_AT",
          "de_CH",
          "de_DE",
          "en_AU",
          "en_CA",
          "en_DK",
          "en_FI",
          "en_GB",
          "en_HK",
          "en_IE",
          "en_IN",
          "en_NZ",
          "en_SE",
          "en_US",
          "es_AR",
          "es_CL",
          "es_CO",
          "es_ES",
          "fr_BE",
          "fr_CA",
          "fr_CH",
          "fr_FR",
          "hi_IN",
          "it_IT",
          "nl_BE",
          "nl_NL",
          "pt_BR",
          "pt_PT"
        ],
        "type": "string",
        "example": "de_AT"
      },
      "EventUpdate": {
        "title": "EventUpdate",
        "type": "object",
        "properties": {
          "name": {
            "$ref": "#/components/schemas/htmltext"
          },
          "summary": {
            "type": "string",
            "description": "Event summary. This is a plaintext field and will have any supplied HTML removed from it. Maximum of 140 characters, mutually exclusive with `description`, and will replace `description` if provided."
          },
          "description": {
            "$ref": "#/components/schemas/htmltext"
          },
          "start": {
            "$ref": "#/components/schemas/datetime-tz-utc"
          },
          "end": {
            "$ref": "#/components/schemas/datetime-tz-utc"
          },
          "hide_start_date": {
            "type": "boolean",
            "description": "Whether the start date should be hidden"
          },
          "hide_end_date": {
            "type": "boolean",
            "description": "Whether the end date should be hidden"
          },
          "currency": {
            "type": "string",
            "description": "The ISO 4217 currency code for this event",
            "example": "USD"
          },
          "online_event": {
            "type": "boolean",
            "description": "If this event doesn't have a venue and is only held online",
            "example": false
          },
          "organizer_id": {
            "type": "string",
            "description": "ID of the event organizer"
          },
          "logo_id": {
            "type": "string",
            "description": "Image ID of the event logo"
          },
          "venue_id": {
            "type": "string",
            "description": "Event venue ID"
          },
          "format_id": {
            "type": "string",
            "description": "Event format"
          },
          "category_id": {
            "type": "string",
            "description": "Event category"
          },
          "subcategory_id": {
            "type": "string",
            "description": "Event subcategory (US only)"
          },
          "listed": {
            "type": "boolean",
            "description": "Is this event publicly searchable on Eventbrite?",
            "example": false
          },
          "shareable": {
            "type": "boolean",
            "description": "Can this event show social sharing buttons?",
            "example": false
          },
          "invite_only": {
            "type": "boolean",
            "description": "Can only people with invites see the event page?",
            "example": false
          },
          "show_remaining": {
            "type": "boolean",
            "description": "If the remaining number of tickets is publicly visible on the event page",
            "example": true
          },
          "password": {
            "type": "string",
            "description": "Password needed to see the event in unlisted mode",
            "example": "12345"
          },
          "capacity": {
            "type": "number",
            "description": "Set specific capacity (if omitted, sums ticket capacities)",
            "example": 100
          },
          "is_reserved_seating": {
            "type": "boolean",
            "description": "If the event is reserved seating",
            "example": true
          },
          "is_series": {
            "type": "boolean",
            "description": "If the event is part of a series. This attribute is mutable only for unpublished events that are not in a series, or unpublished series parents with no occurrences.",
            "example": true
          },
          "show_pick_a_seat": {
            "type": "boolean",
            "description": "For reserved seating event, if attendees can pick their seats.",
            "example": true
          },
          "show_seatmap_thumbnail": {
            "type": "boolean",
            "description": "For reserved seating event, if venue map thumbnail visible on the event page.",
            "example": true
          },
          "show_colors_in_seatmap_thumbnail": {
            "type": "boolean",
            "description": "For reserved seating event, if venue map thumbnail should have colors on the event page.",
            "example": true
          },
          "source": {
            "type": "string",
            "description": "Source of the event (defaults to API)"
          }
        }
      },
      "BasicInventoryInfo": {
        "title": "BasicInventoryInfo",
        "type": "object",
        "properties": {
          "has_inventory_tiers": {
            "type": "boolean",
            "description": "True if the event has 1 or more inventory tiers"
          },
          "has_add_ons": {
            "type": "boolean",
            "description": "True if the event has 1 or more inventory tiers where count_against_event_capacity is False"
          },
          "has_ticket_classes": {
            "type": "boolean",
            "description": "True if the event has 1 or more ticket classes"
          },
          "has_donations": {
            "type": "boolean",
            "description": "True if the event has 1 or more ticket classes where `is_donation` is True"
          },
          "has_ticket_rules": {
            "type": "boolean",
            "description": "True if the event has 1 or more ticket rules"
          },
          "has_admission_tiers": {
            "type": "boolean",
            "description": "True if event has 1 or more admission inventory tiers"
          },
          "has_holds": {
            "type": "boolean",
            "description": "True if an event has any type of hold (reserved, GA section, or event capacity)"
          }
        }
      },
      "MediaUpload": {
        "title": "MediaUpload",
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The type of image to upload"
          }
        }
      },
      "MediaUploadPost": {
        "title": "MediaUploadPost",
        "required": [
          "upload_token"
        ],
        "type": "object",
        "properties": {
          "upload_token": {
            "type": "string",
            "description": "The upload_token from the GET portion of the upload",
            "example": "abc123"
          },
          "crop_mask": {
            "$ref": "#/components/schemas/CropMask"
          }
        }
      },
      "Role": {
        "title": "Role",
        "required": [
          "id",
          "name",
          "description",
          "organization_id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The role id",
            "example": "12345"
          },
          "name": {
            "type": "string",
            "description": "The role name",
            "example": "boxoffice"
          },
          "description": {
            "type": "string",
            "description": "The role description",
            "example": "Boxoffice Management on events"
          },
          "organization_id": {
            "type": "string",
            "description": "The owning organization id",
            "example": "226753167503"
          },
          "permissions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "immutable": {
            "type": "boolean",
            "description": "boolean indicating whether the role can be edited or not",
            "example": false
          },
          "grantable": {
            "type": "boolean",
            "description": "boolean indicating whether the role can be granted or not",
            "example": true
          },
          "deletable": {
            "type": "boolean",
            "description": "boolean indicating whether the role can be deleted or not",
            "example": true
          },
          "permission_type": {
            "$ref": "#/components/schemas/permission_type"
          }
        }
      },
      "Continuation": {
        "title": "Continuation",
        "type": "object",
        "properties": {
          "continuation": {
            "type": "string",
            "description": "Link to the next page",
            "example": "dGhpcyBpcyBhIGNvbnRpbnVhdGlvbiB0b2tlbg"
          },
          "has_more_items": {
            "type": "boolean",
            "description": "Is there another page of results",
            "example": false
          }
        }
      },
      "FeeRate": {
        "title": "FeeRate",
        "type": "object",
        "properties": {
          "fixed": {
            "$ref": "#/components/schemas/CurrencyCost"
          },
          "maximum": {
            "$ref": "#/components/schemas/CurrencyCost"
          },
          "minimum": {
            "$ref": "#/components/schemas/CurrencyCost"
          },
          "country": {
            "type": "string",
            "description": "The (ISO 3166 alpha-2 code of the) country.",
            "example": "US"
          },
          "currency": {
            "type": "string",
            "description": "The (ISO 4217 3-character code of the) currency.",
            "example": "USD"
          },
          "fee_name: payment_fee": {
            "$ref": "#/components/schemas/fee_namepayment_fee"
          },
          "plan": {
            "$ref": "#/components/schemas/plan"
          },
          "payment_type": {
            "$ref": "#/components/schemas/payment_type2"
          },
          "channel": {
            "$ref": "#/components/schemas/channel"
          },
          "item_type": {
            "$ref": "#/components/schemas/item_type1"
          },
          "percent": {
            "type": "string",
            "description": "FeeRate rule percent. Minimum value is â€˜0â€™, maximum value is â€˜100â€™. Supports two decimals.",
            "example": "2.50"
          }
        }
      },
      "Pricingresponseforitems": {
        "title": "Pricingresponseforitems",
        "type": "object",
        "properties": {
          "organizer_share": {
            "$ref": "#/components/schemas/CurrencyCost"
          },
          "total_fees": {
            "$ref": "#/components/schemas/CurrencyCost"
          },
          "total_taxes": {
            "$ref": "#/components/schemas/CurrencyCost"
          },
          "total_price": {
            "$ref": "#/components/schemas/CurrencyCost"
          }
        }
      },
      "TicketGroup": {
        "title": "TicketGroup",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the ticket group. If it is greater than 20 characters will be truncated automatically.",
            "example": "Ticket Group Example"
          },
          "status": {
            "type": "string",
            "description": "The status of the ticket group. One of transfer, live, deleted or archived. By default is live if not specified.",
            "example": "live"
          },
          "event_ticket_ids": {
            "type": "string",
            "description": "A dictionary with the event ids and ticket ids, in the form `{event_id: [ticket_id_1, ticket_id_2]}`",
            "example": {
              "1": [
                "12345"
              ]
            }
          },
          "tickets": {
            "type": "object",
            "description": "<!-- ticket-class.apib -->"
          }
        }
      },
      "TicketGroupCreate": {
        "title": "TicketGroupCreate",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the ticket group. If it is greater than 20 characters will be truncated automatically.",
            "example": "Ticket Group Example"
          },
          "status": {
            "type": "string",
            "description": "The status of the ticket group. One of transfer, live, deleted or archived. By default is live if not specified.",
            "example": "live"
          },
          "event_ticket_ids": {
            "type": "string",
            "description": "A dictionary with the event ids and ticket ids, in the form `{event_id: [ticket_id_1, ticket_id_2]}`",
            "example": {
              "1": [
                "12345"
              ]
            }
          }
        }
      },
      "TicketClass": {
        "title": "TicketClass",
        "allOf": [
          {
            "$ref": "#/components/schemas/PublicTicketClass"
          },
          {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of this ticket class.",
                "nullable": true,
                "example": "GA"
              },
              "display_name": {
                "type": "string",
                "description": "Pretty long name of this ticket class. For tiered inventory tickets, this includes the tier name.",
                "nullable": true,
                "example": "Gold GA"
              },
              "sorting": {
                "type": "number",
                "description": "Sorting determines the order in which ticket classes are listed during purchase flow on the event listing page. Always populated when requested by a user with proper permissions. Defaults to 0 if not supplied on creation. Values are listed in ascending order; if ticket classes have the same sorting value, they are sorted by creation date.",
                "nullable": true,
                "example": 2
              },
              "capacity": {
                "type": "number",
                "description": "Total capacity of this ticket. For donation ticket, null means unlimited. For tiered inventory ticket, null means capacity is only limited by tier capacity and/or event capacity.",
                "nullable": true,
                "example": 100
              },
              "quantity_total": {
                "type": "number",
                "description": "Total available number of this ticket, limited by the the smallest of event capacity, inventory tier capacity, and ticket capacity. For donation ticket, 0 means unlimited.",
                "nullable": true,
                "example": 1000
              },
              "quantity_sold": {
                "type": "number",
                "description": "The number of sold tickets.",
                "nullable": true,
                "example": 20
              },
              "sales_start": {
                "type": "string",
                "nullable": true
              },
              "sales_end": {
                "type": "string",
                "nullable": true
              },
              "hidden": {
                "type": "boolean",
                "description": "Hide this ticket",
                "nullable": true,
                "example": false
              },
              "include_fee": {
                "type": "boolean",
                "description": "Absorb the fee into the displayed cost",
                "nullable": true,
                "example": false
              },
              "split_fee": {
                "type": "boolean",
                "description": "Absorb the payment fee, but show the eventbrite fee",
                "nullable": true,
                "example": false
              },
              "hide_description": {
                "type": "boolean",
                "description": "Hide the ticket description on the event page",
                "nullable": true,
                "example": false
              },
              "hide_sale_dates": {
                "type": "boolean",
                "description": "Hide the sale dates on event landing and ticket selection page",
                "nullable": true,
                "example": false
              },
              "auto_hide": {
                "type": "boolean",
                "description": "Hide this ticket when it is not on sale",
                "nullable": true,
                "example": false
              },
              "auto_hide_before": {
                "type": "string",
                "nullable": true
              },
              "auto_hide_after": {
                "type": "string",
                "nullable": true
              },
              "sales_start_after": {
                "type": "string",
                "description": "The ID of another ticket class - when it sells out, this class will go on sale.",
                "nullable": true
              },
              "order_confirmation_message": {
                "type": "string",
                "description": "Order message per ticket type",
                "nullable": true,
                "example": "Success!"
              },
              "sales_channels": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "A list of all supported sales channels",
                "nullable": true
              },
              "inventory_tier_id": {
                "type": "string",
                "description": "Optional ID of Inventory Tier with which to associate the ticket class",
                "nullable": true
              },
              "secondary_assignment_enabled": {
                "type": "boolean",
                "description": "Has secondary barcode assignment enabled (for ex/ RFID)",
                "example": false
              }
            }
          }
        ]
      },
      "TicketClassResponse": {
        "title": "TicketClassResponse",
        "allOf": [
          {
            "$ref": "#/components/schemas/TicketClass"
          },
          {
            "type": "object",
            "properties": {
              "category": {
                "$ref": "#/components/schemas/category2"
              }
            }
          }
        ]
      },
      "TicketClassForSaleResponse": {
        "title": "TicketClassForSaleResponse",
        "allOf": [
          {
            "$ref": "#/components/schemas/PublicTicketClass"
          },
          {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Pretty long name of this ticket class. For tiered inventory tickets, this includes the tier name.",
                "nullable": true,
                "example": "Gold GA"
              },
              "sales_start": {
                "type": "string",
                "nullable": true
              },
              "sales_end": {
                "type": "string",
                "nullable": true
              },
              "include_fee": {
                "type": "boolean",
                "description": "Absorb the fee into the displayed cost",
                "nullable": true,
                "example": false
              },
              "on_sale_status": {
                "$ref": "#/components/schemas/on_sale_status"
              },
              "variant_input_type": {
                "$ref": "#/components/schemas/variant_input_type"
              },
              "variants": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TicketVariantForSaleResponse"
                },
                "description": "A list of ticket variants for sale."
              }
            }
          }
        ]
      },
      "TicketClassCreate": {
        "title": "TicketClassCreate",
        "allOf": [
          {
            "$ref": "#/components/schemas/TicketClass1"
          },
          {
            "type": "object",
            "properties": {
              "cost": {
                "type": "string",
                "description": "Cost of the ticket (currently currency must match event currency) e.g. $45 would be \"USD,4500\"",
                "example": "USD,4500"
              },
              "description": {
                "type": "string",
                "description": "Description of the ticket"
              },
              "donation": {
                "type": "boolean",
                "description": "Is this a donation? (user-supplied cost)"
              },
              "free": {
                "type": "boolean",
                "description": "Is this a free ticket?"
              },
              "sales_end_relative": {
                "$ref": "#/components/schemas/sales_end_relative"
              },
              "minimum_quantity": {
                "type": "number",
                "description": "Minimum number per order"
              },
              "maximum_quantity": {
                "type": "number",
                "description": "Maximum number per order"
              },
              "has_pdf_ticket": {
                "type": "boolean",
                "description": "Whether to include pdf ticket or not"
              },
              "delivery_methods": {
                "type": "string",
                "description": "A list of the available delivery methods for this ticket class"
              },
              "ticket_classes (array[object], optional) - Internal use only.A list of ticket types formatted as: [{â€œidâ€: â€œ1234â€, â€œnameâ€: â€œTicket Nameâ€, â€œcostâ€: â€œUSD,25â€, â€œquantity_totalâ€": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": ""
              }
            }
          }
        ]
      },
      "TicketClassUpdate": {
        "title": "TicketClassUpdate",
        "allOf": [
          {
            "$ref": "#/components/schemas/TicketClassCreate1"
          },
          {
            "type": "object",
            "properties": {
              "image_id": {
                "type": "string",
                "description": "Image ID for this ticket class. Setting this to null will remove image from this ticket class.",
                "nullable": true,
                "example": "1234"
              },
              "name": {
                "type": "string",
                "description": "Name of this ticket type"
              },
              "sorting": {
                "type": "number",
                "description": "Unsigned number in the order ticket classes are sorted by."
              },
              "capacity": {
                "type": "number",
                "description": "Total available number of this ticket, required for non-donation and non-tiered ticket classes. For normal ticket, null or 0 is not allowed. For donation ticket, null or 0 means unlimited. For tiered inventory ticket, null or 0 means capacity is only limited by tier capacity and/or event capacity.",
                "nullable": true
              },
              "quantity_total": {
                "type": "number",
                "description": "Deprecated, use `capacity` instead."
              },
              "include_fee": {
                "type": "boolean",
                "description": "Absorb the fee into the displayed cost"
              },
              "split_fee": {
                "type": "boolean",
                "description": "Absorb the payment fee, but show the eventbrite fee"
              },
              "hide_description": {
                "type": "boolean",
                "description": "Hide the ticket description on the event page"
              },
              "sales_channels": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "A list of all supported sales channels ([â€œonlineâ€], [â€œonlineâ€, â€œatdâ€], [â€œatdâ€])"
              },
              "sales_start": {
                "type": "string",
                "nullable": true
              },
              "sales_end": {
                "type": "string",
                "nullable": true
              },
              "sales_start_after": {
                "type": "string",
                "description": "The ID of another ticket class - when it sells out, this class will go on sale."
              },
              "auto_hide": {
                "type": "boolean",
                "description": "Hide this ticket when it is not on sale"
              },
              "auto_hide_before": {
                "type": "string",
                "nullable": true
              },
              "auto_hide_after": {
                "type": "string",
                "nullable": true
              },
              "hidden": {
                "type": "boolean",
                "description": "Hide this ticket"
              },
              "order_confirmation_message": {
                "type": "string",
                "description": "Order message per ticket type"
              },
              "inventory_tier_id": {
                "type": "string",
                "description": "Optional ID of Inventory Tier with which to associate the ticket class"
              }
            }
          }
        ]
      },
      "PublicTicketClass": {
        "title": "PublicTicketClass",
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "Description of the ticket",
            "nullable": true,
            "example": "General Admission"
          },
          "donation": {
            "type": "boolean",
            "description": "Is this a donation? (user-supplied cost)",
            "nullable": true,
            "example": false
          },
          "free": {
            "type": "boolean",
            "description": "Is this a free ticket?",
            "nullable": true,
            "example": false
          },
          "minimum_quantity": {
            "type": "number",
            "description": "Minimum number per order",
            "nullable": true,
            "example": 1
          },
          "maximum_quantity": {
            "type": "number",
            "description": "Maximum number per order (blank uses default value)",
            "nullable": true,
            "example": 10
          },
          "delivery_methods": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A list of the available delivery methods for this ticket class",
            "nullable": true
          },
          "cost": {
            "$ref": "#/components/schemas/TicketClassCost"
          },
          "resource_uri": {
            "type": "string",
            "description": "Is an absolute URL to the API endpoint that will return you ticket class.",
            "example": "https://www.eventbriteapi.com/v3/events/1234/ticket_classes/12345/"
          },
          "image_id": {
            "type": "string",
            "description": "Image ID for this ticket class. null if no image is set.",
            "nullable": true,
            "example": "1234"
          }
        }
      },
      "TicketClassCost": {
        "title": "TicketClassCost",
        "type": "object",
        "properties": {
          "actual_cost": {
            "$ref": "#/components/schemas/CurrencyCost"
          },
          "actual_fee": {
            "$ref": "#/components/schemas/CurrencyCost"
          },
          "cost": {
            "$ref": "#/components/schemas/CurrencyCost"
          },
          "fee": {
            "$ref": "#/components/schemas/CurrencyCost"
          },
          "tax": {
            "$ref": "#/components/schemas/CurrencyCost"
          }
        }
      },
      "TicketVariantForSaleResponse": {
        "title": "TicketVariantForSaleResponse",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID of this ticket variant.",
            "example": "T12345"
          },
          "category": {
            "$ref": "#/components/schemas/category3"
          },
          "primary": {
            "type": "boolean",
            "description": "If this value is true, this ticket variant is the primary default variant of the ticket.\n\nFor public discounts, primary variant is the main \"Full Price\" ticket without discounts applied.   For reserved seating tiered inventory ticket, primary variant is the \"Best Available\" option.",
            "nullable": true,
            "example": true
          },
          "code": {
            "type": "string",
            "description": "Discount code or public discount name if discounted.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Name of this ticket variant.  For a primary default variant like \"Best Available\" or \"Full Price\", name is not returned.",
            "nullable": true,
            "example": "Admission"
          },
          "display_name": {
            "type": "string",
            "description": "Pretty long name of this ticket variant.  For tiered inventory tickets, this includes the tier name.   For public discount, this includes ticket class name and discount name.",
            "example": "Orchestra Admission"
          },
          "description": {
            "type": "string",
            "description": "Long description of this ticket variant if defined.",
            "nullable": true,
            "example": "Full price admission ticket"
          },
          "free": {
            "type": "boolean",
            "description": "whether this ticket variant is free.  for donation ticket variant, this value is false.",
            "example": false
          },
          "cost": {
            "$ref": "#/components/schemas/CurrencyCost"
          },
          "total_cost": {
            "$ref": "#/components/schemas/CurrencyCost"
          },
          "fee": {
            "$ref": "#/components/schemas/CurrencyCost"
          },
          "tax": {
            "$ref": "#/components/schemas/CurrencyCost"
          },
          "tax_and_fee": {
            "$ref": "#/components/schemas/CurrencyCost"
          },
          "original_cost": {
            "$ref": "#/components/schemas/CurrencyCost"
          },
          "original_total_cost": {
            "$ref": "#/components/schemas/CurrencyCost"
          },
          "original_fee": {
            "$ref": "#/components/schemas/CurrencyCost"
          },
          "original_tax": {
            "$ref": "#/components/schemas/CurrencyCost"
          },
          "on_sale_status": {
            "$ref": "#/components/schemas/on_sale_status1"
          },
          "amount_off": {
            "$ref": "#/components/schemas/CurrencyCost"
          },
          "percent_off": {
            "type": "string",
            "description": "Percentage of discount if this variant is discounted and if discount is defined as a percentage discount.",
            "nullable": true,
            "example": "25.0"
          },
          "color": {
            "type": "string",
            "description": "Hex representation of tier color if a color is defined for this ticket variant.",
            "nullable": true,
            "example": "#fac114"
          },
          "image_id": {
            "type": "string",
            "description": "Image ID for this ticket varint if image is set.",
            "nullable": true,
            "example": "1234"
          }
        }
      },
      "TicketRuleResponse": {
        "title": "TicketRuleResponse",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID of the ticket rule",
            "example": "1234"
          },
          "event_id": {
            "type": "string",
            "description": "ID of the event",
            "example": "1234"
          },
          "name": {
            "type": "string",
            "description": "Name of the ticket rule",
            "example": "Adult"
          },
          "description": {
            "type": "string",
            "description": "Description of the ticket rule",
            "nullable": true,
            "example": "For VIPs only"
          },
          "donation": {
            "type": "boolean",
            "description": "Is this a donation? (user-supplied cost)",
            "example": false
          },
          "include_fee": {
            "type": "boolean",
            "description": "Absorb the fee into the displayed cost",
            "example": true
          },
          "hide_description": {
            "type": "boolean",
            "description": "Hide the ticket description on the event page",
            "example": true
          },
          "sales_start": {
            "type": "string",
            "nullable": true
          },
          "sales_end": {
            "type": "string",
            "nullable": true
          },
          "sales_start_after": {
            "type": "string",
            "description": "The ID of another ticket class - when it sells out, this ticket class will go on sale"
          },
          "minimum_quantity": {
            "type": "number",
            "description": "Minimum number per order",
            "nullable": true,
            "example": 1
          },
          "maximum_quantity": {
            "type": "number",
            "description": "Maximum number per order",
            "example": 10
          },
          "auto_hide": {
            "type": "boolean",
            "description": "Hide this ticket class when it is not on sale",
            "example": false
          },
          "auto_hide_before": {
            "type": "string",
            "nullable": true
          },
          "auto_hide_after": {
            "type": "string",
            "nullable": true
          },
          "hidden": {
            "type": "boolean",
            "description": "If this ticket class is hidden manually",
            "example": false
          },
          "hidden_currently": {
            "type": "boolean",
            "description": "If this ticket class is currently hidden as a calculated dynamic value",
            "example": false
          },
          "hide_sale_dates": {
            "type": "boolean",
            "description": "Hide the ticket class sale status date",
            "example": false
          },
          "tickets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TicketRuleTicket"
            },
            "description": "List of ticket classes associated with the ticket rule"
          },
          "sales_channels": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A list of all supported sales channels"
          },
          "delivery_methods": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A list of the available delivery methods for this ticket rule"
          },
          "sort_order": {
            "type": "number",
            "description": "Order to display the ticket classes within the ticket rule",
            "example": 1
          }
        }
      },
      "TicketRuleTicket": {
        "title": "TicketRuleTicket",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID of the ticket class",
            "example": "9876"
          },
          "event_id": {
            "type": "string",
            "description": "ID of the event",
            "example": "1234"
          },
          "inventory_tier_id": {
            "type": "string",
            "description": "ID of the inventory tier",
            "example": "1"
          },
          "inventory_tier_name": {
            "type": "string",
            "description": "Name of the inventory tier",
            "example": "Balcony"
          },
          "quantity_sold": {
            "type": "number",
            "description": "Number of sold tickets",
            "example": 10
          },
          "on_sale_status": {
            "$ref": "#/components/schemas/on_sale_status2"
          },
          "cost": {
            "$ref": "#/components/schemas/CurrencyCost"
          }
        }
      },
      "TicketRuleCreateUpdate": {
        "title": "TicketRuleCreateUpdate",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the ticket rule",
            "example": "Adult"
          },
          "description": {
            "type": "string",
            "description": "Description of the ticket rule",
            "nullable": true,
            "example": "For VIPs only"
          },
          "donation": {
            "type": "boolean",
            "description": "Is this a donation? (user-supplied cost)",
            "example": false
          },
          "include_fee": {
            "type": "boolean",
            "description": "Absorb the fee into the displayed cost",
            "example": true
          },
          "hide_description": {
            "type": "boolean",
            "description": "Hide the ticket description on the event page",
            "example": true
          },
          "sales_start": {
            "type": "string",
            "nullable": true
          },
          "sales_end": {
            "type": "string",
            "nullable": true
          },
          "sales_start_after": {
            "type": "string",
            "description": "The ID of another ticket class - when it sells out, this ticket class will go on sale",
            "nullable": true
          },
          "minimum_quantity": {
            "type": "number",
            "description": "Minimum number per order",
            "nullable": true,
            "example": 1
          },
          "maximum_quantity": {
            "type": "number",
            "description": "Maximum number per order (blank uses default value)",
            "nullable": true,
            "example": 10
          },
          "auto_hide": {
            "type": "boolean",
            "description": "Hide this ticket class when it is not on sale",
            "example": false
          },
          "auto_hide_before": {
            "type": "string",
            "nullable": true
          },
          "auto_hide_after": {
            "type": "string",
            "nullable": true
          },
          "hidden": {
            "type": "boolean",
            "description": "Hide this ticket",
            "example": false
          },
          "hide_sale_dates": {
            "type": "boolean",
            "description": "Hide the ticket class sale status date",
            "example": false
          },
          "is_deleted": {
            "type": "boolean",
            "description": "Delete this ticket",
            "example": false
          },
          "tickets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TicketRuleTicket"
            },
            "description": "A list of ticket classes associated with the ticket rule",
            "nullable": true
          },
          "sales_channels": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A list of all supported sales channels",
            "nullable": true
          },
          "delivery_methods": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A list of the available delivery methods for this ticket rule",
            "nullable": true
          }
        }
      },
      "TicketRuleBulkCreateUpdate": {
        "title": "TicketRuleBulkCreateUpdate",
        "allOf": [
          {
            "$ref": "#/components/schemas/TicketRuleCreateUpdate"
          },
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "ID of the ticket rule",
                "example": "1234"
              },
              "sort_order": {
                "type": "number",
                "description": "Order to display the ticket classes within the ticket rule",
                "example": 1
              }
            }
          }
        ]
      },
      "TicketBuyerSettings": {
        "title": "TicketBuyerSettings",
        "type": "object",
        "properties": {
          "confirmation_message": {
            "$ref": "#/components/schemas/ConfirmationMessage"
          },
          "instructions": {
            "$ref": "#/components/schemas/Instructions"
          },
          "event_id": {
            "type": "string",
            "example": "43253626762"
          },
          "refund_request_enabled": {
            "type": "boolean",
            "description": "represents whether refund requests are accepted for the event",
            "example": true
          },
          "redirect_url": {
            "type": "string",
            "description": "the url to redirect post-purchase. Will overwrite confirmation message.",
            "nullable": true
          },
          "sales_ended_message": {
            "$ref": "#/components/schemas/SalesEndedMessage"
          },
          "allow_attendee_update": {
            "type": "boolean",
            "description": "whether attendees are allowed to update information after registration",
            "example": true
          },
          "survey_name": {
            "type": "string",
            "description": "Name/Title of the registration survey page",
            "example": "Registration Page"
          },
          "survey_info": {
            "$ref": "#/components/schemas/SurveyInfo"
          },
          "survey_time_limit": {
            "type": "number",
            "description": "survey registration time limit (in minutes)",
            "example": 15
          },
          "survey_respondent": {
            "$ref": "#/components/schemas/survey_respondent"
          },
          "survey_ticket_classes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Which ticket classes the information must be collected for"
          }
        }
      },
      "ConfirmationMessage": {
        "title": "ConfirmationMessage",
        "type": "object",
        "properties": {
          "html": {
            "type": "string",
            "example": "<H1>Confirmation Message</H1>"
          },
          "text": {
            "type": "string",
            "example": "Confirmation Message"
          }
        }
      },
      "Instructions": {
        "title": "Instructions",
        "type": "object",
        "properties": {
          "html": {
            "type": "string",
            "example": "<H1>Instructions</H1>"
          },
          "text": {
            "type": "string",
            "example": "Instructions"
          }
        }
      },
      "SalesEndedMessage": {
        "title": "SalesEndedMessage",
        "type": "object",
        "properties": {
          "html": {
            "type": "string",
            "example": "<H1>Sales Ended Message</H1>"
          },
          "text": {
            "type": "string",
            "example": "Sales Ended Message"
          }
        }
      },
      "SurveyInfo": {
        "title": "SurveyInfo",
        "type": "object",
        "properties": {
          "html": {
            "type": "string",
            "description": "Informative message to display on the registration survey (including HTML)",
            "example": "<b>Filling in this survey is required to attend the event</b>"
          },
          "text": {
            "type": "string",
            "description": "Informative message to display on the registration survey (HTML tags stripped)",
            "example": "Filling in this survey is required to attend the event"
          }
        }
      },
      "TicketBuyerSettingsUpdate": {
        "title": "TicketBuyerSettingsUpdate",
        "type": "object",
        "properties": {
          "confirmation_message": {
            "$ref": "#/components/schemas/ConfirmationMessageUpdate"
          },
          "instructions": {
            "$ref": "#/components/schemas/InstructionsUpdate"
          },
          "refund_request_enabled": {
            "type": "boolean",
            "description": "Whether refund requests are accepted for the event",
            "example": true
          },
          "redirect_url": {
            "type": "string",
            "description": "Redirect to this url post-purchase. Will overwrite confirmation message.",
            "nullable": true
          },
          "sales_ended_message": {
            "$ref": "#/components/schemas/SalesEndedMessageUpdate"
          },
          "allow_attendee_update": {
            "type": "boolean",
            "description": "whether attendees are allowed to update information after registration",
            "example": true
          },
          "survey_name": {
            "type": "string",
            "description": "Name/Title of the registration survey page",
            "example": "Registration Page"
          },
          "survey_info": {
            "$ref": "#/components/schemas/SurveyInfoUpdate"
          },
          "survey_time_limit": {
            "type": "number",
            "description": "survey registration time limit (in minutes)",
            "example": 15
          },
          "survey_respondent": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "which respondent type the information must be collected for (ticket_buyer or attendee)"
          },
          "survey_ticket_classes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Which ticket classes the information must be collected for"
          }
        }
      },
      "ConfirmationMessageUpdate": {
        "title": "ConfirmationMessageUpdate",
        "type": "object",
        "properties": {
          "html": {
            "type": "string",
            "description": "Confirmation message to display on order completion",
            "example": "<H1>Confirmation Message</H1>"
          }
        }
      },
      "InstructionsUpdate": {
        "title": "InstructionsUpdate",
        "type": "object",
        "properties": {
          "html": {
            "type": "string",
            "description": "Instructions to display on the ticket",
            "example": "<H1>Instructions</H1>"
          }
        }
      },
      "SalesEndedMessageUpdate": {
        "title": "SalesEndedMessageUpdate",
        "type": "object",
        "properties": {
          "html": {
            "type": "string",
            "description": "Message to display after ticket sales end",
            "example": "<H1>Sales Ended Message</H1>"
          }
        }
      },
      "SurveyInfoUpdate": {
        "title": "SurveyInfoUpdate",
        "type": "object",
        "properties": {
          "html": {
            "type": "string",
            "description": "Informative message to display on the registration survey page (including HTML)",
            "example": "<b>Filling in this survey is required to attend the event</b>"
          }
        }
      },
      "CannedQuestion": {
        "title": "CannedQuestion",
        "type": "object",
        "properties": {
          "resource_uri": {
            "type": "string",
            "example": "https://www.eventbriteapi.com/v3/events/12345/canned_questions/job_title/"
          },
          "id": {
            "type": "string",
            "example": "job_title"
          },
          "question": {
            "$ref": "#/components/schemas/question1"
          },
          "type": {
            "type": "string",
            "example": "text"
          },
          "required": {
            "type": "boolean",
            "example": false
          },
          "include": {
            "type": "boolean",
            "description": "is this question enabled for the purchase flow",
            "example": true
          },
          "editable": {
            "type": "boolean",
            "description": "is this question editable by the organizer",
            "example": true
          },
          "choices": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "ticket_classes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "group_id": {
            "type": "string",
            "example": "work_information"
          },
          "group_display_header": {
            "type": "string",
            "example": "Work Info"
          },
          "respondent": {
            "type": "string",
            "example": "ticket_buyer"
          },
          "default_value": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "CannedQuestionCreate": {
        "title": "CannedQuestionCreate",
        "required": [
          "canned_type"
        ],
        "type": "object",
        "properties": {
          "question": {
            "$ref": "#/components/schemas/question2"
          },
          "required": {
            "type": "boolean",
            "description": "Is an answer to this question required for registration?",
            "example": true
          },
          "type": {
            "$ref": "#/components/schemas/type4"
          },
          "respondent (DEPRECATED)": {
            "$ref": "#/components/schemas/respondentDEPRECATED"
          },
          "waiver": {
            "type": "string",
            "description": "Waiver content for questions of type waiver"
          },
          "choices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CannedQuestionChoices"
            },
            "description": "Choices for multiple choice questions. Format:[{â€œanswerâ€: {â€œhtmlâ€: â€œChoice goes here...â€}}, {â€œanswerâ€: {â€œhtmlâ€: â€œAnother choice goes here...â€}}]"
          },
          "ticket_classes (DEPRECATED)": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QuestionTicketClass"
            },
            "description": "(DEPRECATED: This param will be removed from June 1, 2021, Use: Ticket Buyer Settings - Update) Tickets to which to limit this question. Format: [{â€œidâ€: â€œ1234â€}, {â€œidâ€: â€œ4567â€}]"
          },
          "parent_choice_id": {
            "type": "string",
            "description": "ID of Parent Question (for subquestions)"
          },
          "canned_type": {
            "$ref": "#/components/schemas/canned_type"
          }
        }
      },
      "CannedQuestionChoices": {
        "title": "CannedQuestionChoices",
        "type": "object",
        "properties": {
          "answer": {
            "$ref": "#/components/schemas/answer1"
          }
        }
      },
      "BaseQuestion": {
        "title": "BaseQuestion",
        "type": "object",
        "properties": {
          "resource_uri": {
            "type": "string",
            "example": "https://www.eventbriteapi.com/v3/events/12345/questions/123456789/"
          },
          "id": {
            "type": "string",
            "example": "123456789"
          },
          "question": {
            "$ref": "#/components/schemas/question3"
          },
          "required": {
            "type": "boolean",
            "description": "Is an answer to this question required for registration?",
            "example": true
          },
          "display_answer_on_order": {
            "type": "boolean",
            "description": "Is this question displayed on order confirmation?",
            "example": true
          },
          "type": {
            "$ref": "#/components/schemas/type4"
          },
          "respondent": {
            "$ref": "#/components/schemas/respondent"
          },
          "waiver": {
            "type": "string",
            "description": "Waiver content for questions of type waiver"
          },
          "choices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QuestionChoices"
            },
            "description": "Choices for multiple choice questions. Format:[{â€œanswerâ€: {â€œhtmlâ€: â€œChoice goes here...â€}}, {â€œanswerâ€: {â€œhtmlâ€: â€œAnother choice goes here...â€}}]"
          },
          "ticket_classes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QuestionTicketClass"
            },
            "description": "Tickets to which to limit this question. Format: [{â€œidâ€: â€œ1234â€}, {â€œidâ€: â€œ4567â€}]"
          },
          "parent_id": {
            "type": "string",
            "description": "ID of Parent Question (for subquestions)",
            "example": "24038723"
          },
          "parent_choice_id": {
            "type": "string",
            "description": "ID of Parent Question Choice (for subquestions)",
            "example": "66915463"
          },
          "sorting": {
            "type": "number",
            "description": "Unsigned integer defining the order of the question in the list",
            "nullable": true,
            "example": 5
          }
        }
      },
      "BaseQuestionCreate": {
        "title": "BaseQuestionCreate",
        "type": "object",
        "properties": {
          "question": {
            "$ref": "#/components/schemas/question2"
          },
          "required": {
            "type": "boolean",
            "description": "Is an answer to this question required for registration?",
            "example": true
          },
          "type": {
            "$ref": "#/components/schemas/type4"
          },
          "respondent": {
            "$ref": "#/components/schemas/respondent"
          },
          "waiver": {
            "type": "string",
            "description": "Waiver content for questions of type waiver"
          },
          "choices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QuestionChoicesCreate"
            },
            "description": "Choices for multiple choice questions. Format:[{â€œanswerâ€: {â€œhtmlâ€: â€œChoice goes here...â€}}, {â€œanswerâ€: {â€œhtmlâ€: â€œAnother choice goes here...â€}}]"
          },
          "ticket_classes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QuestionTicketClassCreate"
            },
            "description": "Tickets to which to limit this question. Format: [{â€œidâ€: â€œ1234â€}, {â€œidâ€: â€œ4567â€}]"
          },
          "parent_id": {
            "type": "string",
            "description": "ID of Parent Question (for subquestions)"
          },
          "parent_choice_id": {
            "type": "string",
            "description": "ID of Parent Question Choice (for subquestions)"
          },
          "display_answer_on_order": {
            "type": "boolean",
            "description": "Is this question displayed on order confirmation?"
          }
        }
      },
      "QuestionChoices": {
        "title": "QuestionChoices",
        "type": "object",
        "properties": {
          "answer": {
            "$ref": "#/components/schemas/ConfirmationMessage"
          },
          "quantity_available": {
            "type": "number",
            "example": 250
          },
          "quantity_sold": {
            "type": "number",
            "example": 5
          },
          "low_stock": {
            "type": "number",
            "example": 250
          },
          "id": {
            "type": "string",
            "example": "123456"
          },
          "subquestion_ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          }
        }
      },
      "QuestionChoicesCreate": {
        "title": "QuestionChoicesCreate",
        "type": "object",
        "properties": {
          "answer": {
            "$ref": "#/components/schemas/ConfirmationMessage"
          },
          "quantity_available": {
            "type": "number",
            "example": 250
          }
        }
      },
      "QuestionTicketClass": {
        "title": "QuestionTicketClass",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "1234"
          },
          "name": {
            "type": "string",
            "example": "Ticket class name"
          }
        }
      },
      "QuestionTicketClassCreate": {
        "title": "QuestionTicketClassCreate",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "1234"
          }
        }
      },
      "SeatMap": {
        "title": "SeatMap",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of this seat map",
            "nullable": true,
            "example": "Tier 1"
          },
          "event_id": {
            "type": "string",
            "description": "Event ID that this seat map belongs to",
            "example": "5678"
          },
          "venue_id": {
            "type": "string",
            "description": "Venue ID that this seat map belongs to",
            "example": "5678"
          },
          "capacity": {
            "type": "number",
            "description": "Total capacity of this seat map.   0 if capacity cannot be calculated for draft seat map.",
            "example": 1
          },
          "thumbnail_url": {
            "type": "string",
            "description": "URL of a 660x660 .png image of this seat map",
            "nullable": true
          }
        }
      },
      "InventoryTierCreate": {
        "title": "InventoryTierCreate",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The inventory tier name",
            "example": "Tier 1"
          },
          "tier": {
            "type": "number",
            "description": "Small unique integer within each seat map that can be assigned to seats in seat map. Each seat in seat map is assigned to a small integer tier 1, 2, 3, etc. When seat map is copied to another event, this tier number also remains unchanged though tier id changes since id is unique across all events.",
            "example": 1
          },
          "seatmap_number": {
            "$ref": "#/components/schemas/seatmap_number"
          },
          "sort_order": {
            "type": "number",
            "description": "The sort order of this inventory tier",
            "example": 1
          },
          "color": {
            "type": "string",
            "description": "Hex representation of tier color",
            "example": "#fac114"
          },
          "quantity_total": {
            "type": "number",
            "description": "The number of available quantities",
            "example": 30
          },
          "count_against_event_capacity": {
            "type": "boolean",
            "description": "If this inventory tier is counted against event capacity. This should be set to false for inventory tiers for add-on tickets.",
            "example": true
          },
          "image_id": {
            "type": "string",
            "description": "Image ID for this inventory tier. null if no image is set.",
            "nullable": true,
            "example": "1234"
          }
        }
      },
      "InventoryTier": {
        "title": "InventoryTier",
        "allOf": [
          {
            "$ref": "#/components/schemas/InventoryTierCreate"
          },
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "ID of the inventory tier",
                "example": "1234"
              },
              "event_id": {
                "type": "string",
                "description": "Event ID for this inventory tier",
                "example": "5678"
              },
              "quantity_held": {
                "type": "number",
                "description": "Deprecated. Do not use.",
                "example": 5
              },
              "quantity_sold": {
                "type": "number",
                "description": "Number of sold tickets for this inventory tier",
                "example": 10
              },
              "quantity_pending": {
                "type": "number",
                "description": "Number of pending tickets for this inventory tier",
                "example": 2
              },
              "ticket_class_ids": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Ticket class IDs associated with this inventory tier"
              },
              "capacity_total": {
                "type": "number",
                "description": "Total capacity of this inventory tier including quantity_total for all child hold inventory tiers.",
                "example": 100
              },
              "holds": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/HoldResponse"
                },
                "description": "List of child hold inventory tiers under this inventory tier. null if not a parent tier.",
                "nullable": true
              }
            }
          }
        ]
      },
      "InventoryTierUpdateBase": {
        "title": "InventoryTierUpdateBase",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The inventory tier name",
            "example": "Tier 1"
          },
          "sort_order": {
            "type": "number",
            "description": "The sort order of this inventory tier",
            "example": 1
          },
          "color": {
            "type": "string",
            "description": "Hex representation of tier color",
            "example": "#fac114"
          },
          "quantity_total": {
            "type": "number",
            "description": "The number of available quantities. Only accepted for GA tiers `(seatmap_number=0, which is default)`",
            "example": 30
          },
          "image_id": {
            "type": "string",
            "description": "Image ID for this inventory tier. Setting this to null will remove image from this inventory tier.",
            "nullable": true,
            "example": "1234"
          },
          "capacity_total": {
            "type": "number",
            "description": "Total capacity of this inventory tier including quantity_total for all child hold inventory tiers.",
            "example": 100
          },
          "holds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HoldUpdate"
            },
            "description": "List of child hold inventory tiers under this inventory tier. null if not a parent tier.",
            "nullable": true
          }
        }
      },
      "InventoryTierUpdate": {
        "title": "InventoryTierUpdate",
        "allOf": [
          {
            "$ref": "#/components/schemas/InventoryTierUpdateBase"
          },
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "ID of the inventory tier",
                "example": "1234"
              }
            }
          }
        ]
      },
      "CapacityTier": {
        "title": "CapacityTier",
        "type": "object",
        "properties": {
          "event_id": {
            "type": "string",
            "description": "Event ID for this capacity tier",
            "example": "5678"
          },
          "quantity_pending": {
            "type": "number",
            "description": "Number of pending tickets from event capacity, not including pending tickets from capacity holds",
            "example": 2
          },
          "quantity_sold": {
            "type": "number",
            "description": "Number of sold tickets from event capacity, not including sold tickets from capacity holds",
            "example": 10
          },
          "quantity_total": {
            "type": "number",
            "description": "The number of available quantities from event capacity, not including quantity held from capacity",
            "example": 30
          },
          "capacity_pending": {
            "type": "number",
            "description": "Number of pending tickets from event capacity",
            "example": 10
          },
          "capacity_sold": {
            "type": "number",
            "description": "Number of sold tickets from event capacity",
            "example": 20
          },
          "capacity_total": {
            "type": "number",
            "description": "Total capacity of the event",
            "example": 100
          },
          "capacity_is_custom": {
            "type": "boolean",
            "description": "If True, the value of capacity is a custom-set value; if False, it's a calculated value of the total of all ticket capacities.",
            "example": true
          },
          "holds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HoldResponse"
            },
            "description": "List of child hold inventory tiers under this capacity tier."
          }
        }
      },
      "CapacityTierUpdate": {
        "title": "CapacityTierUpdate",
        "type": "object",
        "properties": {
          "capacity_total": {
            "type": "number",
            "description": "Total capacity of the event. Setting this to null will un-set the custom event capacity and is only allowed if there are no existing capacity hold inventory tiers.",
            "nullable": true,
            "example": 100
          },
          "holds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HoldUpdate"
            },
            "description": "List of child hold inventory tiers under this capacity tier."
          }
        }
      },
      "HoldResponse": {
        "title": "HoldResponse",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID of the hold",
            "example": "I1234"
          },
          "event_id": {
            "type": "string",
            "description": "Event ID for this hold",
            "example": "5678"
          },
          "name": {
            "type": "string",
            "description": "Name of the hold",
            "example": "Marketing"
          },
          "abbreviation": {
            "type": "string",
            "description": "Abbreviation of the hold if defined",
            "nullable": true,
            "example": "MKT"
          },
          "sort_order": {
            "type": "number",
            "description": "Index for sorting display",
            "example": 1
          },
          "color": {
            "type": "string",
            "description": "Hex representation of hold color if defined",
            "nullable": true,
            "example": "#fac114"
          },
          "quantity_sold": {
            "type": "number",
            "description": "Number of sold tickets from this hold",
            "example": 10
          },
          "quantity_total": {
            "type": "number",
            "description": "Number of total quantity for this hold, including quantity sold/pending from this hold",
            "example": 30
          },
          "quantity_pending": {
            "type": "number",
            "description": "Number of tickets which are pending (carted, for example) for this hold",
            "example": 5
          }
        }
      },
      "ReservedSeatingHoldCreate": {
        "title": "ReservedSeatingHoldCreate",
        "required": [
          "name",
          "abbreviation"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the hold.",
            "example": "Marketing"
          },
          "abbreviation": {
            "type": "string",
            "description": "Abbreviation of the hold.",
            "example": "MKT"
          },
          "sort_order": {
            "type": "number",
            "description": "Index for sorting display.  The smaller sort_order is shown first.  If not supplied, the oldest hold is displayed first.",
            "example": 1
          },
          "color": {
            "type": "string",
            "description": "Hex representation of hold color if defined.  Default is black if not supplied.",
            "example": "#fac114"
          }
        }
      },
      "ReservedSeatingHoldUpdate": {
        "title": "ReservedSeatingHoldUpdate",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the hold.",
            "example": "Marketing"
          },
          "abbreviation": {
            "type": "string",
            "description": "Abbreviation of the hold.",
            "example": "MKT"
          },
          "sort_order": {
            "type": "number",
            "description": "Index for sorting display.  The smaller sort_order is shown first.",
            "example": 1
          },
          "color": {
            "type": "string",
            "description": "Hex representation of hold color if defined.  default is black if not supplied.",
            "example": "#fac114"
          },
          "is_deleted": {
            "type": "boolean",
            "description": "If this hold is to be deleted",
            "example": false
          }
        }
      },
      "HoldUpdate": {
        "title": "HoldUpdate",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID of the hold.  Setting this to null will create a new hold.",
            "example": "H1234"
          },
          "event_id": {
            "type": "string",
            "description": "Event ID for this hold.   Required when creating a new hold.",
            "example": "5678"
          },
          "name": {
            "type": "string",
            "description": "Name of the hold.   Required when creating a new hold.",
            "example": "Marketing"
          },
          "abbreviation": {
            "type": "string",
            "description": "Abbreviation of the hold if defined.",
            "example": "MKT"
          },
          "sort_order": {
            "type": "number",
            "description": "Index for sorting display.  The smaller sort_order is shown first.",
            "example": 1
          },
          "color": {
            "type": "string",
            "description": "Hex representation of hold color if defined.  Default is black if not supplied when creating a new hold.",
            "example": "#fac114"
          },
          "quantity_total": {
            "type": "number",
            "description": "Number of total quantity for this hold, including quantity sold/pending from this hold.  Required when creating a new general admission hold or event capacity hold.   This field is not accepted as an input for reserved seating hold.",
            "example": 30
          },
          "is_deleted": {
            "type": "boolean",
            "description": "If this hold is to be deleted",
            "example": false
          }
        }
      },
      "EventListingProperties": {
        "title": "EventListingProperties",
        "required": [
          "is_paid"
        ],
        "type": "object",
        "properties": {
          "seatmap_thumbnail_url": {
            "type": "string",
            "description": "URL for the seatmap overview image (only if event is reserved)",
            "nullable": true,
            "example": "https://eventbrite-qa.s3.amazonaws.com/inventory_service/event-52720226617/images/seatmap-20190703184903721362.png"
          },
          "is_paid": {
            "type": "boolean",
            "description": "Does the event have paid tickets?",
            "example": true
          }
        }
      },
      "InstrumentType": {
        "title": "InstrumentType",
        "enum": [
          "CREDIT_CARD",
          "NONCE_BRAINTREE",
          "BOLETO_BANCARIO",
          "ADYEN_POS_PAYMENT",
          "MERCADO_PAGO_POS",
          "BARCODE",
          "IDEAL",
          "PAYPAL",
          "MAESTRO_BANCONTACT",
          "SEPA_DIRECT_DEBIT",
          "AFFIRM",
          "SOFORT",
          "USER_INSTRUMENT"
        ],
        "type": "string",
        "example": "CREDIT_CARD"
      },
      "PaymentMethod": {
        "title": "PaymentMethod",
        "enum": [
          "VISA",
          "MASTERCARD",
          "AMEX",
          "DISCOVER",
          "NARANJA",
          "NATIVA",
          "MERCADO_PAGO",
          "HIPERCARD",
          "ELO",
          "VISA_DEBIT",
          "MAESTRO",
          "TOKEN",
          "OXXO",
          "PAGOFACIL",
          "RAPIPAGO"
        ],
        "type": "string",
        "example": "VISA"
      },
      "PaymentType": {
        "title": "PaymentType",
        "enum": [
          "EVENTBRITE",
          "PAYPAL",
          "AUTHNET",
          "OFFLINE",
          "MANUAL"
        ],
        "type": "string",
        "example": "EVENTBRITE"
      },
      "IdealBank": {
        "title": "IdealBank",
        "type": "object",
        "properties": {
          "bank_id": {
            "type": "string"
          },
          "bank_name": {
            "type": "string"
          }
        }
      },
      "Amount": {
        "title": "Amount",
        "required": [
          "currency",
          "value"
        ],
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "description": "The ISO 4217 3-character code of a currency",
            "example": "USD"
          },
          "value": {
            "type": "number",
            "description": "The integer value of units of the minor unit of the currency (e.g. cents for US dollars)",
            "example": 432
          }
        }
      },
      "PaymentCapability": {
        "title": "PaymentCapability",
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/PaymentType"
          },
          "instrument_type": {
            "$ref": "#/components/schemas/InstrumentType"
          },
          "payment_methods": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentMethod"
            },
            "description": ""
          },
          "note": {
            "type": "string"
          },
          "ideal_banks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdealBank"
            },
            "description": ""
          }
        }
      },
      "PaymentConstraintCreate": {
        "title": "PaymentConstraintCreate",
        "required": [
          "instrument_type"
        ],
        "type": "object",
        "properties": {
          "instrument_type": {
            "$ref": "#/components/schemas/InstrumentType"
          },
          "payment_method": {
            "$ref": "#/components/schemas/PaymentMethod"
          }
        }
      },
      "PaymentConstraint": {
        "title": "PaymentConstraint",
        "allOf": [
          {
            "$ref": "#/components/schemas/PaymentConstraintCreate"
          },
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "Payment Constraint ID",
                "example": "12345"
              }
            }
          }
        ]
      },
      "AttendeeSearchOrder": {
        "title": "AttendeeSearchOrder",
        "enum": [
          "changed_since_asc",
          "changed_since_desc",
          "created_after_asc",
          "created_after_desc",
          "email_asc",
          "email_desc",
          "event_id_asc",
          "event_id_desc",
          "id_asc",
          "id_desc",
          "name_asc",
          "name_desc"
        ],
        "type": "string",
        "example": "changed_since_asc"
      },
      "ProductFeature": {
        "title": "ProductFeature",
        "enum": [
          "embedded_checkout",
          "email_campaigns",
          "link_event_to_facebook",
          "toneden_integration"
        ],
        "type": "string",
        "example": "embedded_checkout"
      },
      "ProductFeatureUsage": {
        "title": "ProductFeatureUsage",
        "type": "object",
        "properties": {
          "entity_id": {
            "type": "string",
            "description": "The id of either the Organization or the Event, depending of what was requested",
            "example": "1002"
          },
          "product_feature": {
            "$ref": "#/components/schemas/ProductFeature"
          },
          "status": {
            "$ref": "#/components/schemas/status8"
          }
        }
      },
      "StructuredContentPurpose": {
        "title": "StructuredContentPurpose",
        "enum": [
          "listing",
          "digital_content"
        ],
        "type": "string",
        "example": "listing"
      },
      "StructuredContentPageAccessType": {
        "title": "StructuredContentPageAccessType",
        "enum": [
          "private",
          "public"
        ],
        "type": "string",
        "example": "private"
      },
      "StructuredContentPage": {
        "title": "StructuredContentPage",
        "type": "object",
        "properties": {
          "access_type": {
            "$ref": "#/components/schemas/StructuredContentPageAccessType"
          },
          "modules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StructuredContentTextModule"
            },
            "description": "array of modules associated with the page"
          },
          "page_version_number": {
            "type": "string",
            "description": "the version of the page object (every time modules get updated, a new page object with the same id but new version gets created)"
          },
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          },
          "purpose": {
            "$ref": "#/components/schemas/StructuredContentPurpose"
          },
          "resource_uris": {
            "$ref": "#/components/schemas/ResourceURIs"
          }
        }
      },
      "StructuredContentTextModule": {
        "title": "StructuredContentTextModule",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/StructuredContentTextModuleData"
          },
          "layout": {
            "$ref": "#/components/schemas/StructuredContentModuleLayout"
          },
          "timed_display": {
            "$ref": "#/components/schemas/TimedDisplay"
          },
          "resource_uris": {
            "type": "object"
          },
          "semantic_purpose": {
            "type": "string",
            "description": "purpose the module fulfills."
          },
          "type": {
            "type": "string",
            "example": "text"
          }
        }
      },
      "StructuredContentImageModule": {
        "title": "StructuredContentImageModule",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/StructuredContentImageModuleData"
          },
          "layout": {
            "$ref": "#/components/schemas/StructuredContentModuleLayout"
          },
          "timed_display": {
            "$ref": "#/components/schemas/TimedDisplay"
          },
          "resource_uris": {
            "type": "object"
          },
          "semantic_purpose": {
            "type": "string",
            "description": "purpose the module fulfills."
          },
          "type": {
            "type": "string",
            "example": "image"
          }
        }
      },
      "StructuredContentVideoModule": {
        "title": "StructuredContentVideoModule",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/StructuredContentVideoModuleData"
          },
          "layout": {
            "$ref": "#/components/schemas/StructuredContentModuleLayout"
          },
          "timed_display": {
            "$ref": "#/components/schemas/TimedDisplay"
          },
          "resource_uris": {
            "type": "object"
          },
          "semantic_purpose": {
            "type": "string",
            "description": "purpose the module fulfills."
          },
          "type": {
            "type": "string",
            "example": "video"
          }
        }
      },
      "StructuredContentCreateTextModule": {
        "title": "StructuredContentCreateTextModule",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CreateStructuredContentTextModuleData"
          },
          "layout": {
            "$ref": "#/components/schemas/StructuredContentModuleLayout"
          },
          "timed_display": {
            "$ref": "#/components/schemas/TimedDisplay"
          },
          "semantic_purpose": {
            "type": "string",
            "description": "purpose the module fulfills."
          },
          "type": {
            "type": "string",
            "description": "Must correlate with the data of the module.",
            "example": "text"
          }
        }
      },
      "StructuredContentCreateImageModule": {
        "title": "StructuredContentCreateImageModule",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CreateStructuredContentImageModuleData"
          },
          "layout": {
            "$ref": "#/components/schemas/StructuredContentModuleLayout"
          },
          "timed_display": {
            "$ref": "#/components/schemas/TimedDisplay"
          },
          "semantic_purpose": {
            "type": "string",
            "description": "purpose the module fulfills."
          },
          "type": {
            "type": "string",
            "description": "Must correlate with the data of the module.",
            "example": "image"
          }
        }
      },
      "StructuredContentCreateVideoModule": {
        "title": "StructuredContentCreateVideoModule",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CreateStructuredContentVideoModuleData"
          },
          "layout": {
            "$ref": "#/components/schemas/StructuredContentModuleLayout"
          },
          "timed_display": {
            "$ref": "#/components/schemas/TimedDisplay"
          },
          "semantic_purpose": {
            "type": "string",
            "description": "purpose the module fulfills."
          },
          "type": {
            "type": "string",
            "description": "must correlate with data of the module",
            "example": "video"
          }
        }
      },
      "StructuredContentModuleLayout": {
        "title": "StructuredContentModuleLayout",
        "enum": [
          "image_left",
          "image_top",
          "image_grid",
          "carousel",
          "grid"
        ],
        "type": "string",
        "example": "image_left"
      },
      "StructuredContentTextAlignment": {
        "title": "StructuredContentTextAlignment",
        "enum": [
          "left",
          "right",
          "center"
        ],
        "type": "string",
        "example": "left"
      },
      "StructuredContentTextModuleData": {
        "title": "StructuredContentTextModuleData",
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/components/schemas/body"
          }
        }
      },
      "CreateStructuredContentTextModuleData": {
        "title": "CreateStructuredContentTextModuleData",
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/components/schemas/body"
          }
        }
      },
      "StructuredContentImageModuleData": {
        "title": "StructuredContentImageModuleData",
        "type": "object",
        "properties": {
          "image": {
            "$ref": "#/components/schemas/image1"
          },
          "caption": {
            "$ref": "#/components/schemas/StructuredContentTextModuleData"
          },
          "id": {
            "type": "string"
          }
        }
      },
      "CreateStructuredContentImageModuleData": {
        "title": "CreateStructuredContentImageModuleData",
        "type": "object",
        "properties": {
          "image": {
            "$ref": "#/components/schemas/image2"
          },
          "caption": {
            "$ref": "#/components/schemas/CreateStructuredContentTextModuleData"
          }
        }
      },
      "StructuredContentVideoModuleData": {
        "title": "StructuredContentVideoModuleData",
        "type": "object",
        "properties": {
          "video": {
            "$ref": "#/components/schemas/video"
          },
          "caption": {
            "$ref": "#/components/schemas/StructuredContentTextModuleData"
          }
        }
      },
      "CreateStructuredContentVideoModuleData": {
        "title": "CreateStructuredContentVideoModuleData",
        "type": "object",
        "properties": {
          "video": {
            "$ref": "#/components/schemas/video1"
          },
          "caption": {
            "$ref": "#/components/schemas/CreateStructuredContentTextModuleData"
          }
        }
      },
      "TimedDisplay": {
        "title": "TimedDisplay",
        "type": "object",
        "properties": {
          "absolute_start_utc": {
            "type": "string",
            "description": "UTC ISO601 string format \"2019-11-30T19:00:00Z\".  Start time when a module is viewable.  Either absolute_start_utc/absolute_end_utc OR relative_start/relative_end should be provided - both sets cannot be."
          },
          "absolute_end_utc": {
            "type": "string",
            "description": "UTC ISO601 string format \"2019-11-30T19:00:00Z\".  End time when a module is viewable.  Optional - if absolute_end_utc is provided, then absolute_start_utc must be provided with it."
          },
          "relative_start (number) - Minutes to which a module is relatively shown. Either absolute_start_utc/absolute_end_utc OR relative_start/relative_end should be provided": {
            "type": "string",
            "description": "both sets cannot be."
          },
          "relative_end (number) - Minutes to which a module is relatively hidden. Optional - if relative_end is provided, then relative_start must be provided with it.": {
            "type": "string"
          }
        }
      },
      "ResourceURIs": {
        "title": "ResourceURIs",
        "type": "object",
        "properties": {
          "add_module": {
            "type": "string",
            "description": "URL to add a module for the provided page version"
          },
          "preview_module": {
            "type": "string",
            "description": "URL to preview a module for the provided page version"
          },
          "publish": {
            "type": "string",
            "description": "URL to publish a module for the provided page version"
          },
          "self": {
            "type": "string",
            "description": "URL to structured content page for the provided page version"
          }
        }
      },
      "EventPrivacyScheduleResponse": {
        "title": "EventPrivacyScheduleResponse",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "1"
          },
          "schedule_date": {
            "type": "string",
            "nullable": true
          },
          "privacy_type": {
            "$ref": "#/components/schemas/privacy_type"
          },
          "status": {
            "$ref": "#/components/schemas/status9"
          },
          "event_id": {
            "type": "string",
            "example": "12345"
          }
        }
      },
      "OrganizerCreditInformation": {
        "title": "OrganizerCreditInformation",
        "type": "object",
        "properties": {
          "total_initial_amount": {
            "$ref": "#/components/schemas/CurrencyCost"
          },
          "total_redeemed_amount": {
            "$ref": "#/components/schemas/CurrencyCost"
          },
          "available_cards": {
            "type": "number",
            "description": "Represents the approximate total amount of virtual incentives cards that at the moment still have balance greater than 0.",
            "example": 0
          }
        }
      },
      "actions": {
        "title": "actions",
        "enum": [
          "event.created,event.published,order.placed",
          "attendee.checked_in",
          "attendee.checked_out",
          "attendee.updated",
          "event.created",
          "event.published",
          "event.updated",
          "event.unpublished",
          "order.placed",
          "order.refunded",
          "order.updated",
          "organizer.updated",
          "ticket_class.created",
          "ticket_class.deleted",
          "ticket_class.updated",
          "venue.updated"
        ],
        "type": "string",
        "description": "One or any combination of actions that will cause this webhook to be triggered.",
        "example": "event.created,event.published,order.placed"
      },
      "AddaTicketClasstoTicketGroupsrequest": {
        "title": "AddaTicketClasstoTicketGroupsrequest",
        "type": "object",
        "properties": {
          "ticket_group_ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "a list of ticket groups that will have the ticket class added to them"
          }
        }
      },
      "address_type": {
        "title": "address_type",
        "enum": [
          "work",
          "ship",
          "home",
          "bill",
          "tax_invoice",
          "fulfillment"
        ],
        "type": "string",
        "description": "Address type supported",
        "example": "work"
      },
      "age_restriction": {
        "title": "age_restriction",
        "enum": [
          "all_ages",
          "12+",
          "13+",
          "14+",
          "15+",
          "16+",
          "17+",
          "18+",
          "19+",
          "21+",
          "under_14_with_guardian",
          "under_16_with_guardian",
          "under_18_with_guardian",
          "under_21_with_guardian"
        ],
        "type": "string",
        "description": "Minimum age requirement of event attendees.",
        "example": "all_ages"
      },
      "age_restriction1": {
        "title": "age_restriction1",
        "enum": [
          "AGE_RESTRICTION_ALL_AGES",
          "AGE_RESTRICTION_MIN_TWELVE",
          "AGE_RESTRICTION_MIN_THIRTEEN",
          "AGE_RESTRICTION_MIN_FOURTEEN",
          "AGE_RESTRICTION_MIN_FIFTEEN",
          "AGE_RESTRICTION_MIN_SIXTEEN",
          "AGE_RESTRICTION_MIN_SEVENTEEN",
          "AGE_RESTRICTION_MIN_EIGHTEEN",
          "AGE_RESTRICTION_MIN_NINETEEN",
          "AGE_RESTRICTION_MIN_TWENTY_ONE",
          "AGE_RESTRICTION_UNDER_TWENTY_ONE_WITH_GUARDIAN",
          "AGE_RESTRICTION_UNDER_EIGHTEEN_WITH_GUARDIAN"
        ],
        "type": "string",
        "description": "The age restrictions for the venue",
        "example": "AGE_RESTRICTION_ALL_AGES"
      },
      "answer1": {
        "title": "answer1",
        "type": "object",
        "properties": {
          "html": {
            "type": "string",
            "example": "Choice goes here..."
          }
        }
      },
      "asset_typeuser_event_holder": {
        "title": "asset_typeuser_event_holder",
        "enum": [
          "user_event_holder",
          "user_event_attendee",
          "user_event_holder_and_attendee",
          "user_event_attendee_and_holder",
          "user_closed",
          "user_prebuyer",
          "user_organization",
          "newsletter_subscriber"
        ],
        "type": "string",
        "description": "User type",
        "example": "user_event_holder"
      },
      "Attendee1": {
        "title": "Attendee1",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Attendee ID",
            "example": "12345"
          },
          "created": {
            "type": "string",
            "nullable": true
          },
          "changed": {
            "type": "string",
            "nullable": true
          },
          "ticket_class_id": {
            "type": "string",
            "description": "The ticket_class that the attendee registered with",
            "example": "12345"
          },
          "ticket_class_name": {
            "type": "string",
            "description": "The name of the ticket_class at the time of registration",
            "example": "General Admission"
          },
          "profile": {
            "$ref": "#/components/schemas/AttendeeProfile"
          },
          "questions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Question"
            },
            "description": "The per-attendee custom questions"
          },
          "answers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Answer"
            },
            "description": "The attendeeâ€™s answers to any custom questions"
          },
          "barcodes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttendeeBarcode"
            },
            "description": "The attendeeâ€™s entry barcode information"
          },
          "team": {
            "$ref": "#/components/schemas/AttendeeTeam"
          },
          "affiliate": {
            "type": "string",
            "description": "The attendee's affiliate code",
            "nullable": true,
            "example": "affiliate_code"
          },
          "checked_in": {
            "type": "boolean",
            "description": "If the attendee is checked in",
            "example": false
          },
          "cancelled": {
            "type": "boolean",
            "description": "If the attendee is cancelled",
            "example": false
          },
          "refunded": {
            "type": "boolean",
            "description": "If the attendee is refunded",
            "example": false
          },
          "costs": {
            "$ref": "#/components/schemas/CostSummary"
          },
          "status": {
            "type": "string",
            "description": "The status of the attendee (scheduled to be deprecated)"
          },
          "event_id": {
            "type": "string",
            "description": "The event id that this attendee is attending",
            "example": "12345"
          },
          "event": {
            "$ref": "#/components/schemas/Event"
          },
          "order_id": {
            "type": "string",
            "description": "The order id this attendee is part of",
            "example": "12345"
          },
          "order": {
            "$ref": "#/components/schemas/Order1"
          },
          "guestlist_id": {
            "type": "string",
            "description": "The guestlist id for this attendee. If this is null it means that this is not a guest.",
            "nullable": true
          },
          "invited_by": {
            "type": "string",
            "description": "The name of the person that invited the attendee. If this is null it means that this is not a guest.",
            "nullable": true
          },
          "assigned_unit": {
            "$ref": "#/components/schemas/AttendeeAssignedUnit"
          },
          "delivery_method": {
            "$ref": "#/components/schemas/delivery_method"
          },
          "variant_id": {
            "type": "string",
            "description": "A composite id with the format T12345-D12345 where the T12345 is the ticket_class id and D12345 is the discount id applied to this attendee",
            "nullable": true
          },
          "contact_list_preferences": {
            "$ref": "#/components/schemas/ContactListPreferences"
          },
          "survey_responses": {
            "type": "object",
            "description": "Object representing survey responses associated with the attendee. Keys are `question_ids` and values are the answers to those questions. Available through the use of `survey_responses` expansion."
          },
          "resource_uri": {
            "type": "string",
            "description": "The resource URI"
          }
        }
      },
      "base": {
        "title": "base",
        "enum": [
          "item.display-includable",
          "eventbrite.payment_fee",
          "eventbrite.payment_fee_v2",
          "eventbrite.payment_fee_v2.tax",
          "eventbrite.service_fee",
          "eventbrite.service_fee.tax",
          "item.display_royalty",
          "item.display_royalty_esf",
          "item.display",
          "item.net",
          "item.subtotal",
          "item.tax_exclusive",
          "item.tax_inclusive",
          "item.net-includable",
          "zero_base"
        ],
        "type": "string",
        "description": "Name of the base used to calculate the fee.",
        "example": "item.display-includable"
      },
      "body": {
        "title": "body",
        "type": "object",
        "properties": {
          "alignment": {
            "$ref": "#/components/schemas/StructuredContentTextAlignment"
          },
          "text": {
            "type": "string",
            "description": "The HTML-aware string to use for this part of the event's description (HTML tags allowed: anchor, strong, em, paragraph, lists)."
          }
        }
      },
      "bucket": {
        "title": "bucket",
        "enum": [
          "item",
          "fee",
          "shipping",
          "tax"
        ],
        "type": "string",
        "description": "The display group the cost component belongs in.",
        "example": "fee"
      },
      "bucket1": {
        "title": "bucket1",
        "enum": [
          "item",
          "fee",
          "shipping",
          "tax"
        ],
        "type": "string",
        "description": "The display group the fee belongs in. Guaranteed to be present and non-null if the group_by array passed to the request contains bucket.",
        "example": "fee"
      },
      "CalculateItemsrequest": {
        "title": "CalculateItemsrequest",
        "required": [
          "base_price",
          "country",
          "scope"
        ],
        "type": "object",
        "properties": {
          "base_price": {
            "type": "string",
            "description": "The base price for the calculation.",
            "example": "USD,1000"
          },
          "country": {
            "type": "string",
            "description": "ISO 3166 2-letter country code where the event would be payed out.",
            "example": "US"
          },
          "scope": {
            "$ref": "#/components/schemas/scope1"
          },
          "absorb_fees": {
            "type": "boolean",
            "description": "If set to true, the Fees will be included in the base price provided instead of adding them on top of it. False by default.",
            "example": false
          },
          "absorb_taxes": {
            "type": "boolean",
            "description": "If set to true, the Taxes will be included in the base price provided instead of adding them on top of it. False by default.",
            "example": false
          },
          "payment_type": {
            "$ref": "#/components/schemas/payment_type1"
          },
          "channel": {
            "$ref": "#/components/schemas/channel1"
          }
        }
      },
      "CalculateItemsresponse": {
        "title": "CalculateItemsresponse",
        "type": "object",
        "properties": {
          "item_pricing": {
            "$ref": "#/components/schemas/Pricingresponseforitems"
          }
        }
      },
      "CalculateItemsresponse1": {
        "title": "CalculateItemsresponse1",
        "allOf": [
          {
            "$ref": "#/components/schemas/Error"
          },
          {
            "type": "object",
            "properties": {
              "error": {
                "$ref": "#/components/schemas/error82"
              }
            }
          }
        ]
      },
      "CalculateItemsresponse2": {
        "title": "CalculateItemsresponse2",
        "allOf": [
          {
            "$ref": "#/components/schemas/Error"
          },
          {
            "type": "object",
            "properties": {
              "error": {
                "$ref": "#/components/schemas/error82"
              }
            }
          }
        ]
      },
      "CancelanEventresponse": {
        "title": "CancelanEventresponse",
        "type": "object",
        "properties": {
          "canceled": {
            "type": "boolean",
            "example": true
          }
        }
      },
      "CancelanEventresponse1": {
        "title": "CancelanEventresponse1",
        "allOf": [
          {
            "$ref": "#/components/schemas/Error"
          },
          {
            "type": "object",
            "properties": {
              "error": {
                "$ref": "#/components/schemas/error36"
              }
            }
          }
        ]
      },
      "CancelanEventresponse2": {
        "title": "CancelanEventresponse2",
        "allOf": [
          {
            "$ref": "#/components/schemas/Error"
          },
          {
            "type": "object",
            "properties": {
              "error": {
                "$ref": "#/components/schemas/error36"
              }
            }
          }
        ]
      },
      "canned_type": {
        "title": "canned_type",
        "enum": [
          "prefix",
          "first_name",
          "last_name",
          "suffix",
          "email",
          "home_phone",
          "cell_phone",
          "tax_info",
          "bill",
          "cc",
          "home",
          "ship",
          "job_title",
          "company",
          "work",
          "work_phone",
          "website",
          "blog",
          "sex",
          "birth_date",
          "age"
        ],
        "type": "string",
        "description": "String value of canned_type",
        "example": "prefix"
      },
      "CategorybyIDresponse": {
        "title": "CategorybyIDresponse",
        "type": "object",
        "properties": {
          "category": {
            "$ref": "#/components/schemas/Category"
          }
        }
      },
      "Category1": {
        "title": "Category1",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Category ID",
            "example": "103"
          },
          "resource_uri": {
            "type": "string",
            "example": "https://www.eventbriteapi.com/v3/categories/103/"
          },
          "name": {
            "type": "string",
            "description": "Category name",
            "example": "Music"
          },
          "name_localized": {
            "type": "string",
            "description": "Translated category name",
            "example": "Music"
          },
          "short_name": {
            "type": "string",
            "description": "Shorter category name for display in sidebars and other small spaces",
            "example": "Music"
          },
          "short_name_localized": {
            "type": "string",
            "description": "Translated short category name",
            "example": "Music"
          },
          "subcategories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Subcategory1"
            },
            "description": "List of subcategories (only shown on some endpoints)"
          }
        }
      },
      "category2": {
        "title": "category2",
        "enum": [
          "admission",
          "add_on",
          "donation"
        ],
        "type": "string",
        "description": "Ticket class category to which a ticket class belongs.",
        "example": "admission"
      },
      "category3": {
        "title": "category3",
        "enum": [
          "admission",
          "add_on",
          "donation"
        ],
        "type": "string",
        "description": "Ticket category to which a ticket variant belongs.",
        "example": "admission"
      },
      "category4": {
        "title": "category4",
        "enum": [
          "all",
          "admission",
          "add_on",
          "donation"
        ],
        "type": "string",
        "example": "all"
      },
      "channel": {
        "title": "channel",
        "enum": [
          "any",
          "ticket",
          "product"
        ],
        "type": "string",
        "description": "the item type for which get the price fee rates. If itâ€™s not provided, or the value is â€˜anyâ€™, all the existing variants will be returned.",
        "example": "any"
      },
      "channel1": {
        "title": "channel1",
        "enum": [
          "web",
          "atd"
        ],
        "type": "string",
        "description": "Sales channel used to calculate the price. If itâ€™s not provided, web will be used by default.",
        "example": "web"
      },
      "channel3": {
        "title": "channel3",
        "enum": [
          "any",
          "atd",
          "web"
        ],
        "type": "string",
        "example": "any"
      },
      "checkin_type": {
        "title": "checkin_type",
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "description": "The method used to validate the attendee barcode",
        "example": 0
      },
      "checkout_method": {
        "title": "checkout_method",
        "enum": [
          "paypal",
          "eventbrite",
          "authnet",
          "offline"
        ],
        "type": "string",
        "description": "The checkout method to use for completing consumer payment for tickets or other goods. Set of possible values [paypal, eventbrite, authnet, offline].",
        "example": "paypal"
      },
      "condition": {
        "title": "condition",
        "enum": [
          "canonical",
          "custom",
          "customized"
        ],
        "type": "string",
        "description": "Useful to distinguish who is providing the extended data.",
        "example": "canonical"
      },
      "context": {
        "title": "context",
        "required": [
          "subject"
        ],
        "type": "object",
        "properties": {
          "subject": {
            "type": "string",
            "description": "The context to use in the file.",
            "example": "My Subject"
          }
        },
        "description": "A schemaless dictionary with email content. (This can be anything)"
      },
      "CopyanEventresponse": {
        "title": "CopyanEventresponse",
        "allOf": [
          {
            "$ref": "#/components/schemas/Error"
          },
          {
            "type": "object",
            "properties": {
              "error": {
                "$ref": "#/components/schemas/error34"
              }
            }
          }
        ]
      },
      "CopyanEventresponse1": {
        "title": "CopyanEventresponse1",
        "allOf": [
          {
            "$ref": "#/components/schemas/Error"
          },
          {
            "type": "object",
            "properties": {
              "error": {
                "$ref": "#/components/schemas/error34"
              }
            }
          }
        ]
      },
      "corner_style": {
        "title": "corner_style",
        "enum": [
          "rounded",
          "rectangular"
        ],
        "type": "string",
        "description": "Which corner style to use.",
        "example": "rounded"
      },
      "CreateaCustomquestionforanEventrequest": {
        "title": "CreateaCustomquestionforanEventrequest",
        "type": "object",
        "properties": {
          "question": {
            "$ref": "#/components/schemas/BaseQuestionCreate"
          },
          "Headers": {
            "type": "string",
            "description": "Authorization: Bearer PERSONAL_OAUTH_TOKEN\nContent-Type: application/json"
          }
        }
      },
      "CreateaCustomquestionforanEventresponse": {
        "title": "CreateaCustomquestionforanEventresponse",
        "allOf": [
          {
            "$ref": "#/components/schemas/Error"
          },
          {
            "type": "object",
            "properties": {
              "error": {
                "$ref": "#/components/schemas/error88"
              }
            }
          }
        ]
      },
      "CreateaCustomquestionforanEventresponse1": {
        "title": "CreateaCustomquestionforanEventresponse1",
        "allOf": [
          {
            "$ref": "#/components/schemas/Error"
          },
          {
            "type": "object",
            "properties": {
              "error": {
                "$ref": "#/components/schemas/error88"
              }
            }
          }
        ]
      },
      "CreateaCustomquestionforanEventresponse2": {
        "title": "CreateaCustomquestionforanEventresponse2",
        "type": "object",
        "properties": {
          "status_code": {
            "type": "number",
            "example": 403
          },
          "error_description": {
            "type": "string",
            "example": "You do not have permission to access the resource you requested."
          },
          "error": {
            "type": "string",
            "example": "NOT_AUTHORIZED"
          }
        }
      },
      "CreateaDefaultQuestionforanEventrequest": {
        "title": "CreateaDefaultQuestionforanEventrequest",
        "type": "object",
        "properties": {
          "question": {
            "$ref": "#/components/schemas/CannedQuestionCreate"
          },
          "Headers": {
            "type": "string",
            "description": "Authorization: Bearer PERSONAL_OAUTH_TOKEN\nContent-Type: application/json"
          }
        }
      },
      "CreateaDefaultQuestionforanEventresponse": {
        "title": "CreateaDefaultQuestionforanEventresponse",
        "allOf": [
          {
            "$ref": "#/components/schemas/Error"
          },
          {
            "type": "object",
            "properties": {
              "error": {
                "$ref": "#/components/schemas/error86"
              }
            }
          }
        ]
      },
      "CreateaDefaultQuestionforanEventresponse1": {
        "title": "CreateaDefaultQuestionforanEventresponse1",
        "allOf": [
          {
            "$ref": "#/components/schemas/Error"
          },
          {
            "type": "object",
            "properties": {
              "error": {
                "$ref": "#/components/schemas/error86"
              }
            }
          }
        ]
      },
      "CreateaDiscountrequest": {
        "title": "CreateaDiscountrequest",
        "type": "object",
        "properties": {
          "discount": {
            "$ref": "#/components/schemas/DiscountBase"
          }
        }
      },
      "CreateaTeamrequest": {
        "title": "CreateaTeamrequest",
        "required": [
          "public_event_id"
        ],
        "type": "object",
        "properties": {
          "public_event_id": {
            "type": "string",
            "description": "Public Event Id"
          },
          "name": {
            "type": "string",
            "description": "Name of the team"
          },
          "password": {
            "type": "string",
            "description": "Password of the team"
          },
          "preferred_start_time": {
            "type": "string",
            "description": "Preferred start time the event"
          }
        }
      },
      "CreateaTeamresponse": {
        "title": "CreateaTeamresponse",
        "required": [
          "name",
          "id",
          "token",
          "spots_left"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Team name"
          },
          "id": {
            "type": "string",
            "description": "Team ID"
          },
          "token": {
            "type": "string",
            "description": "Team token if has not password, else False"
          },
          "spots_left": {
            "type": "number",
            "description": "Return how many free spots are left on the team"
          }
        }
      },
      "CreateaTicketClassrequest": {
        "title": "CreateaTicketClassrequest",
        "type": "object",
        "properties": {
          "ticket_class": {
            "$ref": "#/components/schemas/TicketClassCreate"
          }
        }
      },
      "CreateaTicketClassresponse": {
        "title": "CreateaTicketClassresponse",
        "allOf": [
          {
            "$ref": "#/components/schemas/Error"
          },
          {
            "type": "object",
            "properties": {
              "error": {
                "$ref": "#/components/schemas/error121"
              }
            }
          }
        ]
      },
      "CreateaTicketClassresponse1": {
        "title": "CreateaTicketClassresponse1",
        "allOf": [
          {
            "$ref": "#/components/schemas/Error"
          },
          {
            "type": "object",
            "properties": {
              "error": {
                "$ref": "#/components/schemas/error121"
              }
            }
          }
        ]
      },
      "CreateaTicketGrouprequest": {
        "title": "CreateaTicketGrouprequest",
        "type": "object",
        "properties": {
          "ticket_group": {
            "$ref": "#/components/schemas/TicketGroupCreate"
          }
        }
      },
      "CreateaTicketGroupresponse": {
        "title": "CreateaTicketGroupresponse",
        "allOf": [
          {
            "$ref": "#/components/schemas/Error"
          },
          {
            "type": "object",
            "properties": {
              "error": {
                "$ref": "#/components/schemas/error131"
              }
            }
          }
        ]
      },
      "CreateaTicketGroupresponse1": {
        "title": "CreateaTicketGroupresponse1",
        "allOf": [
          {
            "$ref": "#/components/schemas/Error"
          },
          {
            "type": "object",
            "properties": {
              "error": {
                "$ref": "#/components/schemas/error131"
              }
            }
          }
        ]
      },
      "CreateaVenuerequest": {
        "title": "CreateaVenuerequest",
        "type": "object",
        "properties": {
          "venue": {
            "$ref": "#/components/schemas/VenueCreate"
          }
        }
      },
      "CreateanEventrequest": {
        "title": "CreateanEventrequest",
        "type": "object",
        "properties": {
          "event": {
            "$ref": "#/components/schemas/EventCreate"
          }
        }
      },
      "CreateanEventresponse": {
        "title": "CreateanEventresponse",
        "allOf": [
          {
            "$ref": "#/components/schemas/Error"
          },
          {
            "type": "object",
            "properties": {
              "error": {
                "$ref": "#/components/schemas/error22"
              }
            }
          }
        ]
      },
      "CreateanEventresponse1": {
        "title": "CreateanEventresponse1",
        "allOf": [
          {
            "$ref": "#/components/schemas/Error"
          },
          {
            "type": "object",
            "properties": {
              "error": {
                "$ref": "#/components/schemas/error22"
              }
            }
          }
        ]
      },
      "Createaneventschedulerequest": {
        "title": "Createaneventschedulerequest",
        "type": "object",
        "properties": {
          "schedule": {
            "$ref": "#/components/schemas/ScheduleBase"
          }
        }
      },
      "Createaneventscheduleresponse": {
        "title": "Createaneventscheduleresponse",
        "allOf": [
          {
            "$ref": "#/components/schemas/Error"
          },
          {
            "type": "object",
            "properties": {
              "error": {
                "$ref": "#/components/schemas/error18"
              }
            }
          }
        ]
      },
      "Createaneventscheduleresponse1": {
        "title": "Createaneventscheduleresponse1",
        "allOf": [
          {
            "$ref": "#/components/schemas/Error"
          },
          {
            "type": "object",
            "properties": {
              "error": {
                "$ref": "#/components/schemas/error18"
              }
            }
          }
        ]
      },
      "Createaneventscheduleresponse2": {
        "title": "Createaneventscheduleresponse2",
        "allOf": [
          {
            "$ref": "#/components/schemas/Error"
          },
          {
            "type": "object",
            "properties": {
              "error": {
                "$ref": "#/components/schemas/error20"
              }
            }
          }
        ]
      },
      "Createaneventscheduleresponse3": {
        "title": "Createaneventscheduleresponse3",
        "allOf": [
          {
            "$ref": "#/components/schemas/Error"
          },
          {
            "type": "object",
            "properties": {
              "error": {
                "$ref": "#/components/schemas/error20"
              }
            }
          }
        ]
      },
      "CreateanInventoryTierrequest": {
        "title": "CreateanInventoryTierrequest",
        "type": "object",
        "properties": {
          "inventory_tier": {
            "$ref": "#/components/schemas/InventoryTierCreate"
          }
        }
      },
      "CreateanInventoryTierresponse": {
        "title": "CreateanInventoryTierresponse",
        "type": "object",
        "properties": {
          "inventory_tier": {
            "$ref": "#/components/schemas/InventoryTier"
          }
        }
      },
      "CreateanInventoryTierresponse1": {
        "title": "CreateanInventoryTierresponse1",
        "allOf": [
          {
            "$ref": "#/components/schemas/Error"
          },
          {
            "type": "object",
            "properties": {
              "error": {
                "$ref": "#/components/schemas/error44"
              }
            }
          }
        ]
      },
      "CreateanInventoryTierresponse3": {
        "title": "CreateanInventoryTierresponse3",
        "allOf": [
          {
            "$ref": "#/components/schemas/Error"
          },
          {
            "type": "object",
            "properties": {
              "error": {
                "$ref": "#/components/schemas/error6"
              }
            }
          }
        ]
      },
      "CreateanInventoryTierresponse5": {
        "title": "CreateanInventoryTierresponse5",
        "allOf": [
          {
            "$ref": "#/components/schemas/Error"
          },
          {
            "type": "object",
            "properties": {
              "error": {
                "$ref": "#/components/schemas/error8"
              }
            }
          }
        ]
      },
      "CreateMultipleInventoryTiersrequest": {
        "title": "CreateMultipleInventoryTiersrequest",
        "type": "object",
        "properties": {
          "inventory_tiers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InventoryTierCreate"
            },
            "description": ""
          }
        }
      },
      "CreateMultipleInventoryTiersresponse": {
        "title": "CreateMultipleInventoryTiersresponse",
        "type": "object",
        "properties": {
          "inventory_tiers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InventoryTier"
            },
            "description": ""
          }
        }
      },
      "CreateMultipleInventoryTiersresponse1": {
        "title": "CreateMultipleInventoryTiersresponse1",
        "allOf": [
          {
            "$ref": "#/components/schemas/Error"
          },
          {
            "type": "object",
            "properties": {
              "error": {
                "$ref": "#/components/schemas/error44"
              }
            }
          }
        ]
      },
      "CreateMultipleInventoryTiersresponse2": {
        "title": "CreateMultipleInventoryTiersresponse2",
        "allOf": [
          {
            "$ref": "#/components/schemas/Error"
          },
          {
            "type": "object",
            "properties": {
              "error": {
                "$ref": "#/components/schemas/error44"
              }
            }
          }
        ]
      },
      "CreateMultipleInventoryTiersresponse3": {
        "title": "CreateMultipleInventoryTiersresponse3",
        "allOf": [
          {
            "$ref": "#/components/schemas/Error"
          },
          {
            "type": "object",
            "properties": {
              "error": {
                "$ref": "#/components/schemas/error6"
              }
            }
          }
        ]
      },
      "CreateMultipleInventoryTiersresponse5": {
        "title": "CreateMultipleInventoryTiersresponse5",
        "allOf": [
          {
            "$ref": "#/components/schemas/Error"
          },
          {
            "type": "object",
            "properties": {
              "error": {
                "$ref": "#/components/schemas/error8"
              }
            }
          }
        ]
      },
      "CreateSeatMapForEventrequest": {
        "title": "CreateSeatMapForEventrequest",
        "type": "object",
        "properties": {
          "source_seatmap_id": {
            "type": "string",
            "description": "m1 (string, required) - ID of source Seat Map to copy data from.",
            "example": "E12345"
          }
        }
      },
      "CreateSeatMapForEventresponse": {
        "title": "CreateSeatMapForEventresponse",
        "allOf": [
          {
            "$ref": "#/components/schemas/Error"
          },
          {
            "type": "object",
            "properties": {
              "error": {
                "$ref": "#/components/schemas/error94"
              }
            }
          }
        ]
      },
      "CreateSeatMapForEventresponse1": {
        "title": "CreateSeatMapForEventresponse1",
        "allOf": [
          {
            "$ref": "#/components/schemas/Error"
          },
          {
            "type": "object",
            "properties": {
              "error": {
                "$ref": "#/components/schemas/error94"
              }
            }
          }
        ]
      },
      "CreateTextOverridesrequest": {
        "title": "CreateTextOverridesrequest",
        "required": [
          "strings"
        ],
        "type": "object",
        "properties": {
          "locale": {
            "type": "string",
            "description": "The locale for which you want to retrieve the strings.\n\nIf it is not provided, we will use the one from the context. If an event_id is specified, we will use the event's locale",
            "example": "en_US"
          },
          "venue_id": {
            "type": "string",
            "description": "Venue ID.",
            "example": "12345"
          },
          "event_id": {
            "type": "string",
            "description": "Event ID.",
            "example": "12345"
          },
          "strings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TextOverridesRequestContent"
            },
            "description": ""
          }
        }
      },
      "CreateTextOverridesresponse": {
        "title": "CreateTextOverridesresponse",
        "allOf": [
          {
            "$ref": "#/components/schemas/Error"
          },
          {
            "type": "object",
            "properties": {
              "error": {
                "$ref": "#/components/schemas/error102"
              }
            }
          }
        ]
      },
      "CreateWebhook1": {
        "title": "CreateWebhook1",
        "required": [
          "endpoint_url"
        ],
        "type": "object",
        "properties": {
          "endpoint_url": {
            "type": "string",
            "description": "The URL that the webhook will send data to when triggered.",
            "example": "https://c3e123a02a37497897e08927816bb0c920c9de23c77804f.example.com"
          },
          "actions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "event_id": {
            "type": "string",
            "description": "The Event ID that triggers this webhook. Is null for all events.",
            "example": "62541733007"
          }
        }
      },
      "CreateWebhooks-deprecatedresponse": {
        "title": "CreateWebhooks-deprecatedresponse",
        "type": "object",
        "properties": {
          "error_description": {
            "type": "string",
            "example": "This user is not able to use legacy user endpoints, please use the organization equivalent."
          },
          "status_code": {
            "type": "string",
            "example": "403"
          },
          "error": {
            "type": "string",
            "example": "NOT_AUTHORIZED"
          }
        }
      },
      "creator": {
        "title": "creator",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Team's creator ID",
            "example": "272057970621"
          },
          "name": {
            "type": "string",
            "description": "Team's creator name (or email if name is null)",
            "example": "john@example.com"
          },
          "emails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventTeamCreatorEmails"
            },
            "description": "Team creator email's information"
          }
        }
      },
      "date_facet": {
        "title": "date_facet",
        "enum": [
          "fifteen",
          "hour",
          "day",
          "event_day",
          "week",
          "month",
          "year",
          "none"
        ],
        "type": "string",
        "example": "fifteen"
      },
      "DeleteaCustomQuestionforanEventresponse": {
        "title": "DeleteaCustomQuestionforanEventresponse",
        "type": "object",
        "properties": {
          "deleted": {
            "type": "boolean",
            "example": true
          }
        }
      },
      "DeleteaCustomQuestionforanEventresponse1": {
        "title": "DeleteaCustomQuestionforanEventresponse1",
        "type": "object",
        "properties": {
          "status_code": {
            "type": "number",
            "example": 404
          },
          "error_description": {
            "type": "string",
            "example": "The question you requested does not exist"
          },
          "error": {
            "type": "string",
            "example": "NOT_FOUND"
          }
        }
      },
      "DeleteaDiscountresponse": {
        "title": "DeleteaDiscountresponse",
        "allOf": [
          {
            "$ref": "#/components/schemas/Error"
          },
          {
            "type": "object",
            "properties": {
              "error": {
                "$ref": "#/components/schemas/error4"
              }
            }
          }
        ]
      },
      "DeleteaDiscountresponse1": {
        "title": "DeleteaDiscountresponse1",
        "allOf": [
          {
            "$ref": "#/components/schemas/Error"
          },
          {
            "type": "object",
            "properties": {
              "error": {
                "$ref": "#/components/schemas/error4"
              }
            }
          }
        ]
      },
      "DeleteaTicketGroupresponse": {
        "title": "DeleteaTicketGroupresponse",
        "required": [
          "deleted"
        ],
        "type": "object",
        "properties": {
          "deleted": {
            "type": "boolean",
            "description": "If it was deleted successfully or not.",
            "example": true
          }
        }
      },
      "DeleteanEventresponse": {
        "title": "DeleteanEventresponse",
        "type": "object",
        "properties": {
          "deleted": {
            "type": "boolean",
            "description": "<!-- TODO: Add Data Structure -->",
            "example": true
          }
        }
      },
      "DeleteanEventresponse1": {
        "title": "DeleteanEventresponse1",
        "allOf": [
          {
            "$ref": "#/components/schemas/Error"
          },
          {
            "type": "object",
            "properties": {
              "error": {
                "$ref": "#/components/schemas/error38"
              }
            }
          }
        ]
      },
      "DeleteanEventresponse2": {
        "title": "DeleteanEventresponse2",
        "allOf": [
          {
            "$ref": "#/components/schemas/Error"
          },
          {
            "type": "object",
            "properties": {
              "error": {
                "$ref": "#/components/schemas/error38"
              }
            }
          }
        ]
      },
      "DeleteanInventoryTierresponse": {
        "title": "DeleteanInventoryTierresponse",
        "type": "object",
        "properties": {
          "deleted": {
            "type": "string",
            "description": "True if inventory tier was deleted",
            "example": "true"
          }
        }
      },
      "DeleteanInventoryTierresponse1": {
        "title": "DeleteanInventoryTierresponse1",
        "allOf": [
          {
            "$ref": "#/components/schemas/Error"
          },
          {
            "type": "object",
            "properties": {
              "error": {
                "$ref": "#/components/schemas/error72"
              }
            }
          }
        ]
      },
      "DeleteanInventoryTierresponse2": {
        "title": "DeleteanInventoryTierresponse2",
        "allOf": [
          {
            "$ref": "#/components/schemas/Error"
          },
          {
            "type": "object",
            "properties": {
              "error": {
                "$ref": "#/components/schemas/error72"
              }
            }
          }
        ]
      },
      "DeleteanInventoryTierresponse3": {
        "title": "DeleteanInventoryTierresponse3",
        "allOf": [
          {
            "$ref": "#/components/schemas/Error"
          },
          {
            "type": "object",
            "properties": {
              "error": {
                "$ref": "#/components/schemas/error6"
              }
            }
          }
        ]
      },
      "DeleteanInventoryTierresponse5": {
        "title": "DeleteanInventoryTierresponse5",
        "allOf": [
          {
            "$ref": "#/components/schemas/Error"
          },
          {
            "type": "object",
            "properties": {
              "error": {
                "$ref": "#/components/schemas/error42"
              }
            }
          }
        ]
      },
      "DeleteDefaultQuestionbyIdresponse": {
        "title": "DeleteDefaultQuestionbyIdresponse",
        "type": "object",
        "properties": {
          "deleted": {
            "type": "boolean",
            "example": true
          }
        }
      },
      "DeleteDefaultQuestionbyIdresponse1": {
        "title": "DeleteDefaultQuestionbyIdresponse1",
        "type": "object",
        "properties": {
          "status_code": {
            "type": "number",
            "example": 404
          },
          "error_description": {
            "type": "string",
            "example": "The event you requested does not exist"
          },
          "error": {
            "type": "string",
            "example": "NOT_FOUND"
          }
        }
      },
      "DeleteWebhookbyIDresponse": {
        "title": "DeleteWebhookbyIDresponse",
        "type": "object",
        "properties": {
          "error_description": {
            "type": "string",
            "example": "This user is not able to use legacy user endpoints, please use the organization equivalent."
          },
          "status_code": {
            "type": "string",
            "example": "403"
          },
          "error": {
            "type": "string",
            "example": "NOT_AUTHORIZED"
          }
        }
      },
      "deliverability": {
        "title": "deliverability",
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/status6"
          },
          "reason": {
            "$ref": "#/components/schemas/reason1"
          }
        },
        "description": "The deliverability status and reason of a contact list item."
      },
      "delivery_method": {
        "title": "delivery_method",
        "enum": [
          "electronic",
          "will_call",
          "standard_shipping",
          "third_party_shipping"
        ],
        "type": "string",
        "description": "The method of delivery that is to be used for the attendee.  This can be null.",
        "example": "electronic"
      },
      "DiscountCreateError_Error": {
        "title": "DiscountCreateError_Error",
        "allOf": [
          {
            "$ref": "#/components/schemas/Error"
          },
          {
            "type": "object",
            "properties": {
              "error": {
                "$ref": "#/components/schemas/error1"
              }
            }
          }
        ]
      },
      "discount_type": {
        "title": "discount_type",
        "enum": [
          "access",
          "coded",
          "hold",
          "public"
        ],
        "type": "string",
        "description": "Type of discount applied.",
        "example": "coded"
      },
      "display_size": {
        "title": "display_size",
        "enum": [
          "small",
          "medium",
          "large"
        ],
        "type": "string",
        "description": "The size of the image.",
        "example": "small"
      },
      "entity_type": {
        "title": "entity_type",
        "enum": [
          "global",
          "event",
          "user"
        ],
        "type": "string",
        "description": "Type of entities, that are objects which permissions can be granted ON",
        "example": "global"
      },
      "error1": {
        "title": "error1",
        "enum": [
          "AMOUNT_AND_PERCENT_OFF_PROVIDED",
          "END_DATE_AND_END_DATE_RELATIVE_PROVIDED: Cannot provide discount.end_date and discount.end_date_relative at the same time.",
          "INVALID",
          "MULTI_EVENT_DISCOUNT_NOT_SUPPORTED",
          "PUBLIC_DISCOUNT_NOT_SUPPORTED",
          "START_DATE_AND_START_DATE_RELATIVE_PROVIDED",
          "EXCEED_MAXIMUM_DISCOUNTS_PER_HOLD",
          "ARGUMENTS_ERROR"
        ],
        "type": "string",
        "example": "AMOUNT_AND_PERCENT_OFF_PROVIDED"
      },
      "error2": {
        "title": "error2",
        "enum": [
          "CODE_AND_CODE_FILTER_PROVIDED",
          "INVALID",
          "INVALID_USAGE_FOR_EVENT_ID",
          "ORDER_BY_NOT_SUPPORTED"
        ],
        "type": "string",
        "example": "CODE_AND_CODE_FILTER_PROVIDED"
      },
      "error4": {
        "title": "error4",
        "enum": [
          "DISCOUNT_CANNOT_BE_DELETED"
        ],
        "type": "string",
        "example": "DISCOUNT_CANNOT_BE_DELETED"
      },
      "error6": {
        "title": "error6",
        "enum": [
          "NOT_AUTHORIZED"
        ],
        "type": "string",
        "example": "NOT_AUTHORIZED"
      },
      "error8": {
        "title": "error8",
        "enum": [
          "NOT_FOUND"
        ],
        "type": "string",
        "example": "NOT_FOUND"
      },
      "error10": {
        "title": "error10",
        "enum": [
          "ARGUMENTS_ERROR",
          "HAS_ATTENDEES",
          "CAPACITY_TOTAL_TOO_SMALL",
          "HOLD_QUANTITIES_EXCEEDS_REMAINING_CAPACITY"
        ],
        "type": "string",
        "example": "ARGUMENTS_ERROR"
      },
      "error16": {
        "title": "error16",
        "enum": [
          "NOT_AUTHORIZED",
          "ARGUMENTS_ERROR"
        ],
        "type": "string",
        "example": "NOT_AUTHORIZED"
      },
      "error18": {
        "title": "error18",
        "enum": [
          "MISSING",
          "INVALID",
          "DTSTART_MISSING",
          "RECURRENCE_RULE_DATES_NOT_IN_UTC",
          "DTSTART_OUTSIDE_PERMITTED_RANGE",
          "LAST_OCCURRENCE_START_EXCEEDS_LIMIT",
          "EXCEEDS_MAX_OCCURRENCES"
        ],
        "type": "string",
        "example": "MISSING"
      },
      "error20": {
        "title": "error20",
        "enum": [
          "NOT_AUTHORIZED"
        ],
        "type": "string",
        "example": "NOT_AUTHORIZED"
      },
      "error22": {
        "title": "error22",
        "enum": [
          "DATE_CONFLICT",
          "DIFFERENT_TIMEZONES",
          "INVALID_DATE",
          "INVENTORY_TYPE_CONFLICT",
          "INVITE_CONFLICT",
          "NO_DEFAULT_ORGANIZER",
          "NO_PACKAGE_SELECTED",
          "NO_VENUE",
          "PASSWORD_CONFLICT",
          "SHARE_INVITE_CONFLICT",
          "UNSUPPORTED_TIMEZONE",
          "VENUE_AND_ONLINE",
          "SUMMARY_DESCRIPTION_CONFLICT"
        ],
        "type": "string",
        "example": "DATE_CONFLICT"
      },
      "error24": {
        "title": "error24",
        "enum": [
          "CANNOT_UPDATE_CURRENCY",
          "CANNOT_UPDATE_SOURCE",
          "DATE_CONFLICT",
          "DIFFERENT_TIMEZONES",
          "INVALID_DATE",
          "INVENTORY_TYPE_CONFLICT",
          "INVITE_CONFLICT",
          "NO_DEFAULT_ORGANIZER",
          "NO_PAYMENT_OPTIONS",
          "NO_PACKAGE_SELECTED",
          "NO_VENUE",
          "PASSWORD_CONFLICT",
          "PAYMENT_OPTIONS_DEPRECATED_SPLIT_FEES",
          "PAYMENT_OPTIONS_NO_COUNTRY",
          "PAYMENT_OPTIONS_NO_PAYMENT_TYPE",
          "PAYMENT_OPTIONS_PAYPAL_NO_EMAIL",
          "SHARE_INVITE_CONFLICT",
          "UNSUPPORTED_TIMEZONE",
          "VENUE_AND_ONLINE",
          "SUMMARY_DESCRIPTION_CONFLICT",
          "OCCURRENCE_TIMEZONE_UPDATE_NOT_ALLOWED",
          "SERIES_PARENT_START_END_DATE_EDIT",
          "OCCURRENCE_DURATION_TOO_LONG",
          "IS_RESERVED_SEATING_UPDATE_NOT_ALLOWED_ON_SERIES_EVENTS",
          "IS_SERIES_UPDATE_NOT_ALLOWED_ON_RESERVED_EVENTS",
          "IS_SERIES_UPDATE_NOT_ALLOWED_ON_TICKETED_EVENTS",
          "IS_SERIES_UPDATE_NOT_ALLOWED_ON_PUBLISHED_EVENTS",
          "IS_SERIES_UPDATE_NOT_ALLOWED_HAS_OCCURRENCES",
          "IS_SERIES_UPDATE_NOT_ALLOWED_ON_SERIES_OCCURRENCE",
          "ARGUMENTS_ERROR"
        ],
        "type": "string",
        "example": "CANNOT_UPDATE_CURRENCY"
      },
      "error26": {
        "title": "error26",
        "enum": [
          "ARGUMENTS_ERROR"
        ],
        "type": "string",
        "example": "ARGUMENTS_ERROR"
      },
      "error28": {
        "title": "error28",
        "enum": [
          "NOT_FOUND"
        ],
        "type": "string",
        "example": "NOT_FOUND"
      },
      "error30": {
        "title": "error30",
        "enum": [
          "ALREADY_PUBLISHED_OR_DELETED",
          "NO_PAYMENT_OPTIONS",
          "PAYMENT_OPTIONS_DEPRECATED_SPLIT_FEES",
          "PAYMENT_OPTIONS_NO_COUNTRY",
          "PAYMENT_OPTIONS_NO_PAYMENT_TYPE",
          "PAYMENT_OPTIONS_PAYPAL_NO_EMAIL",
          "PUBLISH_FREE_EVENT_FEATURE_DENIED",
          "ERROR_CANNOT_PUBLISH_SERIES_WITH_NO_DATES"
        ],
        "type": "string",
        "example": "ALREADY_PUBLISHED_OR_DELETED"
      },
      "error32": {
        "title": "error32",
        "enum": [
          "NOT_PUBLISHED",
          "CANNOT_UNPUBLISH"
        ],
        "type": "string",
        "example": "NOT_PUBLISHED"
      },
      "error34": {
        "title": "error34",
        "enum": [
          "INSUFFICIENT_PACKAGE",
          "INVALID_END_DATE",
          "INVALID_START_DATE",
          "UNABLE_TO_COPY_EVENT",
          "UNSUPPORTED_TIMEZONE"
        ],
        "type": "string",
        "example": "INSUFFICIENT_PACKAGE"
      },
      "error36": {
        "title": "error36",
        "enum": [
          "ALREADY_CANCELED",
          "CANNOT_CANCEL"
        ],
        "type": "string",
        "example": "ALREADY_CANCELED"
      },
      "error38": {
        "title": "error38",
        "enum": [
          "ALREADY_DELETED",
          "CANNOT_DELETE"
        ],
        "type": "string",
        "example": "ALREADY_DELETED"
      },
      "error42": {
        "title": "error42",
        "enum": [
          "NOT_FOUND"
        ],
        "type": "string",
        "example": "NOT_FOUND"
      },
      "error44": {
        "title": "error44",
        "enum": [
          "EXCEED_MAXIMUM_INVENTORY_TIERS",
          "EXCEED_MAXIMUM_TICKET_RULE_TICKETS",
          "ARGUMENTS_ERROR"
        ],
        "type": "string",
        "example": "EXCEED_MAXIMUM_INVENTORY_TIERS"
      },
      "error56": {
        "title": "error56",
        "enum": [
          "ARGUMENTS_ERROR",
          "HOLD_QUANTITIES_EXCEEDS_CAPACITY_TOTAL"
        ],
        "type": "string",
        "example": "ARGUMENTS_ERROR"
      },
      "error72": {
        "title": "error72",
        "enum": [
          "HAS_ATTENDEES",
          "IS_STARTED_AFTER",
          "LAST_TICKET",
          "HAS_SEAT_ASSIGNMENTS"
        ],
        "type": "string",
        "example": "HAS_ATTENDEES"
      },
      "error78": {
        "title": "error78",
        "enum": [
          "BAD_FILE",
          "BAD_FORMAT",
          "BAD_UPLOAD_TOKEN",
          "S3_ERROR"
        ],
        "type": "string",
        "example": "BAD_FILE"
      },
      "error80": {
        "title": "error80",
        "enum": [
          "ORDER_EXPIRED"
        ],
        "type": "string",
        "example": "ORDER_EXPIRED"
      },
      "error82": {
        "title": "error82",
        "enum": [
          "PRICING_MODEL_NOT_SUPPORTED",
          "INVALID_CURRENCY_COUNTRY_COMBINATION",
          "BASE_PRICE_TOO_LOW_TO_ABSORB",
          "ARGUMENTS_ERROR"
        ],
        "type": "string",
        "example": "PRICING_MODEL_NOT_SUPPORTED"
      },
      "error84": {
        "title": "error84",
        "enum": [
          "INVALID_CURRENCY_COUNTRY_COMBINATION",
          "ARGUMENTS_ERROR"
        ],
        "type": "string",
        "example": "INVALID_CURRENCY_COUNTRY_COMBINATION"
      },
      "error86": {
        "title": "error86",
        "enum": [
          "INSUFFICIENT_PACKAGE",
          "NOT_ALLOWED"
        ],
        "type": "string",
        "example": "INSUFFICIENT_PACKAGE"
      },
      "error88": {
        "title": "error88",
        "enum": [
          "INSUFFICIENT_PACKAGE"
        ],
        "type": "string",
        "example": "INSUFFICIENT_PACKAGE"
      },
      "error90": {
        "title": "error90",
        "enum": [
          "ARGUMENTS_ERROR",
          "CURRENCY_MISMATCH",
          "INVALID",
          "INVALID_PARAMETER"
        ],
        "type": "string",
        "example": "ARGUMENTS_ERROR"
      },
      "error94": {
        "title": "error94",
        "enum": [
          "NOT_AUTHORIZED"
        ],
        "type": "string",
        "example": "NOT_AUTHORIZED"
      },
      "error96": {
        "title": "error96",
        "enum": [
          "NOT_AUTHORIZED",
          "ARGUMENTS_ERROR"
        ],
        "type": "string",
        "example": "NOT_AUTHORIZED"
      },
      "error100": {
        "title": "error100",
        "enum": [
          "NOT_AUTHORIZED",
          "PAGE_VERSION_DISCONTINUITY",
          "ARGUMENTS_ERROR"
        ],
        "type": "string",
        "example": "NOT_AUTHORIZED"
      },
      "error102": {
        "title": "error102",
        "enum": [
          "MISSING",
          "INVALID"
        ],
        "type": "string",
        "example": "MISSING"
      },
      "error107": {
        "title": "error107",
        "enum": [
          "FIELD_INVALID"
        ],
        "type": "string",
        "example": "FIELD_INVALID"
      },
      "error111": {
        "title": "error111",
        "enum": [
          "NOT_FOUND"
        ],
        "type": "string",
        "example": "NOT_FOUND"
      },
      "error119": {
        "title": "error119",
        "enum": [
          "AUTO_HIDE_NOT_SET"
        ],
        "type": "string",
        "example": "AUTO_HIDE_NOT_SET"
      },
      "error121": {
        "title": "error121",
        "enum": [
          "AUTO_HIDE_NOT_SET",
          "BAD_QUANTITIES",
          "COST_GREATER_THAN_FEE",
          "CURRENCY_MISMATCH",
          "DONATION_AND_COST",
          "DONATION_AND_FREE",
          "DONATION_AND_MIN_QUANTITY",
          "FREE_AND_COST",
          "INSUFFICIENT_PACKAGE",
          "INVALID_DELIVERY_METHOD",
          "INVALID_EVENT",
          "INVALID_EVENT_ID: Event id must match the event id associated with the ticket.",
          "INVALID_INVENTORY_TIER_ID: You cannot change the inventory tier of a ticket.",
          "INVALID_TICKET: You cannot update a child ticket directly.",
          "NO_COST",
          "NO_QUANTITY_TOTAL",
          "SPLIT_AND_INCLUDE",
          "SPLIT_FEES_DEPRECATED",
          "SALES_END_RELATIVE_TOO_FAR_IN_PAST"
        ],
        "type": "string",
        "example": "AUTO_HIDE_NOT_SET"
      },
      "error123": {
        "title": "error123",
        "enum": [
          "AUTO_HIDE_NOT_SET",
          "BAD_QUANTITIES",
          "CANNOT_UPDATE_COST",
          "CIRCULAR_SALES_START_AFTER",
          "COST_GREATER_THAN_FEE",
          "CURRENCY_MISMATCH",
          "DONATION_AND_COST",
          "DONATION_AND_FREE",
          "DONATION_AND_MIN_QUANTITY",
          "FREE_AND_COST",
          "INVALID_DELIVERY_METHOD",
          "INVALID_EVENT",
          "INVALID_TICKET",
          "NO_COST",
          "NO_QUANTITY_TOTAL",
          "SPLIT_AND_INCLUDE",
          "SPLIT_FEES_DEPRECATED",
          "ARGUMENTS_ERROR",
          "SALES_END_RELATIVE_TOO_FAR_IN_PAST"
        ],
        "type": "string",
        "example": "AUTO_HIDE_NOT_SET"
      },
      "error131": {
        "title": "error131",
        "enum": [
          "EXCEEDS_LIMIT"
        ],
        "type": "string",
        "example": "EXCEEDS_LIMIT"
      },
      "event_status": {
        "title": "event_status",
        "enum": [
          "all",
          "live",
          "ended"
        ],
        "type": "string",
        "example": "all"
      },
      "external_provider": {
        "title": "external_provider",
        "enum": [
          "facebook"
        ],
        "type": "string",
        "description": "The external provider.",
        "example": "facebook"
      },
      "fee_namepayment_fee": {
        "title": "fee_namepayment_fee",
        "enum": [
          "payment_fee",
          "service_fee"
        ],
        "type": "string",
        "description": "Name of the fee.",
        "example": "payment_fee"
      },
      "gender": {
        "title": "gender",
        "enum": [
          "male",
          "female"
        ],
        "type": "string",
        "description": "The attendee's gender",
        "example": "male"
      },
      "GetCustomQuestionbyIdresponse": {
        "title": "GetCustomQuestionbyIdresponse",
        "type": "object",
        "properties": {
          "status_code": {
            "type": "number",
            "example": 404
          },
          "error_description": {
            "type": "string",
            "example": "The question you requested does not exist"
          },
          "error": {
            "type": "string",
            "example": "NOT_FOUND"
          }
        }
      },
      "GetDefaultQuestionbyIdresponse": {
        "title": "GetDefaultQuestionbyIdresponse",
        "type": "object",
        "properties": {
          "question": {
            "$ref": "#/components/schemas/CannedQuestion"
          }
        }
      },
      "GetDefaultQuestionbyIdresponse1": {
        "title": "GetDefaultQuestionbyIdresponse1",
        "type": "object",
        "properties": {
          "status_code": {
            "type": "number",
            "example": 404
          },
          "error_description": {
            "type": "string",
            "example": "The event you requested does not exist"
          },
          "error": {
            "type": "string",
            "example": "NOT_FOUND"
          }
        }
      },
      "group_by": {
        "title": "group_by",
        "enum": [
          "payment_method",
          "payment_method_application",
          "ticket",
          "ticket_application",
          "currency",
          "event_currency",
          "reserved_section",
          "event",
          "event_ticket",
          "event_application",
          "country",
          "city",
          "state",
          "source",
          "zone",
          "location",
          "access_level",
          "device_name",
          "sales_channel_lvl_1",
          "sales_channel_lvl_2",
          "sales_channel_lvl_3",
          "delivery_method"
        ],
        "type": "string",
        "example": "payment_method"
      },
      "image_type": {
        "title": "image_type",
        "enum": [
          "principal"
        ],
        "type": "string",
        "description": "The type of the image. By default: principal. Extra types might be defined in the future.",
        "example": "principal"
      },
      "image1": {
        "title": "image1",
        "required": [
          "image_id"
        ],
        "type": "object",
        "properties": {
          "image_id": {
            "type": "string",
            "description": "The ID of the image. See Media section for how to upload images."
          },
          "display_size": {
            "$ref": "#/components/schemas/display_size"
          },
          "corner_style": {
            "$ref": "#/components/schemas/corner_style"
          },
          "alt": {
            "type": "string",
            "description": "The text to use as the alternative text for the image"
          }
        }
      },
      "image2": {
        "title": "image2",
        "type": "object",
        "properties": {
          "image_id (string) - the image_id provided by uploading an image through Eventbrite media upload.": {
            "type": "string"
          }
        }
      },
      "inventory_type_filter": {
        "title": "inventory_type_filter",
        "enum": [
          "limited",
          "reserved",
          "externally_ticketed"
        ],
        "type": "string",
        "example": "limited"
      },
      "item_type1": {
        "title": "item_type1",
        "enum": [
          "any",
          "ticket",
          "product"
        ],
        "type": "string",
        "description": "the item type for which get the price fee rates. â€˜anyâ€™ means that applies to all the possible variants.",
        "example": "any"
      },
      "item_type2": {
        "title": "item_type2",
        "enum": [
          "any",
          "ticket",
          "product"
        ],
        "type": "string",
        "example": "any"
      },
      "link_type": {
        "title": "link_type",
        "enum": [
          "sitepage",
          "facebook",
          "instagram",
          "twitter",
          "myspace",
          "wikipedia",
          "tumblr",
          "soundcloud",
          "bandcamp",
          "discogs",
          "songkick",
          "musicbrainz",
          "allmusic",
          "pandora",
          "spotify",
          "playmusic",
          "deezer",
          "applemusic",
          "iheartradio",
          "vimeo",
          "youtube",
          "vevo"
        ],
        "type": "string",
        "example": "sitepage"
      },
      "ListAttendeesbyEventresponse": {
        "title": "ListAttendeesbyEventresponse",
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          },
          "attendees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Attendee"
            },
            "description": ""
          }
        }
      },
      "ListAttendeesbyOrganizationresponse": {
        "title": "ListAttendeesbyOrganizationresponse",
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          },
          "attendees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Attendee"
            },
            "description": ""
          }
        }
      },
      "ListAttendeesbyTeamresponse": {
        "title": "ListAttendeesbyTeamresponse",
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          },
          "attendees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Attendee"
            },
            "description": ""
          }
        }
      },
      "ListbyEventresponse": {
        "title": "ListbyEventresponse",
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          },
          "teams": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventTeamResponse"
            },
            "description": ""
          }
        }
      },
      "ListCustomQuestionsbyEventresponse": {
        "title": "ListCustomQuestionsbyEventresponse",
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          },
          "questions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BaseQuestion"
            },
            "description": ""
          }
        }
      },
      "ListCustomQuestionsbyEventresponse1": {
        "title": "ListCustomQuestionsbyEventresponse1",
        "type": "object",
        "properties": {
          "status_code": {
            "type": "number",
            "example": 404
          },
          "error_description": {
            "type": "string",
            "example": "The event you requested does not exist"
          },
          "error": {
            "type": "string",
            "example": "NOT_FOUND"
          }
        }
      },
      "ListDefaultQuestionsbyEventresponse": {
        "title": "ListDefaultQuestionsbyEventresponse",
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          },
          "questions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CannedQuestion"
            },
            "description": ""
          }
        }
      },
      "ListEventsbyOrganizationresponse": {
        "title": "ListEventsbyOrganizationresponse",
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          },
          "events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Event"
            },
            "description": ""
          }
        }
      },
      "ListEventsbyOrganizationresponse1": {
        "title": "ListEventsbyOrganizationresponse1",
        "allOf": [
          {
            "$ref": "#/components/schemas/Error"
          },
          {
            "type": "object",
            "properties": {
              "error": {
                "$ref": "#/components/schemas/error26"
              }
            }
          }
        ]
      },
      "ListEventsbyOrganizationresponse3": {
        "title": "ListEventsbyOrganizationresponse3",
        "allOf": [
          {
            "$ref": "#/components/schemas/Error"
          },
          {
            "type": "object",
            "properties": {
              "error": {
                "$ref": "#/components/schemas/error28"
              }
            }
          }
        ]
      },
      "ListEventsbySeriesresponse": {
        "title": "ListEventsbySeriesresponse",
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          },
          "events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Event"
            },
            "description": ""
          }
        }
      },
      "ListEventsbyVenueresponse": {
        "title": "ListEventsbyVenueresponse",
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          },
          "events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Event"
            },
            "description": ""
          }
        }
      },
      "ListFormatsresponse": {
        "title": "ListFormatsresponse",
        "type": "object",
        "properties": {
          "locale": {
            "type": "string",
            "example": "en_US"
          },
          "formats": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Format"
            },
            "description": ""
          }
        }
      },
      "ListInventoryTiersbyEventresponse": {
        "title": "ListInventoryTiersbyEventresponse",
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          },
          "inventory_tiers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InventoryTier"
            },
            "description": ""
          }
        }
      },
      "ListInventoryTiersbyEventresponse1": {
        "title": "ListInventoryTiersbyEventresponse1",
        "allOf": [
          {
            "$ref": "#/components/schemas/Error"
          },
          {
            "type": "object",
            "properties": {
              "error": {
                "$ref": "#/components/schemas/error6"
              }
            }
          }
        ]
      },
      "ListInventoryTiersbyEventresponse3": {
        "title": "ListInventoryTiersbyEventresponse3",
        "allOf": [
          {
            "$ref": "#/components/schemas/Error"
          },
          {
            "type": "object",
            "properties": {
              "error": {
                "$ref": "#/components/schemas/error8"
              }
            }
          }
        ]
      },
      "ListofCategoriesresponse": {
        "title": "ListofCategoriesresponse",
        "type": "object",
        "properties": {
          "locale": {
            "type": "string",
            "example": "en_US"
          },
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          },
          "categories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Category"
            },
            "description": ""
          }
        }
      },
      "ListofSubcategoriesresponse": {
        "title": "ListofSubcategoriesresponse",
        "type": "object",
        "properties": {
          "locale": {
            "type": "string",
            "example": "en_US"
          },
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          },
          "subcategories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Subcategory"
            },
            "description": ""
          },
          "subcategory": {
            "$ref": "#/components/schemas/Subcategory"
          }
        }
      },
      "ListofWebhooks-deprecationresponse": {
        "title": "ListofWebhooks-deprecationresponse",
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          },
          "webhooks": {
            "$ref": "#/components/schemas/Webhook"
          }
        }
      },
      "ListOrdersbyEventIDresponse": {
        "title": "ListOrdersbyEventIDresponse",
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          },
          "orders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Order"
            },
            "description": ""
          }
        }
      },
      "ListOrdersbyOrganizationIDresponse": {
        "title": "ListOrdersbyOrganizationIDresponse",
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          },
          "orders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Order"
            },
            "description": ""
          }
        }
      },
      "ListOrdersbyUserIDresponse": {
        "title": "ListOrdersbyUserIDresponse",
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          },
          "orders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Order"
            },
            "description": ""
          }
        }
      },
      "ListOrganizationsbyUserresponse": {
        "title": "ListOrganizationsbyUserresponse",
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          },
          "organizations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Organization"
            },
            "description": ""
          }
        }
      },
      "ListPricingresponse": {
        "title": "ListPricingresponse",
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          },
          "fee_rates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FeeRate"
            },
            "description": ""
          }
        }
      },
      "ListPricingresponse1": {
        "title": "ListPricingresponse1",
        "allOf": [
          {
            "$ref": "#/components/schemas/Error"
          },
          {
            "type": "object",
            "properties": {
              "error": {
                "$ref": "#/components/schemas/error84"
              }
            }
          }
        ]
      },
      "ListRolesbyOrganizationresponse": {
        "title": "ListRolesbyOrganizationresponse",
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/Continuation"
          },
          "roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Role"
            },
            "description": ""
          }
        }
      },
      "ListSeatMapsbyOrganizationresponse": {
        "title": "ListSeatMapsbyOrganizationresponse",
        "type": "object",
        "properties": {
          "seatmaps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SeatMap"
            },
            "description": ""
          }
        }
      },
      "ListTicketClassesAvailableForSalebyEventresponse": {
        "title": "ListTicketClassesAvailableForSalebyEventresponse",
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          },
          "ticket_classes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TicketClassForSaleResponse"
            },
            "description": ""
          }
        }
      },
      "ListTicketClassesAvailableForSalebyEventresponse1": {
        "title": "ListTicketClassesAvailableForSalebyEventresponse1",
        "allOf": [
          {
            "$ref": "#/components/schemas/Error"
          },
          {
            "type": "object",
            "properties": {
              "error": {
                "$ref": "#/components/schemas/error26"
              }
            }
          }
        ]
      },
      "ListTicketClassesAvailableForSalebyEventresponse3": {
        "title": "ListTicketClassesAvailableForSalebyEventresponse3",
        "allOf": [
          {
            "$ref": "#/components/schemas/Error"
          },
          {
            "type": "object",
            "properties": {
              "error": {
                "$ref": "#/components/schemas/error6"
              }
            }
          }
        ]
      },
      "ListTicketClassesAvailableForSalebyEventresponse5": {
        "title": "ListTicketClassesAvailableForSalebyEventresponse5",
        "allOf": [
          {
            "$ref": "#/components/schemas/Error"
          },
          {
            "type": "object",
            "properties": {
              "error": {
                "$ref": "#/components/schemas/error8"
              }
            }
          }
        ]
      },
      "ListTicketClassesbyEventresponse": {
        "title": "ListTicketClassesbyEventresponse",
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          },
          "ticket_classes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TicketClass"
            },
            "description": ""
          }
        }
      },
      "ListTicketGroupsbyOrganizationresponse": {
        "title": "ListTicketGroupsbyOrganizationresponse",
        "type": "object",
        "properties": {
          "ticket_groups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TicketGroup"
            },
            "description": ""
          }
        }
      },
      "ListVenuesbyOrganizationresponse": {
        "title": "ListVenuesbyOrganizationresponse",
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          },
          "venues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VenueResponse"
            },
            "description": ""
          }
        }
      },
      "ListWebhookbyOrganizationIDresponse": {
        "title": "ListWebhookbyOrganizationIDresponse",
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          },
          "webhooks": {
            "$ref": "#/components/schemas/Webhook"
          }
        }
      },
      "ListyourOrganizationsresponse": {
        "title": "ListyourOrganizationsresponse",
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          },
          "organizations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Organization"
            },
            "description": ""
          }
        }
      },
      "message_code": {
        "title": "message_code",
        "enum": [
          "tickets_not_yet_on_sale",
          "tickets_with_sales_ended",
          "tickets_sold_out",
          "tickets_unavailable",
          "tickets_at_the_door",
          "event_cancelled",
          "event_postponed"
        ],
        "type": "string",
        "description": "The message returned is overridden by the following event status message.",
        "example": "tickets_not_yet_on_sale"
      },
      "message_code1": {
        "title": "message_code1",
        "enum": [
          "tickets_not_yet_on_sale",
          "tickets_with_sales_ended",
          "tickets_sold_out",
          "tickets_unavailable",
          "tickets_at_the_door",
          "event_cancelled",
          "event_postponed",
          "checkout_title_tickets",
          "checkout_title_add_ons",
          "checkout_title_donations"
        ],
        "type": "string",
        "description": "Default message code that will override the specified text code.",
        "example": "tickets_not_yet_on_sale"
      },
      "message_code3": {
        "title": "message_code3",
        "enum": [
          "tickets_not_yet_on_sale",
          "tickets_with_sales_ended",
          "tickets_sold_out",
          "tickets_unavailable",
          "tickets_at_the_door",
          "event_cancelled",
          "event_postponed",
          "checkout_title_tickets",
          "checkout_title_add_ons",
          "checkout_title_donations"
        ],
        "type": "string",
        "description": "Default message code that will override specified event text code.",
        "example": "tickets_not_yet_on_sale"
      },
      "message_code4": {
        "title": "message_code4",
        "enum": [
          "tickets_not_yet_on_sale",
          "tickets_with_sales_ended",
          "tickets_sold_out",
          "tickets_unavailable",
          "tickets_at_the_door",
          "event_cancelled",
          "event_postponed",
          "checkout_title_tickets",
          "checkout_title_add_ons",
          "checkout_title_donations"
        ],
        "type": "string",
        "description": "Message code associated to this message. Will be null if its a custom message type.",
        "example": "tickets_not_yet_on_sale"
      },
      "message_type": {
        "title": "message_type",
        "enum": [
          "default",
          "canonical",
          "custom"
        ],
        "type": "string",
        "example": "default"
      },
      "message_type1": {
        "title": "message_type1",
        "enum": [
          "default",
          "canonical",
          "custom"
        ],
        "type": "string",
        "description": "Type of the message returned.",
        "example": "default"
      },
      "message_type2": {
        "title": "message_type2",
        "enum": [
          "default",
          "canonical",
          "custom"
        ],
        "type": "string",
        "example": "default"
      },
      "name": {
        "title": "name",
        "enum": [
          "eventbrite.payment_fee_v2",
          "eventbrite.service_fee",
          "eventbrite.shipping.item",
          "eventbrite.shipping",
          "royalty",
          "shipping"
        ],
        "type": "string",
        "description": "Name of the fee.",
        "example": "royalty"
      },
      "on_sale_status": {
        "title": "on_sale_status",
        "enum": [
          "UNKNOWN",
          "NOT_YET_ON_SALE",
          "AVAILABLE",
          "HIDDEN",
          "SOLD_OUT",
          "UNAVAILABLE"
        ],
        "type": "string",
        "description": "The status of the ticket class can be one of \"UNKNOWN\", \"NOT_YET_ON_SALE\", \"AVAILABLE\", \"HIDDEN\", \"SOLD_OUT\", \"UNAVAILABLE\". These can change based on on/off sale dates, ticket class state, or current inventory.",
        "example": "UNKNOWN"
      },
      "on_sale_status1": {
        "title": "on_sale_status1",
        "enum": [
          "UNKNOWN",
          "NOT_YET_ON_SALE",
          "AVAILABLE",
          "HIDDEN",
          "SOLD_OUT",
          "UNAVAILABLE"
        ],
        "type": "string",
        "description": "The status of the ticket variant can be one of \"UNKNOWN\", \"NOT_YET_ON_SALE\", \"AVAILABLE\", \"HIDDEN\", \"SOLD_OUT\", \"UNAVAILABLE\". These can change based on on/off sale dates, ticket variant state, or current inventory.",
        "example": "UNKNOWN"
      },
      "on_sale_status2": {
        "title": "on_sale_status2",
        "enum": [
          "AVAILABLE",
          "NOT_YET_ON_SALE",
          "HIDDEN",
          "SOLD_OUT",
          "UNAVAILABLE",
          "UNKNOWN"
        ],
        "type": "string",
        "description": "On sale status of the ticket class",
        "example": "AVAILABLE"
      },
      "order_by": {
        "title": "order_by",
        "enum": [
          "code_asc",
          "code_desc",
          "discount_type_asc",
          "discount_type_desc",
          "start_asc",
          "start_desc"
        ],
        "type": "string",
        "example": "code_asc"
      },
      "order_by1": {
        "title": "order_by1",
        "enum": [
          "start_asc",
          "start_desc",
          "created_asc",
          "created_desc"
        ],
        "type": "string",
        "example": "start_asc"
      },
      "order_by2": {
        "title": "order_by2",
        "enum": [
          "start_asc",
          "start_desc",
          "created_asc",
          "created_desc",
          "name_asc",
          "name_desc"
        ],
        "type": "string",
        "example": "start_asc"
      },
      "Order1": {
        "title": "Order1",
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The Id of the order",
            "example": "442719216"
          },
          "created": {
            "type": "string",
            "nullable": true
          },
          "changed": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "The ticket buyerâ€™s name. Use this in preference to first_name/last_name if possible for forward compatibility with non-Western names.",
            "example": "John Smith"
          },
          "first_name": {
            "type": "string",
            "description": "The ticket buyerâ€™s first name",
            "example": "John"
          },
          "last_name": {
            "type": "string",
            "description": "The ticket buyerâ€™s last name",
            "example": "Smith"
          },
          "email": {
            "type": "string",
            "description": "The ticket buyerâ€™s email address",
            "example": "john.smith@example.com"
          },
          "costs": {
            "$ref": "#/components/schemas/Cost"
          },
          "event_id": {
            "type": "string",
            "description": "The event id this order is against",
            "example": "17937020110"
          },
          "event": {
            "$ref": "#/components/schemas/Event"
          },
          "attendees": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "description": "The list of attendees that belong to this order (requires the `attendees` expansion)"
          },
          "time_remaining": {
            "type": "number",
            "description": "The time remaining to complete this order (in seconds)",
            "nullable": true,
            "example": 100
          },
          "resource_uri": {
            "type": "string",
            "description": "Is an absolute URL to the API endpoint that will return you the canonical representation of the order.",
            "example": "https://www.eventbriteapi.com/v3/orders/1234/"
          },
          "status": {
            "$ref": "#/components/schemas/status2"
          },
          "ticket_buyer_settings": {
            "$ref": "#/components/schemas/EventTicketBuyerSettings"
          },
          "contact_list_preferences": {
            "$ref": "#/components/schemas/ContactListPreferences"
          },
          "survey_responses": {
            "type": "object",
            "description": "Object representing survey responses associated with the order. Keys are `question_ids` and values are the answers to those questions. Available through the use of `survey_responses` expansion."
          }
        }
      },
      "original": {
        "title": "original",
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "description": "The URL of the image",
            "example": "https://image.com"
          },
          "width": {
            "type": "number",
            "description": "The width of the image in pixels",
            "example": 800
          },
          "height": {
            "type": "number",
            "description": "The height of the image in pixels",
            "example": 400
          }
        },
        "description": "The original image"
      },
      "payer": {
        "title": "payer",
        "enum": [
          "attendee",
          "organizer"
        ],
        "type": "string",
        "description": "Who is paying the fee, used to determine if the fee is being passed on or absorbed into the item price.",
        "example": "attendee"
      },
      "payer1": {
        "title": "payer1",
        "enum": [
          "attendee",
          "organizer"
        ],
        "type": "string",
        "description": "Who is paying the fee, used to determine if the fee is being passed on or absorbed. Guaranteed to be present and non-null if the group_by array passed to the request contains payer.",
        "example": "organizer"
      },
      "payment_method2": {
        "title": "payment_method2",
        "enum": [
          "CASH",
          "CHECK",
          "INVOICE"
        ],
        "type": "string",
        "description": "Set of possible values: [CASH, CHECK, INVOICE]",
        "example": "CASH"
      },
      "payment_type1": {
        "title": "payment_type1",
        "enum": [
          "eventbrite",
          "authnet",
          "paypal"
        ],
        "type": "string",
        "description": "The payment type used to calculate the price. If itâ€™s not provided, eventbrite will be used by default.",
        "example": "eventbrite"
      },
      "payment_type2": {
        "title": "payment_type2",
        "enum": [
          "any",
          "eventbrite",
          "authnet",
          "moneris",
          "paypal",
          "google",
          "manual",
          "free",
          "offline",
          "cash",
          "check",
          "invoice"
        ],
        "type": "string",
        "description": "the payment type to get the price for. If itâ€™s not provided, or the value is â€˜anyâ€™, all the existing variants will be returned.",
        "example": "any"
      },
      "payment_type4": {
        "title": "payment_type4",
        "enum": [
          "any",
          "eventbrite",
          "authnet",
          "moneris",
          "paypal",
          "google",
          "manual",
          "free",
          "offline",
          "cash",
          "check",
          "invoice"
        ],
        "type": "string",
        "example": "any"
      },
      "permission_type": {
        "title": "permission_type",
        "enum": [
          "user",
          "event"
        ],
        "type": "string",
        "description": "the type of entity on which the role permissions act. If there's more than one, the smallest one will be returned (considering 'event'<'user').",
        "example": "user"
      },
      "plan": {
        "title": "plan",
        "enum": [
          "any",
          "package1",
          "package2"
        ],
        "type": "string",
        "description": "The assortment package name to get the price for. â€˜anyâ€™ means that applies to all the prossible variants.",
        "example": "package1"
      },
      "plan1": {
        "title": "plan1",
        "enum": [
          "any",
          "package1",
          "package2"
        ],
        "type": "string",
        "example": "any"
      },
      "pos": {
        "title": "pos",
        "enum": [
          "online",
          "at_the_door"
        ],
        "type": "string",
        "example": "online"
      },
      "privacy_type": {
        "title": "privacy_type",
        "enum": [
          "public",
          "password_required",
          "invitation_required",
          "link_required"
        ],
        "type": "string",
        "example": "public"
      },
      "PublishanEventresponse": {
        "title": "PublishanEventresponse",
        "type": "object",
        "properties": {
          "published": {
            "type": "boolean",
            "example": true
          }
        }
      },
      "PublishanEventresponse1": {
        "title": "PublishanEventresponse1",
        "allOf": [
          {
            "$ref": "#/components/schemas/Error"
          },
          {
            "type": "object",
            "properties": {
              "error": {
                "$ref": "#/components/schemas/error30"
              }
            }
          }
        ]
      },
      "question1": {
        "title": "question1",
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "example": "Job Title"
          },
          "html": {
            "type": "string",
            "description": "Question displayed to the recipient",
            "example": "Job Title"
          }
        }
      },
      "question2": {
        "title": "question2",
        "type": "object",
        "properties": {
          "html": {
            "type": "string",
            "description": "Question displayed to the recipient",
            "example": "First Name"
          }
        }
      },
      "question3": {
        "title": "question3",
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "description": "Question displayed to the recipient",
            "example": "Custom Question Title"
          },
          "html": {
            "type": "string",
            "description": "Question displayed to the recipient",
            "example": "Question Title"
          }
        }
      },
      "reason": {
        "title": "reason",
        "enum": [
          "below_qty_minimum",
          "exceed_qty_maximum",
          "unknown"
        ],
        "type": "string",
        "description": "reason this ticket class is causing the cart to be disqualified from checkout.",
        "example": "below_qty_minimum"
      },
      "reason1": {
        "title": "reason1",
        "enum": [
          "hard_bounced",
          "soft_bounced",
          "when_opted_out",
          "unknown"
        ],
        "type": "string",
        "example": "hard_bounced"
      },
      "recipient": {
        "title": "recipient",
        "enum": [
          "event.6018",
          "event.ID",
          "eventbrite",
          "tax"
        ],
        "type": "string",
        "description": "Who keeps the amount of the cost component.",
        "example": "event.6018"
      },
      "recipient1": {
        "title": "recipient1",
        "enum": [
          "event",
          "eventbrite",
          "tax"
        ],
        "type": "string",
        "description": "Who the money should be paid to. Guaranteed to be present and non-null if the group_by array passed to the request contains recipient.",
        "example": "eventbrite"
      },
      "refund_request_statuses": {
        "title": "refund_request_statuses",
        "enum": [
          "completed",
          "pending",
          "outside_policy",
          "disputed",
          "denied"
        ],
        "type": "string",
        "example": "completed"
      },
      "relative_to_event": {
        "title": "relative_to_event",
        "enum": [
          "start_time",
          "end_time"
        ],
        "type": "string",
        "description": "Enum representing whether sales end relative to event start or end",
        "example": "start_time"
      },
      "report_options": {
        "title": "report_options",
        "type": "object",
        "properties": {
          "event_ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of events ids to report on."
          },
          "metrics": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          }
        },
        "description": "The report configuration, should contain `event_ids` and metrics."
      },
      "report_status": {
        "title": "report_status",
        "enum": [
          "active.",
          "inactive.",
          "deleted."
        ],
        "type": "string",
        "description": "Status of the scheduled report",
        "example": "active."
      },
      "respondent": {
        "title": "respondent",
        "enum": [
          "ticket_buyer",
          "attendee"
        ],
        "type": "string",
        "description": "Ask this question to the ticket buyer or each attendee.",
        "example": "ticket_buyer"
      },
      "respondentDEPRECATED": {
        "title": "respondentDEPRECATED",
        "enum": [
          "ticket_buyer",
          "attendee"
        ],
        "type": "string",
        "description": "(DEPRECATED: This param will be removed from June 1, 2021, Use: Ticket Buyer Settings - Update) Ask this question to the ticket buyer or each attendee. When this value is not sent, the survey_type value of the event will not be updated.",
        "example": "ticket_buyer"
      },
      "RetrieveaAttendeeReportresponse": {
        "title": "RetrieveaAttendeeReportresponse",
        "allOf": [
          {
            "$ref": "#/components/schemas/Error"
          },
          {
            "type": "object",
            "properties": {
              "error": {
                "$ref": "#/components/schemas/error90"
              }
            }
          }
        ]
      },
      "RetrieveaCapacityTierresponse": {
        "title": "RetrieveaCapacityTierresponse",
        "allOf": [
          {
            "$ref": "#/components/schemas/Error"
          },
          {
            "type": "object",
            "properties": {
              "error": {
                "$ref": "#/components/schemas/error6"
              }
            }
          }
        ]
      },
      "RetrieveaCapacityTierresponse2": {
        "title": "RetrieveaCapacityTierresponse2",
        "allOf": [
          {
            "$ref": "#/components/schemas/Error"
          },
          {
            "type": "object",
            "properties": {
              "error": {
                "$ref": "#/components/schemas/error8"
              }
            }
          }
        ]
      },
      "RetrieveaSalesReportresponse": {
        "title": "RetrieveaSalesReportresponse",
        "allOf": [
          {
            "$ref": "#/components/schemas/Error"
          },
          {
            "type": "object",
            "properties": {
              "error": {
                "$ref": "#/components/schemas/error90"
              }
            }
          }
        ]
      },
      "RetrieveaTicketClassresponse": {
        "title": "RetrieveaTicketClassresponse",
        "allOf": [
          {
            "$ref": "#/components/schemas/Error"
          },
          {
            "type": "object",
            "properties": {
              "error": {
                "$ref": "#/components/schemas/error119"
              }
            }
          }
        ]
      },
      "RetrieveanEventSeriesresponse": {
        "title": "RetrieveanEventSeriesresponse",
        "allOf": [
          {
            "$ref": "#/components/schemas/Event"
          },
          {
            "type": "object",
            "properties": {
              "series_dates": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EventSeriesDate"
                },
                "description": "The series dates of the parent event. (requires the `series_dates` expansion)"
              }
            }
          }
        ]
      },
      "RetrieveanInventoryTierresponse": {
        "title": "RetrieveanInventoryTierresponse",
        "type": "object",
        "properties": {
          "inventory_tier": {
            "$ref": "#/components/schemas/InventoryTier"
          }
        }
      },
      "RetrieveanInventoryTierresponse1": {
        "title": "RetrieveanInventoryTierresponse1",
        "allOf": [
          {
            "$ref": "#/components/schemas/Error"
          },
          {
            "type": "object",
            "properties": {
              "error": {
                "$ref": "#/components/schemas/error6"
              }
            }
          }
        ]
      },
      "RetrieveanInventoryTierresponse3": {
        "title": "RetrieveanInventoryTierresponse3",
        "allOf": [
          {
            "$ref": "#/components/schemas/Error"
          },
          {
            "type": "object",
            "properties": {
              "error": {
                "$ref": "#/components/schemas/error42"
              }
            }
          }
        ]
      },
      "RetrieveFullHTMLDescriptionresponse": {
        "title": "RetrieveFullHTMLDescriptionresponse",
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          }
        }
      },
      "RetrieveFullHTMLDescriptionresponse1": {
        "title": "RetrieveFullHTMLDescriptionresponse1",
        "type": "object",
        "properties": {
          "error": {
            "$ref": "#/components/schemas/error16"
          }
        }
      },
      "RetrieveInformationaboutaUserAccountresponse": {
        "title": "RetrieveInformationaboutaUserAccountresponse",
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/User"
          }
        }
      },
      "RetrieveLatestPublishedVersionofStructuredContentbyEventIdresponse": {
        "title": "RetrieveLatestPublishedVersionofStructuredContentbyEventIdresponse",
        "type": "object",
        "properties": {
          "error": {
            "$ref": "#/components/schemas/error96"
          }
        }
      },
      "RetrieveLatestWorkingVersionofStructuredContentbyEventIdresponse": {
        "title": "RetrieveLatestWorkingVersionofStructuredContentbyEventIdresponse",
        "type": "object",
        "properties": {
          "error": {
            "$ref": "#/components/schemas/error96"
          }
        }
      },
      "RetrieveOrderbyIDresponse": {
        "title": "RetrieveOrderbyIDresponse",
        "allOf": [
          {
            "$ref": "#/components/schemas/Error"
          },
          {
            "type": "object",
            "properties": {
              "error": {
                "$ref": "#/components/schemas/error80"
              }
            }
          }
        ]
      },
      "RetrieveTextOverridesresponse": {
        "title": "RetrieveTextOverridesresponse",
        "allOf": [
          {
            "$ref": "#/components/schemas/Error"
          },
          {
            "type": "object",
            "properties": {
              "error": {
                "$ref": "#/components/schemas/error102"
              }
            }
          }
        ]
      },
      "RetrieveTicketBuyerSettingsbyEventresponse": {
        "title": "RetrieveTicketBuyerSettingsbyEventresponse",
        "allOf": [
          {
            "$ref": "#/components/schemas/Error"
          },
          {
            "type": "object",
            "properties": {
              "error": {
                "$ref": "#/components/schemas/error107"
              }
            }
          }
        ]
      },
      "RetrieveTicketBuyerSettingsbyEventresponse2": {
        "title": "RetrieveTicketBuyerSettingsbyEventresponse2",
        "allOf": [
          {
            "$ref": "#/components/schemas/Error"
          },
          {
            "type": "object",
            "properties": {
              "error": {
                "$ref": "#/components/schemas/error6"
              }
            }
          }
        ]
      },
      "RetrieveTicketBuyerSettingsbyEventresponse4": {
        "title": "RetrieveTicketBuyerSettingsbyEventresponse4",
        "allOf": [
          {
            "$ref": "#/components/schemas/Error"
          },
          {
            "type": "object",
            "properties": {
              "error": {
                "$ref": "#/components/schemas/error111"
              }
            }
          }
        ]
      },
      "role1": {
        "title": "role1",
        "enum": [
          "headliner",
          "supporter"
        ],
        "type": "string",
        "description": "Performer's role. It enables to distinguish between a headliner (main) or supporting acts.",
        "example": "headliner"
      },
      "sales_end_relative": {
        "title": "sales_end_relative",
        "required": [
          "relative_to_event",
          "offset"
        ],
        "type": "object",
        "properties": {
          "relative_to_event": {
            "$ref": "#/components/schemas/relative_to_event"
          },
          "offset": {
            "type": "number",
            "description": "The amount of time in seconds that the ticket sales are offset before the event start or end. Nonnegative number."
          }
        },
        "description": "Relative values used to calculate ticket sales_end. Can only be used for series parent tickets."
      },
      "sales_status": {
        "title": "sales_status",
        "enum": [
          "text",
          "on_sale",
          "not_yet_on_sale",
          "sales_ended",
          "sold_out",
          "unavailable"
        ],
        "type": "string",
        "description": "Current sales status of the event.",
        "example": "text"
      },
      "schedule_frequency": {
        "title": "schedule_frequency",
        "enum": [
          "daily",
          "weekly",
          "monthly"
        ],
        "type": "string",
        "description": "Possible frequencies",
        "example": "daily"
      },
      "scope": {
        "title": "scope",
        "enum": [
          "event",
          "multi_events",
          "user"
        ],
        "type": "string",
        "example": "event"
      },
      "scope1": {
        "title": "scope1",
        "required": [
          "type",
          "identifier"
        ],
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/type8"
          },
          "identifier": {
            "type": "string",
            "description": "Id for the specified scope (organization, event, ticket_class or assortment_plan). For assortment_plan, allowed values are 'package1' and 'package2'",
            "example": "4028"
          }
        },
        "description": "The scope for which the item calculations will be made."
      },
      "SearchDiscountsbyOrganizationresponse": {
        "title": "SearchDiscountsbyOrganizationresponse",
        "type": "object",
        "properties": {
          "discounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Discount"
            },
            "description": ""
          }
        }
      },
      "SearchDiscountsbyOrganizationresponse1": {
        "title": "SearchDiscountsbyOrganizationresponse1",
        "allOf": [
          {
            "$ref": "#/components/schemas/Error"
          },
          {
            "type": "object",
            "properties": {
              "error": {
                "$ref": "#/components/schemas/error2"
              }
            }
          }
        ]
      },
      "SearchEvents-deprecatedresponse": {
        "title": "SearchEvents-deprecatedresponse",
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          },
          "events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Event"
            },
            "description": ""
          }
        }
      },
      "SearchteamsbynameTeamresponse": {
        "title": "SearchteamsbynameTeamresponse",
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          },
          "teams": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/teams"
            },
            "description": ""
          }
        }
      },
      "seatmap_number": {
        "title": "seatmap_number",
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "description": "Seat map number of this inventory tier",
        "example": 1
      },
      "series_filter": {
        "title": "series_filter",
        "enum": [
          "allevents",
          "children",
          "parents",
          "nonseries",
          "allseries"
        ],
        "type": "string",
        "example": "allevents"
      },
      "SetStructuredContentbyEventIdandVersionrequest": {
        "title": "SetStructuredContentbyEventIdandVersionrequest",
        "type": "object",
        "properties": {
          "access_type": {
            "$ref": "#/components/schemas/StructuredContentPageAccessType"
          },
          "modules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StructuredContentCreateTextModule"
            },
            "description": "Structured content modules."
          },
          "publish": {
            "type": "boolean",
            "description": "Boolean indicating whether to publish contents after saving."
          },
          "purpose": {
            "$ref": "#/components/schemas/StructuredContentPurpose"
          }
        }
      },
      "SetStructuredContentbyEventIdandVersionresponse": {
        "title": "SetStructuredContentbyEventIdandVersionresponse",
        "type": "object",
        "properties": {
          "error": {
            "$ref": "#/components/schemas/error100"
          }
        }
      },
      "sort_by": {
        "title": "sort_by",
        "enum": [
          "date",
          "distance",
          "best"
        ],
        "type": "string",
        "example": "date"
      },
      "status": {
        "title": "status",
        "enum": [
          "unused",
          "used",
          "refunded"
        ],
        "type": "string",
        "description": "One of unused, used, or refunded",
        "example": "unused"
      },
      "status1": {
        "title": "status1",
        "enum": [
          "draft",
          "live",
          "started",
          "ended",
          "completed",
          "canceled"
        ],
        "type": "string",
        "description": "Status of the event",
        "example": "live"
      },
      "status2": {
        "title": "status2",
        "enum": [
          "started",
          "pending",
          "placed",
          "abandoned",
          "refunded"
        ],
        "type": "string",
        "description": "The status of the order",
        "example": "placed"
      },
      "status4": {
        "title": "status4",
        "enum": [
          "draft",
          "live",
          "archived"
        ],
        "type": "string",
        "description": "Status of the event",
        "example": "live"
      },
      "status5": {
        "title": "status5",
        "enum": [
          "draft",
          "queued",
          "sending",
          "sent",
          "incomplete"
        ],
        "type": "string",
        "description": "The status of the campaign.",
        "example": "draft"
      },
      "status6": {
        "title": "status6",
        "enum": [
          "active",
          "inactive"
        ],
        "type": "string",
        "example": "active"
      },
      "status7": {
        "title": "status7",
        "enum": [
          "canceled",
          "live",
          "started",
          "ended",
          "completed"
        ],
        "type": "string",
        "description": "Status of the event",
        "example": "live"
      },
      "status8": {
        "title": "status8",
        "enum": [
          "disabled",
          "enabled",
          "enabled_incomplete"
        ],
        "type": "string",
        "description": "The activation status for the feature on this event",
        "example": "disabled"
      },
      "status9": {
        "title": "status9",
        "enum": [
          "pending",
          "resolved",
          "deleted"
        ],
        "type": "string",
        "example": "pending"
      },
      "status10": {
        "title": "status10",
        "enum": [
          "attending",
          "not_attending",
          "unpaid"
        ],
        "type": "string",
        "example": "attending"
      },
      "status11": {
        "title": "status11",
        "enum": [
          "attending",
          "not_attending"
        ],
        "type": "string",
        "example": "attending"
      },
      "status12": {
        "title": "status12",
        "enum": [
          "draft",
          "live",
          "started",
          "ended",
          "completed",
          "canceled",
          "all"
        ],
        "type": "string",
        "example": "draft"
      },
      "status14": {
        "title": "status14",
        "enum": [
          "active",
          "inactive",
          "both",
          "all_not_deleted"
        ],
        "type": "string",
        "example": "active"
      },
      "SubcategorybyIDresponse": {
        "title": "SubcategorybyIDresponse",
        "type": "object",
        "properties": {
          "subcategory": {
            "$ref": "#/components/schemas/Subcategory"
          }
        }
      },
      "Subcategory1": {
        "title": "Subcategory1",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Subcategory ID",
            "example": "3003"
          },
          "resource_uri": {
            "type": "string",
            "example": "https://www.eventbriteapi.com/v3/subcategories/3003/"
          },
          "name": {
            "type": "string",
            "description": "Subcategory name",
            "example": "Classical"
          },
          "parent_category": {
            "type": "object",
            "description": "Category this subcategory belongs to"
          }
        }
      },
      "survey_respondent": {
        "title": "survey_respondent",
        "enum": [
          "ticket_buyer",
          "attendee"
        ],
        "type": "string",
        "description": "which respondent type the information must be collected for (ticket_buyer or attendee)",
        "example": "ticket_buyer"
      },
      "teams": {
        "title": "teams",
        "required": [
          "id",
          "token",
          "name",
          "has_password",
          "is_full",
          "logo",
          "spots_left",
          "is_team_member"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Team ID"
          },
          "token": {
            "type": "string",
            "description": "Team token if has not password, else False"
          },
          "name": {
            "type": "string",
            "description": "Team name"
          },
          "has_password": {
            "type": "boolean",
            "description": "Determines if the team has password"
          },
          "is_full": {
            "type": "boolean",
            "description": "Determines if the team capacity is currently full, false if team has no maximum capacity."
          },
          "logo": {
            "type": "string",
            "description": "Url address with thumbnail logo. Returns False if team has not logo"
          },
          "spots_left": {
            "type": "number",
            "description": "Return how many free spots are left on the team"
          },
          "is_team_member": {
            "type": "boolean",
            "description": "Returns if the logged user is a member of the team."
          }
        }
      },
      "terminology": {
        "title": "terminology",
        "enum": [
          "tickets_vertical",
          "endurance_vertical"
        ],
        "type": "string",
        "description": "Which terminology should be used to refer to the event",
        "example": "tickets_vertical"
      },
      "text_code": {
        "title": "text_code",
        "enum": [
          "tickets_not_yet_on_sale",
          "tickets_with_sales_ended",
          "tickets_sold_out",
          "tickets_unavailable",
          "tickets_at_the_door",
          "event_cancelled",
          "event_postponed",
          "checkout_title_tickets",
          "checkout_title_add_ons",
          "checkout_title_donations"
        ],
        "type": "string",
        "description": "Text Code to override.",
        "example": "tickets_not_yet_on_sale"
      },
      "text_codes": {
        "title": "text_codes",
        "enum": [
          "tickets_not_yet_on_sale",
          "tickets_with_sales_ended",
          "tickets_sold_out",
          "tickets_unavailable",
          "tickets_at_the_door",
          "event_cancelled",
          "event_postponed",
          "checkout_title_tickets",
          "checkout_title_add_ons",
          "checkout_title_donations"
        ],
        "type": "string",
        "example": "tickets_not_yet_on_sale"
      },
      "TicketClassCreate1": {
        "title": "TicketClassCreate1",
        "allOf": [
          {
            "$ref": "#/components/schemas/TicketClass1"
          },
          {
            "type": "object",
            "properties": {
              "cost": {
                "$ref": "#/components/schemas/CurrencyCost"
              },
              "description": {
                "type": "string",
                "description": "Description of the ticket"
              },
              "donation": {
                "type": "boolean",
                "description": "Is this a donation? (user-supplied cost)"
              },
              "free": {
                "type": "boolean",
                "description": "Is this a free ticket?"
              },
              "sales_end_relative": {
                "$ref": "#/components/schemas/sales_end_relative"
              },
              "minimum_quantity": {
                "type": "number",
                "description": "Minimum number per order"
              },
              "maximum_quantity": {
                "type": "number",
                "description": "Maximum number per order (blank uses default value)"
              },
              "has_pdf_ticket": {
                "type": "boolean",
                "description": "Whether to include pdf ticket or not"
              },
              "delivery_methods": {
                "type": "string",
                "description": "A list of the available delivery methods for this ticket class"
              },
              "ticket_classes (array[object], optional) - Internal use only.A list of ticket types formatted as: [{â€œidâ€: â€œ1234â€, â€œnameâ€: â€œTicket Nameâ€, â€œcostâ€: â€œUSD,25â€, â€œquantity_totalâ€": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": ""
              }
            }
          }
        ]
      },
      "TicketClass1": {
        "title": "TicketClass1",
        "allOf": [
          {
            "$ref": "#/components/schemas/PublicTicketClass"
          },
          {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of this ticket type"
              },
              "display_name": {
                "type": "string",
                "description": "Pretty long name of this ticket class. For tiered inventory tickets, this includes the tier name.",
                "nullable": true,
                "example": "Gold GA"
              },
              "sorting": {
                "type": "number",
                "description": "Unsigned integer in the order ticket classes are sorted by."
              },
              "capacity": {
                "type": "number",
                "description": "Total available number of this ticket, required for non-donation and non-tiered ticket classes. For normal ticket, null or 0 is not allowed. For donation ticket, null or 0 means unlimited. For tiered inventory ticket, null or 0 means capacity is only limited by tier capacity and/or event capacity.",
                "nullable": true
              },
              "quantity_total": {
                "type": "number",
                "description": "Deprecated, use `capacity` instead."
              },
              "quantity_sold": {
                "type": "number",
                "description": "The number of sold tickets.",
                "nullable": true,
                "example": 20
              },
              "sales_start": {
                "type": "string",
                "nullable": true
              },
              "sales_end": {
                "type": "string",
                "nullable": true
              },
              "hidden": {
                "type": "boolean",
                "description": "Hide this ticket"
              },
              "include_fee": {
                "type": "boolean",
                "description": "Absorb the fee into the displayed cost"
              },
              "split_fee": {
                "type": "boolean",
                "description": "Absorb the payment fee, but show the eventbrite fee"
              },
              "hide_description": {
                "type": "boolean",
                "description": "Hide the ticket description on the event page"
              },
              "hide_sale_dates": {
                "type": "boolean",
                "description": "Hide the sale dates on event landing and ticket selection page",
                "nullable": true,
                "example": false
              },
              "auto_hide": {
                "type": "boolean",
                "description": "Hide this ticket when it is not on sale"
              },
              "auto_hide_before": {
                "type": "string",
                "nullable": true
              },
              "auto_hide_after": {
                "type": "string",
                "nullable": true
              },
              "sales_start_after": {
                "type": "string",
                "description": "The ID of another ticket class - when it sells out, this class will go on sale."
              },
              "order_confirmation_message": {
                "type": "string",
                "description": "Order message per ticket type"
              },
              "sales_channels": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "A list of all supported sales channels ([â€œonlineâ€], [â€œonlineâ€, â€œatdâ€], [â€œatdâ€])"
              },
              "inventory_tier_id": {
                "type": "string",
                "description": "Optional ID of Inventory Tier with which to associate the ticket class"
              },
              "secondary_assignment_enabled": {
                "type": "boolean",
                "description": "Has secondary barcode assignment enabled (for ex/ RFID)",
                "example": false
              }
            }
          }
        ]
      },
      "time_filter": {
        "title": "time_filter",
        "enum": [
          "all",
          "past",
          "current_future"
        ],
        "type": "string",
        "example": "all"
      },
      "totals": {
        "title": "totals",
        "type": "object",
        "properties": {
          "tickets": {
            "type": "number",
            "description": "Total number of tickets sold for the corresponding topic."
          },
          "printed": {
            "type": "number",
            "description": "Total number of tickets printed for the corresponding topic"
          }
        }
      },
      "type": {
        "title": "type",
        "enum": [
          "text",
          "url",
          "email",
          "date",
          "number",
          "address",
          "dropdown"
        ],
        "type": "string",
        "description": "One of text, url, email, date, number, address, or dropdown",
        "example": "text"
      },
      "type2": {
        "title": "type2",
        "enum": [
          "access",
          "hold",
          "coded",
          "public"
        ],
        "type": "string",
        "description": "The type of discount.",
        "example": "coded"
      },
      "type3": {
        "title": "type3",
        "enum": [
          "access",
          "coded",
          "hold",
          "public"
        ],
        "type": "string",
        "description": "The type of discount",
        "example": "access"
      },
      "type4": {
        "title": "type4",
        "enum": [
          "checkbox",
          "dropdown",
          "text",
          "paragraph",
          "radio",
          "waiver"
        ],
        "type": "string",
        "description": "Type of Question",
        "example": "text"
      },
      "type7": {
        "title": "type7",
        "enum": [
          "coded",
          "access",
          "public",
          "hold"
        ],
        "type": "string",
        "example": "coded"
      },
      "type8": {
        "title": "type8",
        "enum": [
          "organization",
          "event",
          "ticket_class",
          "assortment_plan"
        ],
        "type": "string",
        "description": "Type of scope.",
        "example": "organization"
      },
      "UnpublishanEventresponse": {
        "title": "UnpublishanEventresponse",
        "type": "object",
        "properties": {
          "unpublished": {
            "type": "boolean",
            "example": true
          }
        }
      },
      "UnpublishanEventresponse1": {
        "title": "UnpublishanEventresponse1",
        "allOf": [
          {
            "$ref": "#/components/schemas/Error"
          },
          {
            "type": "object",
            "properties": {
              "error": {
                "$ref": "#/components/schemas/error32"
              }
            }
          }
        ]
      },
      "UpdateaCapacityTierrequest": {
        "title": "UpdateaCapacityTierrequest",
        "type": "object",
        "properties": {
          "capacity_tier": {
            "$ref": "#/components/schemas/CapacityTierUpdate"
          }
        }
      },
      "UpdateaCapacityTierresponse": {
        "title": "UpdateaCapacityTierresponse",
        "allOf": [
          {
            "$ref": "#/components/schemas/Error"
          },
          {
            "type": "object",
            "properties": {
              "error": {
                "$ref": "#/components/schemas/error10"
              }
            }
          }
        ]
      },
      "UpdateaCapacityTierresponse2": {
        "title": "UpdateaCapacityTierresponse2",
        "allOf": [
          {
            "$ref": "#/components/schemas/Error"
          },
          {
            "type": "object",
            "properties": {
              "error": {
                "$ref": "#/components/schemas/error6"
              }
            }
          }
        ]
      },
      "UpdateaCapacityTierresponse4": {
        "title": "UpdateaCapacityTierresponse4",
        "allOf": [
          {
            "$ref": "#/components/schemas/Error"
          },
          {
            "type": "object",
            "properties": {
              "error": {
                "$ref": "#/components/schemas/error8"
              }
            }
          }
        ]
      },
      "UpdateaDiscountrequest": {
        "title": "UpdateaDiscountrequest",
        "type": "object",
        "properties": {
          "discount": {
            "$ref": "#/components/schemas/DiscountBase"
          }
        }
      },
      "UpdateaTicketClassrequest": {
        "title": "UpdateaTicketClassrequest",
        "type": "object",
        "properties": {
          "ticket_class": {
            "$ref": "#/components/schemas/TicketClassUpdate"
          }
        }
      },
      "UpdateaTicketClassresponse": {
        "title": "UpdateaTicketClassresponse",
        "allOf": [
          {
            "$ref": "#/components/schemas/Error"
          },
          {
            "type": "object",
            "properties": {
              "error": {
                "$ref": "#/components/schemas/error123"
              }
            }
          }
        ]
      },
      "UpdateaTicketGrouprequest": {
        "title": "UpdateaTicketGrouprequest",
        "type": "object",
        "properties": {
          "ticket_group": {
            "$ref": "#/components/schemas/TicketGroupCreate"
          }
        }
      },
      "UpdateaVenuerequest": {
        "title": "UpdateaVenuerequest",
        "type": "object",
        "properties": {
          "venue": {
            "$ref": "#/components/schemas/VenueCreate"
          }
        }
      },
      "UpdateanEventrequest": {
        "title": "UpdateanEventrequest",
        "type": "object",
        "properties": {
          "event": {
            "$ref": "#/components/schemas/EventUpdate"
          }
        }
      },
      "UpdateanEventresponse": {
        "title": "UpdateanEventresponse",
        "allOf": [
          {
            "$ref": "#/components/schemas/Error"
          },
          {
            "type": "object",
            "properties": {
              "error": {
                "$ref": "#/components/schemas/error24"
              }
            }
          }
        ]
      },
      "UpdateanInventoryTierrequest": {
        "title": "UpdateanInventoryTierrequest",
        "type": "object",
        "properties": {
          "inventory_tier": {
            "$ref": "#/components/schemas/InventoryTierUpdateBase"
          }
        }
      },
      "UpdateanInventoryTierresponse": {
        "title": "UpdateanInventoryTierresponse",
        "type": "object",
        "properties": {
          "inventory_tier": {
            "$ref": "#/components/schemas/InventoryTier"
          }
        }
      },
      "UpdateanInventoryTierresponse1": {
        "title": "UpdateanInventoryTierresponse1",
        "allOf": [
          {
            "$ref": "#/components/schemas/Error"
          },
          {
            "type": "object",
            "properties": {
              "error": {
                "$ref": "#/components/schemas/error56"
              }
            }
          }
        ]
      },
      "UpdateanInventoryTierresponse3": {
        "title": "UpdateanInventoryTierresponse3",
        "allOf": [
          {
            "$ref": "#/components/schemas/Error"
          },
          {
            "type": "object",
            "properties": {
              "error": {
                "$ref": "#/components/schemas/error6"
              }
            }
          }
        ]
      },
      "UpdateanInventoryTierresponse5": {
        "title": "UpdateanInventoryTierresponse5",
        "allOf": [
          {
            "$ref": "#/components/schemas/Error"
          },
          {
            "type": "object",
            "properties": {
              "error": {
                "$ref": "#/components/schemas/error42"
              }
            }
          }
        ]
      },
      "UpdateDefaultQuestionbyIdrequest": {
        "title": "UpdateDefaultQuestionbyIdrequest",
        "type": "object",
        "properties": {
          "question": {
            "$ref": "#/components/schemas/CannedQuestionCreate"
          },
          "Headers": {
            "type": "string",
            "description": "Authorization: Bearer PERSONAL_OAUTH_TOKEN"
          }
        }
      },
      "UpdateDefaultQuestionbyIdresponse": {
        "title": "UpdateDefaultQuestionbyIdresponse",
        "type": "object",
        "properties": {
          "question": {
            "$ref": "#/components/schemas/CannedQuestion"
          }
        }
      },
      "UpdateDefaultQuestionbyIdresponse1": {
        "title": "UpdateDefaultQuestionbyIdresponse1",
        "type": "object",
        "properties": {
          "status_code": {
            "type": "number",
            "example": 400
          },
          "error_description": {
            "type": "string",
            "description": "Unknown parameter (string)",
            "example": "There are errors with your arguments: question.require3d"
          },
          "error": {
            "type": "string",
            "example": "ARGUMENTS_ERROR"
          }
        }
      },
      "UpdateDefaultQuestionbyIdresponse3": {
        "title": "UpdateDefaultQuestionbyIdresponse3",
        "type": "object",
        "properties": {
          "status_code": {
            "type": "number",
            "example": 404
          },
          "error_description": {
            "type": "string",
            "example": "The event you requested does not exist"
          },
          "error": {
            "type": "string",
            "example": "NOT_FOUND"
          }
        }
      },
      "UpdateDisplaySettingsrequest": {
        "title": "UpdateDisplaySettingsrequest",
        "type": "object",
        "properties": {
          "display_settings": {
            "$ref": "#/components/schemas/DisplaySettings"
          }
        }
      },
      "UpdateMultipleInventoryTiersrequest": {
        "title": "UpdateMultipleInventoryTiersrequest",
        "type": "object",
        "properties": {
          "inventory_tiers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InventoryTierUpdate"
            },
            "description": ""
          }
        }
      },
      "UpdateMultipleInventoryTiersresponse": {
        "title": "UpdateMultipleInventoryTiersresponse",
        "type": "object",
        "properties": {
          "inventory_tiers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InventoryTier"
            },
            "description": ""
          }
        }
      },
      "UpdateMultipleInventoryTiersresponse1": {
        "title": "UpdateMultipleInventoryTiersresponse1",
        "allOf": [
          {
            "$ref": "#/components/schemas/Error"
          },
          {
            "type": "object",
            "properties": {
              "error": {
                "$ref": "#/components/schemas/error26"
              }
            }
          }
        ]
      },
      "UpdateMultipleInventoryTiersresponse3": {
        "title": "UpdateMultipleInventoryTiersresponse3",
        "allOf": [
          {
            "$ref": "#/components/schemas/Error"
          },
          {
            "type": "object",
            "properties": {
              "error": {
                "$ref": "#/components/schemas/error6"
              }
            }
          }
        ]
      },
      "UpdateMultipleInventoryTiersresponse5": {
        "title": "UpdateMultipleInventoryTiersresponse5",
        "allOf": [
          {
            "$ref": "#/components/schemas/Error"
          },
          {
            "type": "object",
            "properties": {
              "error": {
                "$ref": "#/components/schemas/error8"
              }
            }
          }
        ]
      },
      "UpdateTicketBuyerSettingsforanEventrequest": {
        "title": "UpdateTicketBuyerSettingsforanEventrequest",
        "type": "object",
        "properties": {
          "ticket_buyer_settings": {
            "$ref": "#/components/schemas/TicketBuyerSettingsUpdate"
          }
        }
      },
      "UpdateTicketBuyerSettingsforanEventresponse": {
        "title": "UpdateTicketBuyerSettingsforanEventresponse",
        "allOf": [
          {
            "$ref": "#/components/schemas/Error"
          },
          {
            "type": "object",
            "properties": {
              "error": {
                "$ref": "#/components/schemas/error107"
              }
            }
          }
        ]
      },
      "UpdateTicketBuyerSettingsforanEventresponse2": {
        "title": "UpdateTicketBuyerSettingsforanEventresponse2",
        "allOf": [
          {
            "$ref": "#/components/schemas/Error"
          },
          {
            "type": "object",
            "properties": {
              "error": {
                "$ref": "#/components/schemas/error6"
              }
            }
          }
        ]
      },
      "UpdateTicketBuyerSettingsforanEventresponse4": {
        "title": "UpdateTicketBuyerSettingsforanEventresponse4",
        "allOf": [
          {
            "$ref": "#/components/schemas/Error"
          },
          {
            "type": "object",
            "properties": {
              "error": {
                "$ref": "#/components/schemas/error111"
              }
            }
          }
        ]
      },
      "UploadaMediaFileresponse": {
        "title": "UploadaMediaFileresponse",
        "allOf": [
          {
            "$ref": "#/components/schemas/Error"
          },
          {
            "type": "object",
            "properties": {
              "error": {
                "$ref": "#/components/schemas/error78"
              }
            }
          }
        ]
      },
      "variant_input_type": {
        "title": "variant_input_type",
        "enum": [
          "one",
          "multiple",
          "single"
        ],
        "type": "string",
        "description": "Type of variants for this ticket, \"one\", \"single\" or \"multiple\". A ticket may have more than one variant. Those multiple variants may be offered to purchaser as a flat list (multiple) or a dropdown choice (single).",
        "example": "one"
      },
      "VenueBase2": {
        "title": "VenueBase2",
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the venue",
            "example": "Great Venue"
          },
          "age_restriction": {
            "$ref": "#/components/schemas/age_restriction1"
          },
          "capacity": {
            "type": "number",
            "description": "Set specific capacity (if omitted, sums ticket capacities)",
            "example": 100
          }
        }
      },
      "VenueBase3": {
        "title": "VenueBase3",
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Venue name",
            "example": "Great Venue"
          },
          "age_restriction": {
            "type": "string",
            "description": "Age restriction of the venue",
            "nullable": true
          },
          "capacity": {
            "type": "number",
            "description": "Venue capacity",
            "nullable": true,
            "example": 100
          }
        }
      },
      "Verifypasswordforateamrequest": {
        "title": "Verifypasswordforateamrequest",
        "required": [
          "password"
        ],
        "type": "object",
        "properties": {
          "password": {
            "type": "string",
            "description": "Password to verify"
          }
        }
      },
      "Verifypasswordforateamresponse": {
        "title": "Verifypasswordforateamresponse",
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          }
        }
      },
      "video": {
        "title": "video",
        "type": "object",
        "properties": {
          "display_size": {
            "type": "string"
          },
          "embed_url": {
            "type": "string"
          },
          "thumbnail_url": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        }
      },
      "video1": {
        "title": "video1",
        "type": "object",
        "properties": {
          "display_size": {
            "type": "string"
          },
          "url": {
            "type": "string",
            "description": "for purposes of the event listing page, can only be YouTube."
          }
        }
      }
    },
    "securitySchemes": {
      "httpBearer": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  },
  "security": [
    {
      "httpBearer": []
    }
  ],
  "tags": [
    {
      "name": "Attendee",
      "description": "<a name=\"attendee_object\"></a>\n\n## Attendee Object\n\nThe Attendee object represents the details of Attendee (ticket holder to an [Event](#event_object)). The model is one Attendee per each sold ticket.\n\nIf the Event is specified to only collect information on the [Order](#order_object) owner (the default), all returned Attendees have the same information, apart from the barcodes and [Ticket Class](#ticket_class_object) ID.\n\nAttendee objects are considered private; meaning that all Attendee information is only available to the [User](#user_object) and Order owner.\n\n#### Attendee Fields\n\n|        Field        |                   Type                    |                                               Description                                                                      |\n| :------------------ | :---------------------------------------- | -------------------------------------------------------------------------------------------------------------------------------|\n| `created`           | `datetime`                                | Attendee creation date and time (i.e. when order was placed).                                                                  |\n| `changed`           | `datetime`                                | Date and time of last change to Attendee.                                                                                      |\n| `ticket_class_id`   | `string`                                  | Ticket Class used by Attendee when registering.                                                                                |\n| `variant_id`        | `string`                                  | Variant of Ticket Class used by Attendee when registering.                                                                     |\n| `ticket_class_name` | `string`                                  | Name of Ticket Class used by Attendee when registering.                                                                        |\n| `quantity`          | `integer`                                 | Always `1`.                                                                                                                    |\n| `costs`             | [attendee_cost](#attendee_cost)           | Attendee ticket cost breakdown.                                                                                                |\n| `profile`           | [attendee-profile](#attendee_profile)     | Attendee basic profile information.                                                                                            |\n| `addresses`         | [attendee-addresses](#attendee_addresses) | Attendee address.                                                                                                              |\n| `questions`         | [attendee-questions](#attendee_questions) | (Optional) Custom questions for the Attendee.                                                                                  |\n| `answers`           | [attendee-answers](#attendee_answers)     | (Optional) Attendee's anwers to custom questions.                                                                              |\n| `barcodes`          | [attendee-barcodes](#attendee_barcodes)   | Attendee's entry bar code.                                                                                                     |\n| `team`              | [attendee-team](#attendee_team)           | (Optional) Attendee team information.                                                                                          |\n| `affiliate`         | `attendee-affiliate`                      | (Optional) Attendeeâ€™s affiliate code.                                                                                          |\n| `checked_in`        | `boolean`                                 | true = Attendee checked in.                                                                                                    |\n| `cancelled`         | `boolean`                                 | true = Attendee cancelled.                                                                                                     |\n| `refunded`          | `boolean`                                 | true = Attendee receives a refund.                                                                                             |\n| `status`            | `string`                                  | Attendee status.                                                                                                               |\n| `event_id`          | `string`                                  | Event ID of the Attendee's Event.                                                                                              |\n| `order_id`          | `string`                                  | Order ID under which this Attendee's ticket was purchased.                                                                     |\n| `guestlist_id`      | `string`                                  | Guest list ID under which the Attendee is listed. A null value means that this Attendee is not a guest.                        |\n| `invited_by`        | `string`                                  | Attendee who invited guest. A null value means that this Attendee is not a guest.                                              |\n| `delivery_method`   | `string`                                  | Ticket delivery method used for the Attendee. Can be `will_call`, `electronic`, `standard_shipping` or `third_party_shipping`. |\n\n<a name=\"attendee_cost\"></a>\n\n#### Attendee Cost Fields\n\nContains the Attendeeâ€™s cost breakdown.\n\n|      Field       |    Type    |                                                                                     Description                                                                                      |\n| :--------------- | :--------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |\n| `base_price`     | `currency` | Attendee's ticket price excluding fees and tax. Do not expose to Attendee as it displays an incorrect value if the [Ticket Class](#ticket_class_object) `include_fee` field is used. |\n| `eventbrite_fee` | `currency` | Attendee's fee. Do not expose this field to Attendee as it displays an incorrect value if the [Ticket Class](#ticket_class_object) `include_fee` field is used.                      |\n| `tax`            | `currency` | Amount of tax charged for the ticket.                                                                                                                                                |\n| `payment_fee`    | `currency` | Fee for ticket payment processing.                                                                                                                                                   |\n| `gross`          | `currency` | Attendee total cost (`base_price` + `eventbrite_fee` + `payment_fee` + `tax`).                                                                                                       |\n\n<a name=\"attendee_profile\"></a>\n\n#### Attendee Profile Fields\n\nContains Attendee personal information.\n\n|     Field     |   Type    |                                                        Description                                                         |\n| :------------ | :-------- | -------------------------------------------------------------------------------------------------------------------------- |\n| `name`        | `string`  | Attendee name. To ensure forward compatibility with non-Western names, use this field instead of `first_name`/`last_name`. |\n| `email`       | `string`  | Attendee email address.                                                                                                    |\n| `first_name`  | `string`  | Attendee first name. Use `name` field instead.                                                                             |\n| `last_name`   | `string`  | Attendee last name. Use `name` field instead.                                                                              |\n| `prefix`      | `string`  | (Optional) Attendee title or honorific that appears at the front of the name, such as Mr., Ms.                             |\n| `suffix`      | `string`  | (Optional) Attendee suffix that appears at the end of the name (e.g. Jr., Sr.)                                             |\n| `age`         | `integer` | (Optional) Attendee age.                                                                                                   |\n| `job_title`   | `string`  | (Optional) Attendee job title.                                                                                             |\n| `company`     | `string`  | (Optional) Attendee company name.                                                                                          |\n| `website`     | `string`  | (Optional) Attendee website address.                                                                                       |\n| `blog`        | `string`  | (Optional) Attendee blog address.                                                                                          |\n| `gender`      | `string`  | (Optional) Attendee gender, currently either â€œmaleâ€ or â€œfemaleâ€.                                                           |\n| `birth_date ` | `date`    | (Optional) Attendee birth date.                                                                                            |\n| `cell_phone`  | `string`  | (Optional) Attendee cell/mobile phone number.                                                                              |\n\n<a name=\"attendee_addresses\"></a>\n\n#### Attendee Address Fields\n\nContains home, shipping, and work addresses associated with the Attendee. All fields are optional.\n\n| Field  |   Type    |        Description         |\n| :----- | :-------- | -------------------------- |\n| `home` | `address` | Attendee home address.     |\n| `ship` | `address` | Attendee shipping address. |\n| `work` | `address` | Attendee work address.     |\n\n<a name=\"attendee_questions\"></a>\n\n#### Attendee Questions Fields\n\nUse to present custom questions to an Attendee.\n\n|   Field    |   Type    |                                Description                                 |\n| :--------- | :-------- | -------------------------------------------------------------------------- |\n| `id`       | `string`  | Custom question ID.                                                        |\n| `label`    | `string`  | Custom question label.                                                     |\n| `type`     | `string`  | Can be `text`, `url`, `email`, `date`, `number`, `address`, or `dropdown`. |\n| `required` | `boolean` | true = Answer is required.                                                 |\n\n<a name=\"attendee_answers\"></a>\n\n#### Attendee Answers Fields\n\nContains information on an Attendee's answers to custom questions.\n\n|     Field     |   Type   |                                                   Description                                                    |\n| :------------ | :------- | ---------------------------------------------------------------------------------------------------------------- |\n| `question_id` | `string` | Custom question ID.                                                                                              |\n| `question`    | `string` | Text of the custom question.                                                                                     |\n| `type`        | `string` | Can be `text`, `url`, `email`, `date`, `number`, `address`, or `dropdown`.                                       |\n| `answer`      | varies   | Answer type. Generally use the `string` value; except when an answer of `address` or `date` is more appropriate. |\n\n<a name=\"attendee_barcodes\"></a>\n\n#### Attendee Barcodes Fields\n\nRepresents the barcodes for this Attendee Order (usually one Attendee per each sold ticket).\n\n|    Field     |    Type    |                                          Description                                           |\n| :----------- | :--------- | ---------------------------------------------------------------------------------------------- |\n| `barcode`    | `string`   | Barcode contents. This field value is null when: <br />- User has turned off the printable tickets option. <br />- Method of ticket delivery does not match Attendee. <br />- Attendee method of ticket delivery is not electronic. <br />in order to prevent exposing the barcode value to the Attendee. When viewed by the User with â€œevent.orders:readâ€ permission, the barcode is always shown.                                         |\n| `status`     | `string`   | Barcode status. Can be `unused`, `used`, or `refunded`.                                        |\n| `created`    | `datetime` | Attendee barcode creation date and time.                                                       |\n| `changed`    | `datetime` | Last change date and time to Attendee barcode.                                                 |\n| `is_printed` | `boolean`  | true = Ticket is printed.                                                                      |\n\n<a name=\"attendee_team\"></a>\n\n#### Attendee Team Fields\n\nRepresents Attendee team information if the Event has teams configured. An Attendee team is a group of Attendees at an Event, for example a team at a sports tournament.\n\n|     Field     |    Type    |          Description           |\n| :------------ | :--------- | ------------------------------ |\n| `id`          | `string`   | Team ID.                       |\n| `name`        | `string`   | Team name.                     |\n| `date_joined` | `datetime` | When Attendee joined the team. |\n| `event_id`    | `string`   | Event the team is part of.     |\n\n#### Attendee Assigned Unit Fields\n\nContains details of Attendee seating assignment.\n\n|      Field       |                    Type                     |                                                                                                                                           Description                                                                                                                                           |\n| :--------------- | :------------------------------------------ | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| `unit_id`        | `string`                                    | Attendee seating assignment ID. This value can never be `null`.                                                                                                                                                                                                                                 |\n| `description`    | `string`                                    | Detailed description of seating assignment. This is concatenated from the 'labels' and 'titles' fields. This value can never be `null`.                                                                                                                                                         |\n| `location_image` | [unit-location-image] (#unit-location-image) | Physical location of seat assignment on the seatmap. This value is `null` or omitted if seatmap is not published for the Event.                                                                                                                                                                 |\n| `labels`         | `list`                                      | Label of seating assignment. This value can never be `null`.                                                                                                                                                                                                                                    |\n| `titles`         | `list`                                      | Title of seating assignment. This value can never be `null`. Number of titles are always equal to or more than the number of labels. If seat location is displayed in the grid view, API client is expected to group assigned locations by title and use a separate grid for each unique title. |\n\n#### Attendee Note Fields\n\nThe Attendee note representes a free-form text note related to an Attendee.\n\n|     Field      |    Type    |                    Description                     |\n| :------------- | :--------- | -------------------------------------------------- |\n| `created`      | `datetime` | Note creation date and time.                       |\n| `text`         | `string`   | Note content up to 2000 characters.                |\n| `type`         | `string`   | This value is always â€˜attendeeâ€™.                   |\n| `event_id`     | `event`    | Event associated with this Attendee note.          |\n| `order_id`     | `order`    | Order associated with this Attendee note.          |\n| `attendeee_id` | `attendee` | Attendee ID associated with this Attendee note.    |\n| `author_name`  | `string`   | First and last name Attendee who created the note. |\n\n<a name=\"unit-location-image\"></a>\n\n#### Unit Location Image Fields\n\nSeat assignment physical coordinate on the seatmap and the corresponding seatmap image URL.\n\n| Field |   Type   |                                                                             Description                                                                              |\n| :---- | :------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| `url` | `string` | Fully qualified URL of the seatmap image. Currently all seatmap images are in 660x660 .png format. This value can never be `null`.                                   |\n| `x`   | `float`  | Seat's x-coordinate location within the seatmap, as measured by % from the left edge of seatmap. The value ranges from 0.0 to 100.0. This value can never be `null`. |\n| `y`   | `float`  | Seat's y-coordinate location within the seatmap, as measured by % from the left edge of seatmap. The value ranges from 0.0 to 100.0. This value can never be `null`. |\n\n#### Expansions\n\nInformation from expansions fields are not normally returned when requesting information. To receive this information in a request, expand the request.\n\n|         Expansion          |           Source                    |                                    Description                                    |\n| :------------------------- | :---------------------------------- | --------------------------------------------------------------------------------- |\n| `event`                    | `event_id`                          | Attendee's Event.                                                                 |\n| `order`                    | `order_id`                          | Attendee's Order.                                                                 |\n| `promotional_code`         | `promotional_code`                  | Promotional Code applied to Attendee's Order.                                     |\n| `assigned_number`          | `assigned_number`                   | Attendee bib number, if one exists for a race or endurance Event.                 |\n| `answers`                  | ` attendee-answers`                 | (Optional) Attendee answers to custom questions.                                  |\n| `survey`                   | `attendee-questions`                | (Optional) Custom questions presented to the Attendee.                            |\n| `survey_responses`         | `attendee-survey-responses`(object) | (Optional) Attendee's responses to survey questions.                              |\n| `assigned_unit`            | `attendee-assigned-unit`    | (Optional) Attendeeâ€™s seating assignment details if Event has reserved seating.   |\n| `contact_list_preferences` | `contact_list_preferences`  | (Optional) Opt-in preferences for the email address associated with the Attendee. |"
    },
    {
      "name": "Categories",
      "description": "<a name=\"categories_object\"></a>\n\n## Category Object\n\nAn overarching category that an event falls into (vertical). Examples are â€œMusicâ€, and â€œEnduranceâ€."
    },
    {
      "name": "Discount",
      "description": "<a name=\"discount_object\"></a>\n\n## Discount Object\n\nThe Discount object represents a discount that an Order owner can use when purchasing tickets to an [Event](#event_object).\n\nA Discount can be used to a single [Ticket Class](#ticket_class_object) or across multiple Ticket Classes for multiple Events simultaneously (known as a cross event Discount).\n\nThere are four types of Discounts:\n\n+ **Public Discount.** Publically displays Discount to Order owner on the Event Listing and Checkout pages. Only used with a single Event.\n\n+ **Coded Discount.** Requires Order owner to use a secret code to access the Discount.\n\n+ **Access Code.** Requires Order owner to use a secret code to access hidden tickets. Access codes can also optionally contain a discount amount.\n\n+ **Hold Discount.** Allows Order owner to apply or unlock Discount for seats on hold.\n\nThe display price of a ticket is calculated as: \\\n`price_before_discount` - `discount_amount` = `display_price`\n\nNotes:\n\n* Public and Coded Discounts can specify either an amount off or a percentage off, but not both types discounts.\n\n* Public Discounts should not contain apostrophes or non-alphanumeric characters (except â€œ-â€, â€œ_â€, â€ â€, â€œ(â€, â€)â€, â€œ/â€, and â€œâ€).\n\n* Coded Discounts and Access Codes should not contain spaces, apostrophes or non-alphanumeric characters (except â€œ-â€, â€œ_â€, â€œ(â€, â€)â€, â€œ/â€, and â€œâ€).\n\n#### Fields\n\nUse these fields to specify information about a Discount.\n\n|         Field         |       Type       |                                                                                              Description                                                                                              |\n| :-------------------- | :--------------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| `code`                | `string`         | Discount name for a Public Discount, or the code for a Coded Discount and Access Code.                                                                                                                |\n| `type`                | `string`         | Discount type. Can be `access`, `coded`, `public` or `hold`.                                                                                                                                          |\n| `end_date`            | `datetime`       | Date until which the Discount code is usable. Date is naive and assumed relative to the timezone of an Event. If null or empty, the discount is usable until the Event end_date. ISO 8601 notation: `YYYY-MM-DDThh:mm:ss`.|\n| `end_date_relative`   | `integer`        | End time in seconds before the start of the Event until which the Discount code is usable. If null or empty, the discount is usable until the Event end_date.                                         |\n| `amount_off`          | `decimal`        | Fixed amount applied as a Discount. This amount is not expressed with a currency; instead uses the Event currency from 0.01 to 99999.99. Only two decimals are allowed. The default is `null` for an Access Code. |\n| `percent_off`         | `decimal`        | Percentage amount applied as a Discount. Displayed in the ticket price during checkout, from 1.00 to 100.00. Only two decimals are allowed. The default is `null` for an Access Code.                             |\n| `quantity_available`  | `integer`        | Number of times this Discount can be used; `0` indicates unlimited use.                                                                                                                               |\n| `quantity_sold`       | `integer`        | Number of times this Discount has been used. This is a read only field.                                                                                                                               |\n| `start_date`          | `local datetime` | Date from which the Discount code is usable. If null or empty, the Discount is usable effective immediately.                                                                                          |\n| `start_date_relative` | `integer`        | Start time in seconds before the start of the Event from which the Discount code is usable. If null or empty, the Discount is usable effective immediately.                                           |\n| `ticket_class_ids`    | `list`           | List of discounted Ticket Class IDs for a single Event. Leave empty if you want to see all the tickets for the Event.                                                                                 |\n| `event_id`            | `string`         | Single Event ID to which the Discount can be used. Leave empty for Discounts.                                                                                                                         |\n| `ticket_group_id`     | `string`         | [Ticket Group](#ticket_group_object) ID to which the Discount can be used.                                                                                                                            |\n| `hold_ids`            | `list`           | List of hold IDs this discount can unlock. Null if this discount does not unlock a hold.                                                                                                              |\n\nThe following conditions define the extend of the Discount:\n\n* If `event_id` is provided and `ticket_class_ids` are not provided, a single Event Discount is created for all Event tickets.\n\n* If both `event_id` and `ticket_class_ids` are provided, a single Event Discount is created for the specific Event  tickets.\n\n* If `ticket_group_id` is provided, a Discount is created for the Ticket Group.\n\n* If neither `event_id` nor `ticket_group_id` are provided, a Discount is created that applies to all tickets for an [Organization's](#organization_object) Events, including future Events.\n\n#### Expansions\n\nInformation from expansions fields are not normally returned when requesting information. To receive this information in a request, expand the request.\n\n|     Expansion      |               Source               |                                                                           Description                                                                            |\n| :----------------- | :--------------------------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| `event`            | `event_id`                         | Single Event to which the Discount can be used.                                                                                                                  |\n| `ticket_group`     | `ticket_group_id`                  | Ticket Group to which the Discount can be used.                                                                                                                  |\n| `reserved_seating` | `ticket-reserved-seating-settings` | Reserved seating settings for the [Ticket Class](#ticket_class_object). This expansion is not returned for Ticket Classes that do not support reserved seasting. |"
    },
    {
      "name": "Display Settings",
      "description": "<a name=\"display_settings_object\"></a>\n\n## Display Settings Object\n\nThe Display Settings object represents the settings that create the [Event](#event_object) display as shown on the Event Listing page."
    },
    {
      "name": "Event Capacity",
      "description": ""
    },
    {
      "name": "Event Description",
      "description": "<a name=\"event_description\"></a>\n\n## Event Description\n\nEvent Descriptions have two representations:\n\n1. A fully-rendered HTML version of the event summary AND event description, and\n\n2. A \"raw\" version of the description that is broken up into its distinct modules.\nTo set and retrieve modules, please see the [Structured Content documentation](#structure_content_documentation).\n\nFor more in depth description for how to set the event description, please see the [event description tutorial](https://www.eventbrite.com/platform/docs/event-description).\n\n|"
    },
    {
      "name": "Event Schedule",
      "description": "<a name=\"schedule_object\"></a>\n\n## Event Schedule Object\n\nThe Event Schedule object is a set of rules that is used to add occurrences to a series parent event. A series parent event may have multiple schedules associated with it. Each schedule may only be associated with one series parent event.\n\n<a name=\"schedules-create-api\"></a>"
    },
    {
      "name": "Event Search",
      "description": "<a name=\"event_search\"></a>\n\nLists public [Events](#event_object) from Eventbrite."
    },
    {
      "name": "Event Series",
      "description": "<a name=\"series_object\"></a>\n\n## Event Series Object\n\nAn Event Series is a repeating [Event](#event_object) with a sequence of multiple and various dates. These dates may or may not be in a predictable order.\n\nAn Event Series is made up of the parent Event, and child Events that represent each different date of the parent Event. Each child Event is created with the details of the parent Event.\n\nFor instructions on how to create an Event Series, please refer to the [Create Event API](#events-create-api)."
    },
    {
      "name": "Event Teams",
      "description": "Work with the team information of an event"
    },
    {
      "name": "Event",
      "description": "<a name=\"event_object\"></a>\n\n## Event Object\n\nThe Event object represents an Eventbrite Event. An Event is owned by one [Organization](#organization_object).\n\n#### Public Fields\n\nUse these fields to specify information about an Event. For publicly listed Events, this information can be retrieved by all Eventbrite [Users](#user_object) and Eventbrite applications.\n\n|       Field       |       Type       |                                               Description                                               |\n| :---------------- | :--------------- | ------------------------------------------------------------------------------------------------------- |\n| `name`            | `multipart-text` | Event name.                                                                                             |\n| `summary`         | `string`         | (Optional) Event summary. Short summary describing the event and its purpose.                           |\n| `description`     | `multipart-text` | (*DEPRECATED*) (Optional) Event description. Description can be lengthy and have significant formatting.               |\n| `url`             | `string`         | URL of the Event's Listing page on eventbrite.com.                                                      |\n| `start`           | `datetime-tz`    | Event start date and time.                                                                              |\n| `end`             | `datetime-tz`    | Event end date and time.                                                                                |\n| `created`         | `datetime`       | Event creation date and time.                                                                           |\n| `changed`         | `datetime`       | Date and time of most recent changes to the Event.                                                      |\n| `published`       | `datetime`       | Event publication date and time.                                                                        |\n| `status`          | `string`         | Event status. Can be `draft`, `live`, `started`, `ended`, `completed` and `canceled`.                   |\n| `currency`        | `string`         | Event [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) currency code.                                 |\n| `online_event`    | `boolean`        | true = Specifies that the Event is online only (i.e. the Event does not have a [Venue](#venue_object)). |\n| `hide_start_date` | `boolean`        | If true, the event's start date should never be displayed to attendees.                                     |\n| `hide_end_date`   | `boolean`        | If true, the event's end date should never be displayed to attendees.                                       |\n\n#### Private Fields\n\nUse these fields to specify properties of an Event that are only available to the [User](#user_object).\n\n|        Field         |   Type    |                                                                                                Description                                                                                                |\n| :------------------- | :-------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| `listed`             | `boolean` | true = Allows the Event to be publicly searchable on the Eventbrite website.                                                                                                                              |\n| `shareable`          | `boolean` | true = Event is shareable, by including social sharing buttons for the Event to Eventbrite applications.                                                                                                  |\n| `invite_only`        | `boolean` | true = Only invitees who have received an email inviting them to the Event are able to see Eventbrite applications.                                                                                       |\n| `show_remaining`     | `boolean` | true = Provides, to Eventbrite applications, the total number of remaining tickets for the Event.                                                                                                         |\n| `password`           | `string`  | Event password used by visitors to access the details of the Event.                                                                                                                                       |\n| `capacity`           | `integer` | Maximum number of tickets for the Event that can be sold to [Attendees](#attendee_object). The total capacity is calculated by the sum of the quantity_total of the [Ticket Class](#ticket_class_object). |\n| `capacity_is_custom` | `boolean` | true = Use custom capacity value to specify the maximum number of Attendees for the Event. False = Calculate the maximum number of Attendees for the Event from the total of all Ticket Class capacities. |\n\n<a name=\"music_properties_object\"></a>\n\n#### Music Properties\n\nThe Music Properties object includes a few attributes of an event for Music clients. To retrieve Music Properties by Event ID, use the `music_properties` expansion.\n\n|       Field       |   Type   |                                                                                Description                                                                                 |\n| :---------------- | :------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| `age_restriction` | `enum`   | Minimum age requirement of event attendees.                                                                                                                                |\n| `presented_by`    | `string` | Main music event sponsor.                                                                                                                                                  |\n| `door_time`       | `string` | Time relative to UTC that the doors are opened to allow people in the the day of the event. When not set, the event will not have any door time set. 2019-05-12T-19:00:00Z |\n\n<a name=\"event_expansions\" />\n\n#### Expansions\n\nInformation from expansions fields are not normally returned when requesting information. To receive this information in a request, expand the request.\n\n|       Expansion           |        Source         |                                                                                                                       Description                                                                                                                        |\n| :------------------------ | :-------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| `logo`                    | `logo_id`             | Event image logo.                                                                                                                                                                                                                                        |\n| `venue`                   | `venue_id`            | Event [Venue](#venue_object).                                                                                                                                                                                                                            |\n| `organizer`               | `organizer_id`        | Event [Organizer](#organizer_object).                                                                                                                                                                                                                    |\n| `format`                  | `format_id`           | Event [Format](#formats_object).                                                                                                                                                                                                                         |\n| `category`                | `category_id`         | Event [Category](#categories_object).                                                                                                                                                                                                                    |\n| `subcategory`             | `subcategory_id`      | Event [Subcategory](#subcategories_object).                                                                                                                                                                                                              |\n| `bookmark_info`           | `bookmark_info`       | Indicates whether a user has saved the Event as a bookmark. Returns false if there are no bookmarks. If there are bookmarks, returns a a dictionary specifying the number of end-users who have bookmarked the Event as a count object like `{count:3}`. |\n| `refund_policy`           | `refund_policy`       | Event [Refund Policy](#refund_policy_object).                                                                                                                                                                                                           |\n| `ticket_availability`     | `ticket_availability` | Overview of availability of all Ticket Classes                                                                                                                                                                           |\n| `external_ticketing`      | `external_ticketing`  | External ticketing data for the Event.                                                                                                                                                                                                                   |\n| `music_properties`        | `music_properties`    | Event [Music Properties](#music_properties_object)                                                                                                                                                                                                       |\n| `publish_settings`        | `publish_settings`    | Event publish settings.                                                                                                                                                                                                                                  |\n| `guestlist_metrics`       | `guestlist_metrics`   | Metrics of Event guestlists.                                                                                                                                                                                                                             |\n| `basic_inventory_info`    | `basic_inventory_info`| Indicates whether the event has Ticket Classes, Inventory Tiers, Donation Ticket Classes, Ticket Rules, Inventory Add-Ons, and/or Admission Inventory Tiers.                                                                                             |\n| `event_sales_status`      | `event_sales_status`  | Eventâ€™s sales status details                                                                                                                                                                                                                             |\n| `checkout_settings   `    | `checkout_settings`   | Event checkout and payment settings.                                                                                                                                                                                                                     |\n| `listing_properties`      | `listing_properties`  | Display/listing details about the event                                                                                                                                                                                                                  |\n| `has_digital_content`     | `has_digital_content` | Whether or not an event [Has Digital Content](#has_digital_content_object)                                                                                                                                                                                                   |"
    },
    {
      "name": "Formats",
      "description": "<a name=\"formats_object\"></a>\n\n## Format Object\n\nThe Format object represents an [Event](#event_object) type, for example seminar, workshop or concert. Specifying a Format helps website visitors discover a certain type of Event."
    },
    {
      "name": "Inventory Tiers",
      "description": "\"Tiered Inventory\" allows organizer to define inventory (usually total quantity) to be shared by multiple ticket classes.\n\nFor example, \"Admission\" inventory tier has total quantity of 100, which can be sold as Adult ticket, Child ticket, or Senior ticket.\n\nFor the same event, another tier, \"Parking\", may have total quantity of 200 with VIP Parking ticket and Regular parking ticket.\n\n<a name=\"inventory_tier_object\"></a>\n\n## Inventory Tier Object\n\nThe Inventory Tier object represents an entity that controls capacity (an allocation of total quantity) across multiple tickets to be sold.\n\n#### GA Holds\n\nHolds are tickets or capacity held back from the main sale inventory for other needs, such as for press, guests of the artist\nor the artist's label, etc.\n\nA hold tier could be created under a parent tier, and the quantity in the hold tier would be deducted from the parent tier.\n\nFor example, \"Lawn\" inventory tier has a capacity total of 1000 and total quantity of 900 which can be sold as VIP, Adult, or Child ticket.\n\n100 of the 1000 is held under \"Marketing\" hold inventory tier, which can be sold as Marketing VIP, Marketing Adult, or Marketing Child ticket.\n\n#### Expansions\n\nInformation from expansions fields are not normally returned when requesting information. To receive this information in a request, expand the request.\n\n|     Expansion     |       Source       |               Description               |\n| :---------------- | :----------------- | --------------------------------------- |\n| `image`           | `image_id`         | Image for the Inventory Tier.           |"
    },
    {
      "name": "Media",
      "description": "<!-- Here is a tutorial on [Media Upload in EventBrite](https://www.eventbrite.com/developer/v3/resources/uploads/). -->\n\n<a name=\"media_object\"></a>\n\n## Media Object\n\nThe Media object represents an image that can be included with an [Event](#event_object) listing, for example to provide branding or further information on the Event."
    },
    {
      "name": "Online Event Page",
      "description": "<a name=\"online_event_page\"></a>\n\n## Online Event Page\n\nThe Online Event Page (formerly known as the Digital Links Page, or Digital Content) is a feature that allows online event organizers to create a separate landing page for attendees of that event - and can include information pertinent to that event, such as webinar links, documents, etc.\n\nTo understand better how to create the Online Event Page, please see the [Online Event Page Tutorial](https://www.eventbrite.com/platform/docs/online-event-page)\n\nFor the api that powers Online Event Page, please see the [Structured Content documentation](#structure_content_documentation).\n\n<a name=\"has_digital_content_object\"></a>\n\n## Has Digital Content Object\n\nThis is the object that is returned from the [Event Expansions](#event_expansions)\n\n|       Field           |   Type    |                        Description                         |\n| :---------------------| :-------- | ---------------------------------------------------------- |\n| `has_digital_content` | `boolean` | whether or not an event has digital content                |\n| `digital_content_url` | `string`  | The url to the Online Event Page for an event, only accessible if the attendee has purchased a ticket.|"
    },
    {
      "name": "Order",
      "description": "<a name=\"order_object\"></a>\n\n## Order object\n\nThe Order object represents an order made against Eventbrite for one or more [Ticket Classes](#ticket_class_object). In other words, a single Order can be made up of multiple tickets. The object contains an Order's financial and transactional information; use the [Attendee](#attendee_object) object to return information on Attendees.\n\nOrder objects are considered private; meaning that all Order information is only available to the Eventbrite [User](#user_object) and Order owner.\n\n#### Order Fields\n\n|      Field       |                Type                 |                                                          Description                                                          |\n| :--------------- | :---------------------------------- | ----------------------------------------------------------------------------------------------------------------------------- |\n| `created`        | `datetime`                          | Date and time the Order was placed and the Attendee created.                                                                  |\n| `changed`        | `datetime`                          | Date and time of the last change to Attendee.                                                                                 |\n| `name`           | `string`                            | Order owner name. To ensure forward compatibility with non-Western names, use this field instead of `first_name`/`last_name`. |\n| `first_name`     | `string`                            | Order owner first name. Use `name` field instead.                                                                             |\n| `last_name`      | `string`                            | Order owner last name. Use `name` field instead.                                                                              |\n| `email`          | `string`                            | Order owner email address.                                                                                                    |\n| `costs`          | [order-costs](#order_cost)          | Cost breakdown of the Order.                                                                                                  |\n| `event_id`       | `string`                            | Order's [Event](#event_object) ID.                                                                                            |\n| `time_remaining` | `number`                            | Time remaining to complete Order (in seconds).                                                                                |\n| `questions`      | [order-questions](#order_questions) | (Optional) Custom questions shown to Order's owner.                                                                           |\n| `answers`        | [order-answers](#order_answers)     | (Optional) Answers to custom questions shown to Order's owner.                                                                |\n| `promo_code`     | `string`                            | (Optional) [Discount](#discount_object) code applied to Order.                                                                |\n| `status`         | `string`                            | Order status.                                                                                                                 |\n\n<a name=\"order_cost\"></a>\n\n#### Order Costs Fields\n\nContains a breakdown of Order costs.\n\n|          Field          |                  Type                   |                                                                                                 Description                                                                                                 |\n| :---------------------- | :-------------------------------------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| `base_price`            | `currency`                              | Order amount without fees and tax. Use instead the `display_price` field if the [Ticket Class](#ticket_class_object) `include_fee` field is used; otherwise an incorrect value is shown to the Order owner. |\n| `display_price`         | `currency`                              | Order amount without fees and tax. This field shows the correct value to the Order owner when the Ticket Class `include_fee` field is used.                                                                 |\n| `display_fee`           | `currency`                              | Order amount with fees and tax included (absorbed) in the price as displayed.                                                                                                                               |\n| `gross`                 | `currency`                              | Total amount of Order.                                                                                                                                                                                      |\n| `eventbrite_fee`        | `currency`                              | Eventbrite fee as portion of Order `gross` amount. Do not expose this field to Order owner.                                                                                                                 |\n| `payment_fee`           | `currency`                              | Payment processor fee as portion of Order `gross` amount.                                                                                                                                                   |\n| `tax`                   | `currency`                              | Tax as portion of Order `gross` amount passed to Event [Organization](#organization_object).                                                                                                                |\n| `display_tax`           | [order-display-tax](#order_display_tax) | Order tax. Same value as `tax` field, but also includes the tax name.                                                                                                                                       |\n| `price_before_discount` | `currency`                              | Order price before a [Discount](#discount_object) code is applied. If no discount code is applied, value should be equal to `display_price`.                                                                |\n| `discount_amount`       | `currency`                              | Order total Discount. If no discount code is applied, discount_amount will not be returned.                                                                                                                 |\n| `discount_type`         | `string`                                | Type of Discount applied to Order. Can be `null` or `coded`, `access`, `public` or `hold`. If no discount code is applied, discount_type will not be returned.                                              |\n| `fee_components`        | `Cost Component` (list)                 | List of price costs components that belong to the fee display group.                                                                                                                                        |\n| `tax_components`        | `Cost Component` (list)                 | List of price costs components that belong to the tax display group.                                                                                                                                        |\n| `shipping_components`   | `Cost Component` (list)                 | List of price costs components that belong to the shippig display group.                                                                                                                                    |\n| `has_gts_tax`           | `boolean`                               | Indicates if any of the tax_components is a gts tax.                                                                                                                                                        |\n| `tax_name`              | `string`                                | The name of the tax that applies, if any.                                                                                                                                                                   |\n\n<a name=\"order_display_tax\"></a>\n\n#### Display Tax Fields\n\n| Field  |    Type    | Description |\n| :----- | :--------- | ----------- |\n| `name` | `string`   | Tax name.   |\n| `tax`  | `currency` | Tax amount. |\n\n#### Refund Request Fields\n\nThe Order includes a refund request.\n\n|     Field      |          Type          |                             Description                             |\n| :------------- | :--------------------- | ------------------------------------------------------------------- |\n| `from_email`   | `string`               | Email used to create the refund request.                            |\n| `from_name`    | `string`               | Refund request name.                                                |\n| `status`       | `string`               | Refund request status.                                              |\n| `message`      | `string`               | Message associated with the refund request.                         |\n| `reason`       | `string`               | Refund request reason code.                                         |\n| `last_message` | `string`               | Last message associated with the last status of the refund request. |\n| `last_reason`  | `string`               | Last reason code of the refund request.                             |\n| `items`        | list of [refund_item](#refund_item) | Requested refunded items of the refund request.        |\n\n<a name=\"refund_item\"></a>\n\n#### Refund Item Fields\n\nA Refund Request contains a refund item.\n\n|        Field             |    Type    |                                                                                                                        Description                                                                                                                                                                              |\n| :----------------------- | :--------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| `event_id`               | `string`   | Refund item Event.                                                                                                                                                                                                                                                                                              |\n| `order_id`               | `string`   | Refund item Order. Field can be `null`.                                                                                                                                                                                                                                                                         |\n| `processed_date`         | `datetime` | (Optional) The date and time this refund item was processed, if it has been processed.                                                                                                                                                                                                                          |\n| `item_type`              | `string`   | Refund item Order type. Use `order` for full refund, `attendee` for partial refund for the Attendee, or `merchandise` for partial refund as merchandise.                                                                                                                                                        |\n| `amount_processed`       | `currency` | (Optional) The amount of money refunded. This will be absent if the refund has not been processed.                                                                                                                                                                                                              |\n| `amount_requested`       | `currency` | (Optional) The amount of money requested for refund. Only appears for attendee-initiated refunds.                                                                                                                                                                                                               |\n| `quantity_processed`     | `number`   | (Optional) Quantity refunded. If the `item_type` field value is `order`, `quantity_processed` is always 1. If the `item_type` field value is `attendee` or `merchandise`, then the `quantity_processed` value displays the number of items processed. This will be absent if the refund has not been processed. |\n| `quantity_requested`     | `number`   | (Optional) Quantity requested to be refunded. If the `item_type` is `order`, `quantity_requested` is always 1. If the `item_type` is `attendee` or `merchandise`, then the `quantity_requested` value displays the number of items requested for a refund. Only appears for attendee-initiated refund items.    |\n| `refund_reason_code`     | `string`   | A descriptive code for the refund reason                                                                                                                                                                                                                                                                        |\n| `status`                 | `string`   | Refund item status, one of `pending`, `processed`, or `error`                                                                                                                                                                                                                                                   |\n\n<a name=\"order_questions\"></a>\n\n#### Order Questions Fields\n\nUse to present Custom Questions to an Attendee.\n\n|   Field    |   Type    |                                Description                                |\n| :--------- | :-------- | ------------------------------------------------------------------------- |\n| `id`       | `string`  | Custom Question ID.                                                       |\n| `label`    | `string`  | Custom Question Label.                                                    |\n| `type`     | `string`  | Can be `text`, `url`, `email`, `date`, `number`, `address`, or `dropdown` |\n| `required` | `boolean` | true = Answer to custom question is required.                             |\n\n<a name=\"order_answers\"></a>\n\n#### Order Answers Fields\n\nContains information on an Attendee's answers to custom questions.\n\n|     Field     |   Type   |                                                   Description                                                    |\n| :------------ | :------- | ---------------------------------------------------------------------------------------------------------------- |\n| `question_id` | `string` | Custom Question ID.                                                                                              |\n| `attendee_id` | `string` | Attendee ID.                                                                                                     |\n| `question`    | `string` | Custom Question text.                                                                                            |\n| `type`        | `string` | Can be `text`, `url`, `email`, `date`, `number`, `address`, or `dropdown`.                                       |\n| `answer`      | varies   | Answer type. Generally use the `string` value; except when an answer of `address` or `date` is more appropriate. |\n\n#### Order Notes Fields\n\nOrder Notes is free-form text related to an Order.\n\n|     Field     |    Type    |                            Description                             |\n| :------------ | :--------- | ------------------------------------------------------------------ |\n| `created`     | `datetime` | Order note creation date and time.                                 |\n| `text`        | `string`   | Order note content up to 2000 characters.                          |\n| `type`        | `string`   | Type of Order associated with order note, always and only `order`. |\n| `event_id`    | `event`    | ID of Event associated with Order.                                 |\n| `order_id`    | `order`    | ID of Order associated with order note.                            |\n| `author_name` | `string`   | First and last name Order owner associated with order note.        |\n\n#### Expansions\n\nInformation from expansions fields are not normally returned when requesting information.\nTo receive this information in a request, expand the request.\n\n|     Expansion                |       Source                                            |                                        Description                                         |\n| :--------------------------- | :------------------------------------------------------ | ------------------------------------------------------------------------------------------ |\n| `event`                      | `event_id`                                              | Order's associated Event.                                                                  |\n| `attendees`                  | `attendee`(list)                                        | Order's Attendees.                                                                         |\n| `merchandise`                | `merchandise`(list)                                     | Merchandise included in this Order.                                                        |\n| `concierge`                  | `concierge`                                             | Order's concierge.                                                                         |\n| `refund_requests`            | `refund_request`                                        | Order's refund request.                                                                    |\n| `survey`                     | `order-questions`                                       | (Optional) Order's custom questions.                                                       |\n| `survey_responses`           | `order-survey-responses`(object)                        | (Optional) Order's responses to survey questions.                                          |\n| `answers`                    | `order-answers`                                         | (Optional) Order's answers to custom questions.                                            |\n| `ticket_buyer_settings`      | `ticket_buyer_settings`                                 | (Optional) Include information relevant to the purchaser, including confirmation messages. |\n| `contact_list_preferences`   | `contact_list_preferences`                              | (Optional) Opt-in preferences for the email address associated with the Order.             |"
    },
    {
      "name": "Organizations Members",
      "description": "<a name=\"members_object\"></a>\n\n## Organization Member Object\n\nThis object represents a Member of an [Organization](#organization_object) with a [Role](#roles_object)."
    },
    {
      "name": "Organization Roles",
      "description": "<a name=\"roles_object\"></a>\n\n## Organization Role Object\n\nOrganization Role is an object representing a set of permissions owned by an [Organization](#organization_object).\n\nRoles are grouped together by the Organization object, and a Role can only belong to one Organization. If an Organization is deleted, all Roles belonging to that Organization are also deleted."
    },
    {
      "name": "Organization",
      "description": "<a name=\"organization_object\"></a>\n\n## Organization Object\n\nAn object representing a business structure (like a Marketing department) in which [Events](#event_object) are created and managed. Organizations are owned by one [User](#users_object) and can have multiple [Members](#members_object).\n\nThe Organization object is used to group Members, [Roles](#roles_object), [Venues](#venue_object) and [Assortments](#assortments_object).\n\n#### Public Fields\n\nUse these fields to specify information about an Organization.\n\n|   Field    |   Type   |                                                                       Description                                                                        |\n| :--------- | :------- | -------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| `id`       | `string` | Organization ID. Must be obtained via an API request, such as a List your Organizations request. The `organization_id` is NOT equal to an `organizer_id` (the string in an Organizer Profile URL). |\n| `name`     | `string` | Organization Name.                                                                                                                                       |\n| `image_id` | `string` | (Optional) ID of the image for an Organization.                                                                                                          |\n| `vertical` | `string` | Type of business vertical within which this Organization operates. Currently, the only values are `default` and `music`. If not specified, the value is `default`. |"
    },
    {
      "name": "Pricing",
      "description": "<a name=\"Pricing_object\"></a>\n\n## Pricing Object\n\nThe Pricing object represents all the available fee rates for different currencies, countries, [Assortments](#assortments_object) and sales channels."
    },
    {
      "name": "Questions",
      "description": "<a name=\"questions_object\"></a>\n\n## Questions Object\n\nThe Questions object represents questions that are presented to an Order Owner as part of the registration process. There are two types of Questions:\n\n* Default Questions. For example first name, last name and email address.\n\n* Custom Questions. Questions and answers unique to the account and/or Event and created by the User. For example, to require the acknowledgement of terms and conditions as part of the ticket purchase process."
    },
    {
      "name": "Reports",
      "description": "<a name=\"reports_object\"></a>\n\n## Report Object\n\nThe Report object represents the Reports that you can retrieve using the API. This includes Reports on:\n\n+ Sales activity\n\n+ [Attendees](#attendee_object) for an [Event](#event_object)."
    },
    {
      "name": "Seat Map",
      "description": "<a name=\"seatmap_object\"></a>\n\n## Seat Map Object\n\nThe Seat Map object represents the info of reserved seating Seat Map.\n\n#### Expansions\n\nInformation from expansions fields are not normally returned when requesting information. To receive this information in a request, expand the request.\n\n|     Expansion          |          Source          |                                   Description                                   |\n| :--------------------- | :----------------------- | ------------------------------------------------------------------------------- |\n| `event`                | `event_id`               | Event that this seat map belongs to.                                            |\n| `venue`                | `venue_id`               | Venue that this seat map belongs to.                                            |\n| `basic_inventory_info` | `basic_inventory_info`   | Indicates whether the event has Ticket Classes, Inventory Tiers, Donation Ticket Classes, Ticket Rules, Inventory Add-Ons, and/or Admission Inventory Tiers.|\n\n<a name=\"list_seat_maps_for_organization\"></a>"
    },
    {
      "name": "Structured Content",
      "description": "<a name=\"structure_content_documentation\"></a>\nEndpoints for getting and setting structured content.  Structured content is mainly used to create a rich event description.  Structured content works off of the concept of pages and modules - each event has a structured content page that can contain multiple modules of different types content.\n\nStructured content works as an insert only system, so any time you want to update module(s), you will need to resubmit all of the content you had previously submitted plus any changes.  Structured content also works as a versioned system, so you will need to increment with a new version every time.\n\nFor more in depth description for how to get and set the full event description with regards to structured content, please see the [event description tutorial](https://www.eventbrite.com/platform/docs/event-description).\n\nStructured content also powers the Online Event Page.  For more information about the feature and how to use the structured content api in the context of Online Event Page, please visit the [Online Event Page Tutorial](https://www.eventbrite.com/platform/docs/online-event-page).\n\n|         Field         |                 Type               |                          Description                           |\n| :-------------------- | :--------------------------------- | -------------------------------------------------------------- |\n| `page_version_number` | `string`                           | The number representing the current version of the description |\n| `modules`             | `array[Structured Content Module]` | The list of Modules                                            |\n\n### Structured Content Modules\n\nEvent descriptions are comprised of one or more modules, and there are three currently-supported module types: `text`, `image`, `video`.\nEach module type will contain type-specific `data`.\n\n|  Field  |    Type   |                                                                                                                                                                                                        Description                                                                                                                                                                                                                 |\n| :------ | :-------- | :----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| `type`  | `string`  | Module type. We currently support `text`, `image`, and `video` types, but this list will change as more module types are added. Clients should be prepared to handle modules types they don't know how to render. In this case, clients may refuse to render the edit interface for these modules, but they should at a minimum store the data associated with these types and send it back to the server when sending edits of known types. |\n| `data`  | `object`  | The module data specific for this module type.\n\nFor examples of module data formats for POST and GET, please refer to the [event description tutorial](https://www.eventbrite.com/platform/docs/event-description)."
    },
    {
      "name": "Texts Overrides",
      "description": "<a name=\"text_overrides_object\"></a>\n\n## Text Overrides Object\n\nThe Text Overrides objects allow you to customize certain strings shown during ticket sales on a per event basis."
    },
    {
      "name": "Ticket Buyer Settings",
      "description": "<a name=\"ticket_buyer_object\"></a>\n\n## Ticket Buyer Settings Object\n\nUse this object to specify the following settings for an [Event's](#event_object) ticket buyers:\n\n* Receive confirmation message.\n\n* Display instructions on ticket.\n\n* ID of ticket Event.\n\n* Ticket is refundable.\n\n* Receive URL, in place of confirmation message, for post-purchase information.\n\n* Message to display after ticket sales end.\n\n* Whether attendees are allowed to update information after registration.\n\n* Name/Title of the registration survey page.\n\n* Information about the registration survey.\n\n* Survey registration time limit (in minutes).\n\n* Which respondent type the information must be collected for (ticket_buyer or attendee).\n\n* Which ticket classes the information must be collected for."
    },
    {
      "name": "Ticket Class",
      "description": "<a name=\"ticket_class_object\"></a>\n\n## Ticket Class Object\n\nThe Ticket Class object represents a possible ticket class (i.e. ticket type) for an [Event](#event_object).\n\nTypically, multiple different types of tickets for an Event can be purchased in one transaction. These ticket types do not necessarily map directly to the one [Attendee](#attendee_object) per one ticket model (instead for example, an Attendee might buy multiple tickets for different days of an [Event Series](#event_series_object)).\n\nTicket Classes can be one of the following types:\n\n* **Free.** Ticket Classes that have no cost or currency. An Event with only free Ticket Classes is a free Event and doesn't require payout information.\n\n* **Paid.** Ticket Classes with an associated cost in the Event's currency. Currency is specified in the Event object and is duplicated in the Ticket Class object as the return value of a `currency type`.\n\n* **Donation.** Order owner is prompted to enter at their own discretion an amount to donate during checkout. There is no fixed cost of donation.\n\nTicket Class price can be communicated in a way that either includes Eventbrite fees in the total displayed price or shows fees split out as a separate cost from the total ticket price. The [User](#user_object) determines how costs are communicated.\n\nTicket Class responses for Events not owned by the [Organization](#organization_object) only shows cost and fees, as displayed on the Ticket Listing page. Results from Events the Organization owns also includes information on the `actual_cost` and `actual_fee`, which identify the amount of the ticket that the Organization is paid (actual_cost) and the Eventbrite fee deducted from the total charged amount (actual_fee).\n\nTicket Classes can be grouped using the [Ticket Group](#ticket_group_object) object, most commonly to apply a [Cross-Event Discount](#discount_object) to multiple Ticket Classes.\n\n#### Public Fields\n\nUse these fields to specify information about a Ticket Class. For publically listed Events, this Ticket Class information can be viewed by all [Users](#user_object) and Eventbrite applications.\n\n|       Field        |    Type    |                                                          Description                                                                                  |\n| :----------------- | :--------- | ------------------------------------------------------------------------------------------------------------------------------------------------------|\n| `name`             | `string`   | Ticket Class name.                                                                                                                                    |\n| `description`      | `string`   | (Optional) Ticket Class description.                                                                                                                  |\n| `sorting`          | `integer`  | The order in which ticket classes are listed during purchase flow on the event listing page.                                                          |\n| `cost`             | `currency` | Display cost of the Ticket Class (paid only) on Ticket Listing page.                                                                                  |\n| `fee`              | `currency` | Display fee of the Ticket Class (paid only) on Ticket Listing page.                                                                                   |\n| `donation`         | `boolean`  | true = Ticket Class is a Donation.                                                                                                                    |\n| `free`             | `boolean`  | true = Ticket Class is Free.                                                                                                                          |\n| `minimum_quantity` | `integer`  | Minimum number of tickets that can be purchased per [Order](#order_object).                                                                           |\n| `maximum_quantity` | `integer`  | Maximum number of tickets that can be purchased per Order.                                                                                            |\n| `has_pdf_ticket`   | `boolean`  | true = Attendee receives a PDF Order confirmation.                                                                                                    |\n| `delivery_methods` | `list`     | List of delivery methods enabled for this Ticket Class. Possible values are: [`electronic`, `will_call`, `standard_shipping`, `third_party_shipping`] |\n| `on_sale_status`   | `string`   | Ticket class sale status. One of: `AVAILABLE`, `SOLD_OUT`                                                                                             |\n| `image_id`         | `string`   | Image ID for this ticket class (Used for add-ons).                                                                                                    |\n\n#### Private Fields\n\nUse these fields to specify properties of a Ticket Class that are only available [Organizations Members](#members_object).\n\n|            Field               |    Type    |                                                                           Description                                                                            |\n| :----------------------------- | :--------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| `capacity`                     | `integer`  | Number of this Ticket Class available for sale.                                                                                                                  |\n| `quantity_sold`                | `integer`  | Number of this Ticket Class that has previously been sold (does not include tickets being purchased in real time).                                               |\n| `hidden`                       | `boolean`  | true = Ticket Class is hidden from the public.                                                                                                                   |\n| `sales_start`                  | `datetime` | Date and time that sales for this Ticket Class begin.                                                                                                            |\n| `sales_end`                    | `datetime` | Date and time that sales for this Ticket Class end.                                                                                                              |\n| `sales_end_relative`           | `object`   | Relative values used to calculate ticket sales_end. Can only be used for series parent tickets.                                                                  |\n| `sales_start_after`            | `string`   | ID of a Ticket Class that, when another Ticket Class sells out, triggers the start of sales of this ticket class.                                                |\n| `include_fee`                  | `boolean`  | true = Ticket fee included in the ticket price as shown on the Ticket Listing page. This parameter cannot be used in conjunction with the `split_fee` parameter. |\n| `split_fee`                    | `boolean`  | true = Ticket fee not included in the ticket price as shown on the Ticket Listing page. Instead the `actual_cost` and `actual_fee` are displayed separately.     |\n| `hide_description`             | `boolean`  | true = Ticket Class description hidden on the Ticket Listing page (also removes `description` from public responses).                                            |\n| `hide_sale_dates`              | `boolean`  | true = Ticket Class sale dates will be hidden on the event landing page and in ticket selection.                                                                 |\n| `auto_hide`                    | `boolean`  | true = Ticket Class hidden on the Ticket Listing page when tickets are not for sale .                                                                            |\n| `auto_hide_before`             | `datetime` | Overrides the default time that auto hide is automatically disabled, so that the ticket class continues to be displayed. Otherwise `sales_start` is shown.       |\n| `auto_hide_after`              | `datetime` | Override the default time that auto hide is automatically enabled, so that the the ticket class continues to be hidden. Otherwise `sales_end` is shown.          |\n| `order_confirmation_message`   | `string`   | Confirmation message displayed when an Order is completed.                                                                                                       |\n| `secondary_assignment_enabled` | `boolean`  | true = Has secondary barcode assignment enabled (for ex/ RFID)                                                                                                   |\n\n#### Expansions\n\nInformation from expansions fields are not normally returned when requesting information. To receive this information in a request, expand the request.\n\n| Expansion               |   Source               |         Description                       |\n| :---------------------- | :--------------------- | ----------------------------------------- |\n| `event`                 | `event_id`             | Event for the Ticket Class.               |\n| `image`                 | `image_id`             | Image for the Ticket Class.               |"
    },
    {
      "name": "Ticket Group",
      "description": "<a name=\"ticket_group_object\"></a>\n\n## Ticket Group Object\n\nThe Ticket Group object is used to group [Ticket Classes](#ticket_class_object).\n\nMost commonly used to apply a [Cross-Event Discount](#discount_object) to multiple Ticket Classes.\n\n#### Fields\n\n|       Field        |     Type     |                                                                                             Description                                                                                             |\n| :----------------- | :----------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| `name`             | `string`     | Ticket Group name. A name containing more than 20 characters is automatically truncated.                                                                                                            |\n| `status`           | `string`     | Ticket Group status. Can be `transfer`, `live`, `deleted` or `archived`. By default, the status is `live`.                                                                                          |\n| `event_ticket_ids` | `dict`       | Dictionary showing the Ticket Class IDs associated with a specific Event ID.                                                                                                                        |\n| `tickets`          | `objectlist` | List of Ticket Class. Includes for each Ticket Class `id`, `event_id`, `sales_channels`, `variants` and `name`. By default this field is empty, unless the Ticket Class Expansions fields are used. |"
    },
    {
      "name": "User",
      "description": ">**Note:** Note These URLs will accept â€œmeâ€ in place of a user ID in URLs - for example, /users/me/orders/ will return orders placed by the current user.\n\n<a name=\"user_object\"></a>\n\n## User Object\n\nUser is an object representing an Eventbrite account. Users are [Members](#members_object) of an [Organization](#organization_object)."
    },
    {
      "name": "Venue",
      "description": "<a name=\"venue_object\"></a>\n\n## Venue Object\n\nThe Venue object represents the location of an [Event](#event_object) (i.e. where an Event takes place).\n\nVenues are grouped together by the [Organization](#organization_object) object.\n\n#### Venue Fields\n\n|       Field       |   Type    |                        Description                         |\n| :---------------- | :-------- | ---------------------------------------------------------- |\n| `address`         | `address` | Venue address.                                             |\n| `id`              | `string`  | Venue ID.                                                  |\n| `age_restriction` | `string`  | Age restriction of the Venue.                              |\n| `capacity`        | `number`  | Maximum number of tickets that can be sold for the Venue.  |\n| `name`            | `string`  | Venue name.                                                |\n| `latitude`        | `string`  | Latitude coordinates of the Venue address.                 |\n| `longitude`       | `string`  | Longitude coordinates of the Venue address.                |"
    },
    {
      "name": "Webhooks",
      "description": "<a name=\"webhooks_object\"></a>\n\n## Webhook Object\n\nAn object representing a webhook associated with the Organization."
    }
  ]
}
